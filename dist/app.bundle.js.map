{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://phd-game/./node_modules/seedrandom/index.js","webpack://phd-game/./node_modules/seedrandom/lib/alea.js","webpack://phd-game/./node_modules/seedrandom/lib/tychei.js","webpack://phd-game/./node_modules/seedrandom/lib/xor128.js","webpack://phd-game/./node_modules/seedrandom/lib/xor4096.js","webpack://phd-game/./node_modules/seedrandom/lib/xorshift7.js","webpack://phd-game/./node_modules/seedrandom/lib/xorwow.js","webpack://phd-game/./node_modules/seedrandom/seedrandom.js","webpack://phd-game/./src/effect/attribute.ts","webpack://phd-game/./src/effect/effect.ts","webpack://phd-game/./src/effect/item.ts","webpack://phd-game/./src/effect/status.ts","webpack://phd-game/./src/endGameState.ts","webpack://phd-game/./src/event/actions.ts","webpack://phd-game/./src/event/conditions.ts","webpack://phd-game/./src/event/core.ts","webpack://phd-game/./src/event/engine.ts","webpack://phd-game/./src/event/expression.ts","webpack://phd-game/./src/event/loader.ts","webpack://phd-game/./src/event/translationKeySource.ts","webpack://phd-game/./src/gameEngine.ts","webpack://phd-game/./src/gui/guiBase.ts","webpack://phd-game/./src/gui/guiEffectProviderList.ts","webpack://phd-game/./src/gui/guiFooter.ts","webpack://phd-game/./src/gui/guiFx.ts","webpack://phd-game/./src/gui/guiGame.ts","webpack://phd-game/./src/gui/guiMessageWindow.ts","webpack://phd-game/./src/gui/guiModalBox.ts","webpack://phd-game/./src/gui/guiStatsBar.ts","webpack://phd-game/./src/gui/textEngine.ts","webpack://phd-game/./src/i18n/localization.ts","webpack://phd-game/./src/utils/collection.ts","webpack://phd-game/./src/utils/expression.ts","webpack://phd-game/./src/utils/network.ts","webpack://phd-game/./src/utils/priorityQueue.ts","webpack://phd-game/./src/utils/random.ts","webpack://phd-game/./src/utils/simpleRegistry.ts","webpack://phd-game/./src/variableStore.ts","webpack://phd-game/./node_modules/decode-uri-component/index.js","webpack://phd-game/./node_modules/filter-obj/index.js","webpack://phd-game/./node_modules/js-yaml/dist/js-yaml.mjs","webpack://phd-game/./node_modules/query-string/base.js","webpack://phd-game/./node_modules/query-string/index.js","webpack://phd-game/./node_modules/split-on-first/index.js","webpack://phd-game/webpack/bootstrap","webpack://phd-game/webpack/runtime/amd define","webpack://phd-game/webpack/runtime/amd options","webpack://phd-game/webpack/runtime/compat get default export","webpack://phd-game/webpack/runtime/define property getters","webpack://phd-game/webpack/runtime/hasOwnProperty shorthand","webpack://phd-game/webpack/runtime/make namespace object","webpack://phd-game/webpack/runtime/node module decorator","webpack://phd-game/./src/app.ts"],"sourcesContent":["// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","import { downloadAndParse } from \"../utils/network\";\r\nimport { SimpleRegistry } from \"../utils/simpleRegistry\";\r\nimport { load as loadYaml } from 'js-yaml';\r\n\r\n/**\r\n * Defines an attributes, which can be modified by effects.\r\n */\r\nexport class Attribute {\r\n\r\n    constructor(private _id: string, private _baseValue: number,\r\n        private _minValue: number = -Infinity,\r\n        private _maxValue: number = Infinity) { }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    get baseValue(): number {\r\n        return this._baseValue;\r\n    }\r\n\r\n    get minValue(): number {\r\n        return this._minValue;\r\n    }\r\n\r\n    get maxValue(): number {\r\n        return this._maxValue;\r\n    }\r\n\r\n}\r\n\r\nexport class AttributeRegistry extends SimpleRegistry<Attribute> {\r\n\r\n    get name(): string {\r\n        return 'attributes';\r\n    }\r\n\r\n    async loadAttributes(url: string): Promise<void> {\r\n        let obj: any = await downloadAndParse(url, loadYaml);\r\n        if (obj == undefined) return;\r\n        if (!('attributes' in obj) || !Array.isArray(obj['attributes'])) {\r\n            throw new Error('Expect an array of attribute definitions.');\r\n        }\r\n        const attributeDefs: any[] = obj['attributes'];\r\n        for (let attributeDef of attributeDefs) {\r\n            if (!('id' in attributeDef) ||\r\n                typeof attributeDef['id'] !== 'string') {\r\n                throw new Error('Missing valid attribute id definition.');\r\n            }\r\n            const attributeId: string = attributeDef['id'];\r\n            if (!('baseValue' in attributeDef) ||\r\n                typeof attributeDef['baseValue'] !== 'number') {\r\n                throw new Error('Missing valid base value definition.');\r\n            }\r\n            const baseValue: number = attributeDef['baseValue'];\r\n            let minValue = -Infinity;\r\n            if ('minValue' in attributeDef) {\r\n                if (typeof attributeDef['minValue'] !== 'number' ||\r\n                    isNaN(attributeDef['minValue'])) {\r\n                    throw new Error('minValue must be a valid number.');\r\n                }\r\n                minValue = attributeDef['minValue'];\r\n            }\r\n            let maxValue = Infinity;\r\n            if ('maxValue' in attributeDef) {\r\n                if (typeof attributeDef['maxValue'] !== 'number' ||\r\n                    isNaN(attributeDef['maxValue'])) {\r\n                    throw new Error('maxValue must be a valid number.');\r\n                }\r\n                maxValue = attributeDef['maxValue'];\r\n            }\r\n            this.add(new Attribute(attributeId, baseValue, minValue, maxValue));\r\n        }\r\n        console.log(`Successfully registered ${attributeDefs.length} attributes.`);\r\n    }\r\n}\r\n\r\nexport enum AttributeModifierType {\r\n    /**\r\n     * Modifies the attribute value by an absolute amount.\r\n     */\r\n    Absolute,\r\n    /**\r\n     * Modifies the attribute value relatively after other types of modifications.\r\n     */\r\n    Relative,\r\n    /**\r\n     * Modifies the attribute value relatively only based on its base value.\r\n     */\r\n    RelativeToBase,\r\n}\r\n\r\nexport interface CombinedAttributeModifierAmounts {\r\n    absolute: number;\r\n    relative: number;\r\n    relativeToBase: number;\r\n}\r\n\r\n/**\r\n * Describes a modification to an attribute. When multiple modifiers of\r\n * different types are affecting the same attribute, the final attribute value\r\n * is computed via the following formula:\r\n * \r\n * (base_value * (1 + sum(relative_to_base_amount)) + sum(absolute_amount))\r\n *  * (1 + sum(relative_amount))\r\n */\r\nexport class AttributeModifier {\r\n\r\n    constructor(private _target: string, private _type: AttributeModifierType,\r\n        private _amount: number) { }\r\n\r\n    /**\r\n     * Retrieves the attribute id which this modifier targets.\r\n     */\r\n    get target(): string {\r\n        return this._target;\r\n    }\r\n\r\n    get type(): AttributeModifierType {\r\n        return this._type;\r\n    }\r\n\r\n    get amount(): number {\r\n        return this._amount;\r\n    }\r\n\r\n    static fromObject(obj: any, registry: AttributeRegistry): AttributeModifier {\r\n        if (!('target' in obj) || typeof obj['target'] !== 'string') {\r\n            throw new Error('Expect `target` to be a valid string.');\r\n        }\r\n        const target: string = obj['target'];\r\n        if (!registry.has(target)) {\r\n            throw new Error(`Attribute \"${target}\" does not exist.`);\r\n        }\r\n        if (!('type' in obj) || typeof obj['type'] !== 'string') {\r\n            throw new Error('Expect `type` to be a string.');\r\n        }\r\n        let type: AttributeModifierType = AttributeModifierType.Absolute;\r\n        switch (obj['type']) {\r\n            case AttributeModifierType[AttributeModifierType.Absolute]:\r\n                type = AttributeModifierType.Absolute;\r\n                break;\r\n            case AttributeModifierType[AttributeModifierType.Relative]:\r\n                type = AttributeModifierType.Relative;\r\n                break;\r\n            case AttributeModifierType[AttributeModifierType.RelativeToBase]:\r\n                type = AttributeModifierType.RelativeToBase;\r\n                break;\r\n            default:\r\n                throw new Error(`Unknown attribute modifier type: ${obj[\"type\"]}.`);\r\n        }\r\n        if (!('amount' in obj) || typeof obj['amount'] !== 'number' ||\r\n            isNaN(obj['amount'])) {\r\n            throw new Error('Expect `amount` to be a valid number.');\r\n        }\r\n        return new AttributeModifier(target, type, obj['amount']);\r\n    }\r\n\r\n    static CalculateAttributeValue(attribute: Attribute, combinedAmounts: CombinedAttributeModifierAmounts) {\r\n        let value: number = attribute.baseValue;\r\n        value *= (1.0 + combinedAmounts.relativeToBase);\r\n        value += combinedAmounts.absolute;\r\n        value *= (1.0 + combinedAmounts.relative);\r\n        return Math.max(Math.min(value, attribute.maxValue), attribute.minValue);\r\n    }\r\n\r\n}\r\n\r\nexport interface AttributeModifierSource {\r\n\r\n    /**\r\n     * Gets the combined attribute modifier amounts for the given `attribute`.\r\n     */\r\n    getCombinedAttributeModifierAmountsOf(attribute: Attribute): CombinedAttributeModifierAmounts;\r\n\r\n}\r\n","import { SimpleRegistry } from \"../utils/simpleRegistry\";\r\nimport { Attribute, AttributeModifier, AttributeModifierSource, AttributeModifierType, AttributeRegistry, CombinedAttributeModifierAmounts } from \"./attribute\";\r\n\r\nexport interface Effect {\r\n    attributeModifiers: ReadonlyArray<AttributeModifier>;\r\n}\r\n\r\n/**\r\n * Loads a effect collection.\r\n * @param obj Schema:\r\n *  ```\r\n *  {\r\n *      string: {\r\n *          \"relative\": boolean\r\n *          \"amount\": number\r\n *      }\r\n *  }\r\n *  ```\r\n */\r\nexport function loadEffectsFromObjectArray(objArray: any[], registry: AttributeRegistry): Effect[] {\r\n    let result: Effect[] = [];\r\n    for (const obj of objArray) {\r\n        if (!('attributeModifiers' in obj)) continue;\r\n        if (!Array.isArray(obj['attributeModifiers'])) {\r\n            throw new Error('Expect `attributeModifiers` to be an array.');\r\n        }\r\n        let attributeModifiers: AttributeModifier[] = [];\r\n        for (const modifier of obj['attributeModifiers']) {\r\n            attributeModifiers.push(\r\n                AttributeModifier.fromObject(modifier, registry));\r\n        }\r\n        result.push({\r\n            attributeModifiers: attributeModifiers\r\n        });\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * An effect provider can be an item, or a player status.\r\n */\r\nexport interface EffectProvider {\r\n    /**\r\n     * Unique identifier for this effect provider.\r\n     */\r\n    readonly id: string;\r\n    /**\r\n     * Retrieves the collection of effects.\r\n     */\r\n    getEffects(): ReadonlyArray<Effect>;\r\n}\r\n\r\nexport class EffectProviderCollectionChangedEvent<T extends EffectProvider> {\r\n    // Indicates whether this is a clear event.\r\n    clear: boolean;\r\n    item: T | undefined;\r\n    oldCount: number;\r\n    newCount: number;\r\n\r\n    constructor(clear: boolean, item: T | undefined, oldCount: number, newCount: number) {\r\n        this.clear = clear;\r\n        this.item = item;\r\n        this.oldCount = oldCount;\r\n        this.newCount = newCount;\r\n    }\r\n}\r\n\r\n/**\r\n * An effect provider collection can be a player's inventory or status\r\n * collection. Each effect provider can have different amounts.\r\n */\r\nexport class EffectProviderCollection<T extends EffectProvider> implements AttributeModifierSource {\r\n\r\n    protected _items: { [id: string]: [T, number]; } = {};\r\n    protected _registry: SimpleRegistry<T>;\r\n\r\n    constructor(registry: SimpleRegistry<T>) {\r\n        this._registry = registry;\r\n    }\r\n\r\n    onChanged?: (sender: EffectProviderCollection<T>, event: EffectProviderCollectionChangedEvent<T>) => void;\r\n\r\n    /**\r\n     * Determines the maximum number of the effect providers of the same type\r\n     * (same id).\r\n     */\r\n    get maxStackSize(): number {\r\n        return Infinity;\r\n    }\r\n\r\n    /**\r\n     * Gets a readonly view of all the effect providers.\r\n     */\r\n    get items(): { readonly [id: string]: Readonly<[T, number]>; } {\r\n        return this._items;\r\n    }\r\n\r\n    /**\r\n     * Adds a new effect provider.\r\n     * @param item\r\n     * @param count\r\n     */\r\n    add(item: T | string, count: number = 1): void {\r\n        if (typeof item === 'string') item = this._registry.get(item);\r\n        if (count < 0 || Math.floor(count) !== count) throw new Error('Count must be a positive integer.');\r\n        if (this._items[item.id] == undefined) {\r\n            this._items[item.id] = [item, count];\r\n            this.dispatchChangeEvent(new EffectProviderCollectionChangedEvent(false, item, 0, count));\r\n        } else {\r\n            let oldCount = this._items[item.id][1];\r\n            this._items[item.id][1] += count;\r\n            if (this._items[item.id][1] > this.maxStackSize) {\r\n                this._items[item.id][1] = this.maxStackSize;                \r\n            }\r\n            this.dispatchChangeEvent(new EffectProviderCollectionChangedEvent(false, item, this._items[item.id][1], oldCount));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes an effect provider.\r\n     * @param item \r\n     * @param count \r\n     */\r\n    remove(item: T | string, count: number = 1): void {\r\n        if (typeof item === 'string') item = this._registry.get(item);\r\n        if (count < 0 || Math.floor(count) !== count) throw new Error('Count must be a positive integer.');\r\n        if (this._items[item.id] == undefined) return;\r\n        let oldCount = this._items[item.id][1];\r\n        this._items[item.id][1] -= count;\r\n        if (this._items[item.id][1] <= 0) {\r\n            delete this._items[item.id];\r\n            this.dispatchChangeEvent(new EffectProviderCollectionChangedEvent(false, item, 0, oldCount));\r\n        } else {\r\n            this.dispatchChangeEvent(new EffectProviderCollectionChangedEvent(false, item, this._items[item.id][1], oldCount));\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.dispatchChangeEvent(new EffectProviderCollectionChangedEvent<T>(true, undefined, 0, 0));\r\n        this._items = {};\r\n    }\r\n\r\n    count(item: T | string): number {\r\n        if (typeof item === 'string') {\r\n            item = this._registry.get(item);\r\n        }\r\n        return this._items[item.id] ? this.items[item.id][1] : 0;\r\n    }\r\n\r\n    getCombinedAttributeModifierAmountsOf(attribute: Attribute): CombinedAttributeModifierAmounts {\r\n        let absoluteAmount = 0.0;\r\n        let relativeAmount = 0.0;\r\n        let relativeToBaseAmount = 0.0;\r\n        for (const id in this._items) {\r\n            const effects = this._items[id][0].getEffects();\r\n            for (const effect of effects) {\r\n                for (const attributeModifier of effect.attributeModifiers) {\r\n                    if (attributeModifier.target !== attribute.id) {\r\n                        continue;\r\n                    }\r\n                    switch (attributeModifier.type) {\r\n                        case AttributeModifierType.Absolute:\r\n                            absoluteAmount += attributeModifier.amount;\r\n                            break;\r\n                        case AttributeModifierType.Relative:\r\n                            relativeAmount += attributeModifier.amount;\r\n                            break;\r\n                        case AttributeModifierType.RelativeToBase:\r\n                            relativeToBaseAmount += attributeModifier.amount;\r\n                            break;\r\n                        default:\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            absolute: absoluteAmount,\r\n            relative: relativeAmount,\r\n            relativeToBase: relativeToBaseAmount\r\n        };\r\n    }\r\n\r\n    protected dispatchChangeEvent(event: EffectProviderCollectionChangedEvent<T>): void {\r\n        if (this.onChanged) {\r\n            this.onChanged(this, event);\r\n        }\r\n    }\r\n\r\n}\r\n","import { Effect, EffectProvider, EffectProviderCollection, loadEffectsFromObjectArray } from './effect';\r\nimport { downloadAndParse } from '../utils/network';\r\nimport { load as loadYaml } from 'js-yaml';\r\nimport { JsonEncodable, JsonValue } from '../utils/json';\r\nimport { SimpleRegistry } from '../utils/simpleRegistry';\r\nimport { AttributeRegistry } from './attribute';\r\n\r\nexport class Item implements EffectProvider {\r\n\r\n    constructor(private _id: string, private _rarity: number,\r\n                private _icon: string = '',\r\n                private _effects: Effect[] = []) {}\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    get unlocalizedName(): string {\r\n        return 'item.' + this.id;\r\n    }\r\n\r\n    get unlocalizedDescription(): string {\r\n        return this.unlocalizedName + '.description';\r\n    }\r\n\r\n    get rarity(): number {\r\n        return this._rarity;\r\n    }\r\n\r\n    get icon(): string {\r\n        return this._icon;\r\n    }\r\n\r\n    getEffects(): ReadonlyArray<Effect> {\r\n        return this._effects;\r\n    }\r\n\r\n}\r\n\r\nexport class ItemRegistry extends SimpleRegistry<Item> {\r\n\r\n    constructor(private _attributeRegistry: AttributeRegistry) {\r\n        super();\r\n    }\r\n\r\n    get name(): string {\r\n        return 'items';\r\n    }\r\n\r\n    async loadItems(url: string): Promise<void> {\r\n        let obj: any = await downloadAndParse(url, loadYaml);\r\n        if (!obj) return;\r\n        if (!Array.isArray(obj['items'])) {\r\n            throw new Error('Expecting an array of item definitions.');\r\n        }\r\n        let itemDefs: any[] = obj['items'];\r\n        for (let itemDef of itemDefs) {\r\n            if (typeof itemDef['id'] !== 'string') {\r\n                throw new Error('Missing item id.');\r\n            }\r\n            let effects: Effect[];\r\n            if (Array.isArray(itemDef['effects'])) {\r\n                effects = loadEffectsFromObjectArray(itemDef['effects'],\r\n                                                     this._attributeRegistry);\r\n            } else {\r\n                effects = [];\r\n            }\r\n            let rarity = typeof itemDef['rarity'] === 'number' ? itemDef['rarity'] : 0;\r\n            let icon = typeof itemDef['icon'] === 'string' ? itemDef['icon'] : '';\r\n            this.add(new Item(itemDef['id'], rarity, icon, effects));\r\n        }\r\n        console.log(`Successfully registered ${itemDefs.length} items.`);\r\n    }\r\n\r\n}\r\n\r\nexport class Inventory extends EffectProviderCollection<Item> implements JsonEncodable {\r\n    \r\n    decodeFromJson(json: JsonValue): void {\r\n        if (json === null || !Array.isArray(json)) {\r\n            throw new Error('Array expected.');\r\n        }\r\n        this.clear();\r\n        for (const itemData of json) {\r\n            if (!Array.isArray(itemData) || itemData.length !== 2 ||\r\n                typeof itemData[0] !== 'string' ||\r\n                typeof itemData[1] !== 'number') {\r\n                throw new Error('Each saved item data should be a two-element tuple of the item id string and the amount number.');\r\n            }\r\n            this.add(itemData[0], itemData[1]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Encoding format for inventory items:\r\n     * ```\r\n     * [\r\n     *     [\"itemId1\": $amount1],\r\n     *     [\"itemId1\": $amount1],\r\n     *     ...\r\n     * ]\r\n     * ```\r\n     */\r\n    encodeAsJson(): JsonValue {\r\n        let json = new Array<[string, number]>();\r\n        for (const itemId in this._items) {\r\n            json.push([itemId, this._items[itemId][1]]);\r\n        }\r\n        return json;\r\n    }\r\n\r\n}\r\n","import { Effect, EffectProvider, EffectProviderCollection, loadEffectsFromObjectArray, EffectProviderCollectionChangedEvent } from './effect';\r\nimport { load as loadYaml } from 'js-yaml';\r\nimport { downloadAndParse } from '../utils/network';\r\nimport { JsonEncodable, JsonValue } from '../utils/json';\r\nimport { SimpleRegistry } from '../utils/simpleRegistry';\r\nimport { AttributeRegistry } from './attribute';\r\n\r\nexport class Status implements EffectProvider {\r\n\r\n    constructor (private _id: string, private _duration: number,\r\n                 private _icon: string = '',\r\n                 private _effects: Effect[] = []) {}\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    get unlocalizedName(): string {\r\n        return 'status.' + this.id;\r\n    }\r\n\r\n    get unlocalizedDescription(): string {\r\n        return this.unlocalizedName + '.description';\r\n    }\r\n\r\n    get icon(): string {\r\n        return this._icon;\r\n    }\r\n\r\n    get duration(): number {\r\n        return this._duration;\r\n    }\r\n\r\n    getEffects(): ReadonlyArray<Effect> {\r\n        return this._effects;\r\n    }\r\n\r\n}\r\n\r\nexport class StatusRegistry extends SimpleRegistry<Status> {\r\n\r\n    constructor(private _attributeRegistry: AttributeRegistry) {\r\n        super();\r\n    }\r\n\r\n    get name(): string {\r\n        return 'status';\r\n    }\r\n\r\n    async loadStatus(url: string): Promise<void> {\r\n        let obj: any = await downloadAndParse(url, loadYaml);\r\n        if (!obj) return;\r\n        if (!Array.isArray(obj['status'])) {\r\n            throw new Error('Expecting an array of status definitions.');\r\n        }\r\n        let statusDefs: any[] = obj['status'];\r\n        for (let statusDef of statusDefs) {\r\n            if (typeof statusDef['id'] !== 'string') {\r\n                throw new Error('Missing item id.');\r\n            }\r\n            let effects: Effect[];\r\n            if (Array.isArray(statusDef['effects'])) {\r\n                effects = loadEffectsFromObjectArray(statusDef['effects'],\r\n                                                     this._attributeRegistry);\r\n            } else {\r\n                effects = [];\r\n            }\r\n            let duration = typeof statusDef['duration'] === 'number' ? statusDef['duration'] : Infinity;\r\n            let icon = typeof statusDef['icon'] === 'string' ? statusDef['icon'] : '';\r\n            this.add(new Status(statusDef['id'], duration, icon, effects));\r\n        }\r\n        console.log(`Successfully registered ${statusDefs.length} status.`);\r\n    }\r\n\r\n}\r\n\r\nexport class StatusTable extends EffectProviderCollection<Status> implements JsonEncodable {\r\n    \r\n    // Note: count is always one for the moment. If we want different levels of\r\n    // status, we may utilize the count value in the future.\r\n\r\n    private _remainingTicks: { [key: string]: number } = {};\r\n\r\n    /**\r\n     * Adds a new status.\r\n     * @param item\r\n     * @param count Ignored.\r\n     */\r\n    add(item: Status | string, count: number = 1): void {\r\n        if (typeof item === 'string') item = this._registry.get(item);\r\n        if (count !== 1) throw new Error('Count must be one.');\r\n        if (this._items[item.id] == undefined) {\r\n            this._items[item.id] = [item, 1];\r\n            this._remainingTicks[item.id] = item.duration;\r\n            this.dispatchChangeEvent(new EffectProviderCollectionChangedEvent(false, item, 0, 1));\r\n        }\r\n        // Reset duration\r\n        this._remainingTicks[item.id] = item.duration;\r\n    }\r\n\r\n    /**\r\n     * Removes an effect provider.\r\n     * @param item \r\n     * @param count Ignored.\r\n     */\r\n    remove(item: Status | string, count: number = 1): void {\r\n        if (typeof item === 'string') item = this._registry.get(item);\r\n        if (count !== 1) throw new Error('Count must be one.');\r\n        if (this._items[item.id] == undefined) return;\r\n        delete this._items[item.id];\r\n        delete this._remainingTicks[item.id];\r\n        this.dispatchChangeEvent(new EffectProviderCollectionChangedEvent(false, item, 0, 1));\r\n    }\r\n\r\n    clear(): void {\r\n        super.clear();\r\n        this._remainingTicks = {};        \r\n    }\r\n\r\n    /**\r\n     * Reduces the remaining ticks of all status by one.\r\n     */\r\n    tick(): void {\r\n        let pending: string[] = [];\r\n        for (let id in this._remainingTicks) {\r\n            --this._remainingTicks[id];\r\n            if (this._remainingTicks[id] === 0) {\r\n                pending.push(id);\r\n            }\r\n        }\r\n        for (let id of pending) {\r\n            this.remove(id);\r\n        }\r\n    }\r\n\r\n    decodeFromJson(json: JsonValue): void {\r\n        if (json === null || !Array.isArray(json)) {\r\n            throw new Error('Array expected.');\r\n        }\r\n        this.clear();\r\n        for (const statusData of json) {\r\n            if (!Array.isArray(statusData) || statusData.length !== 2 ||\r\n                typeof statusData[0] !== 'string' ||\r\n                typeof statusData[1] !== 'number') {\r\n                throw new Error('Each saved status data should be a two-element tuple of the status id string and the duration remaining.');\r\n            }\r\n            const [statusId, durationLeft] = statusData;\r\n            this.add(statusId);\r\n            this._remainingTicks[statusId] =\r\n                durationLeft < 0 ? Infinity : durationLeft;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Encoding format for status:\r\n     * ```\r\n     * [\r\n     *     [\"statusId1\": $durationLeft1],\r\n     *     [\"statusId2\": $durationLeft2],\r\n     * ]\r\n     * We use -1 to indicate infinite duration.\r\n     * ```\r\n     */\r\n    encodeAsJson(): JsonValue {\r\n        let json = new Array<[string, number]>();\r\n        for (const statusId in this._items) {\r\n            const duration = this._remainingTicks[statusId];\r\n            json.push([statusId, isFinite(duration) ? duration : -1])\r\n        }\r\n        return json;\r\n    }\r\n\r\n}\r\n","export enum EndGameState {\r\n  /**\r\n   * The game is still going, not ended yet.\r\n   */\r\n  None,\r\n  /**\r\n   * Game ends and player wins.\r\n   */\r\n  Win,\r\n  /**\r\n   * Game ends and player loses.\r\n   */\r\n  Loss,\r\n}\r\n","import { EventAction, EventActionExecutionContext, EventActionList, EventActionResult, EventCondition } from './core';\r\nimport { CompiledEventExpression, EventExpressionCompiler } from './expression';\r\nimport { weightedSample } from '../utils/random';\r\nimport { EventConditionFactory } from './conditions';\r\nimport { SetBuilder } from '../utils/collection';\r\nimport { EndGameState } from '../endGameState';\r\nimport { TranslationKeySource, TranslationKeySourceFactory } from './translationKeySource';\r\n\r\n// Note on the usage of typeof.\r\n// For JSON-like objects, it is safe to check the types of numbers/strings using\r\n// typeof. We forbid `Number(123)` or `String('abc')`.\r\n// Object.prototype.toString.call() is a more foolproof approach.\r\n\r\ninterface EventActionDeserializationContext {\r\n    readonly actionFactory: EventActionFactory;\r\n    readonly conditionFactory: EventConditionFactory;\r\n    readonly translationKeySourceFactory: TranslationKeySourceFactory;\r\n    readonly expressionCompiler: EventExpressionCompiler;\r\n}\r\n\r\nexport type EventActionDeserializer =\r\n    (obj: any, context: EventActionDeserializationContext) => EventAction;\r\n\r\nexport interface EventActionDeserializerDefinition {\r\n    readonly ID: string;\r\n    readonly fromJSONObject: EventActionDeserializer;\r\n}\r\n\r\n/**\r\n * A factory class for creating event action instances from JSON-like objects.\r\n */\r\nexport class EventActionFactory {\r\n\r\n    private _deserializers: Map<string, EventActionDeserializer> = new Map();\r\n    private _deserializationContext: EventActionDeserializationContext;\r\n\r\n    constructor(conditionFactory: EventConditionFactory,\r\n                expressionCompiler: EventExpressionCompiler) {\r\n        this._deserializationContext = {\r\n            actionFactory: this,\r\n            conditionFactory: conditionFactory,\r\n            translationKeySourceFactory: new TranslationKeySourceFactory(conditionFactory, expressionCompiler),\r\n            expressionCompiler: expressionCompiler\r\n        };\r\n    }\r\n\r\n    registerDeserializer(def: EventActionDeserializerDefinition): void {\r\n        this._deserializers.set(def.ID, def.fromJSONObject);\r\n    }\r\n\r\n    fromJSONObject(obj: any): EventAction {\r\n        if (!obj['id']) {\r\n            throw new Error('Action id is not specified.');\r\n        }\r\n        const id = obj['id'];\r\n        if (typeof id !== 'string') {\r\n            throw new Error('Action id must be a string.');\r\n        }\r\n        const deserializer = this._deserializers.get(id);\r\n        if (deserializer == undefined) {\r\n            throw new Error(`No deserializer defined for \"${id}\".`);\r\n        }\r\n        return deserializer(obj, this._deserializationContext);\r\n    }\r\n\r\n    fromJSONArray(arr: any[]): EventAction[] {\r\n        let actions = new Array<EventAction>(arr.length);\r\n        for (let i = 0;i < arr.length;i++) {\r\n            actions[i] = this.fromJSONObject(arr[i]);\r\n        }\r\n        return actions;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Logs information on the console.\r\n */\r\nexport class EALog extends EventAction {\r\n    \r\n    constructor(private _message: string, private _dumpVariables: boolean) {\r\n        super();\r\n    }\r\n    \r\n    static ID = 'Log';\r\n    \r\n    /**\r\n     * Creates an `EALog` instance from its JSON definition stored in the given\r\n     * JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"Log\",\r\n     *         \"message\": string,\r\n     *         \"dumpVariables\": boolean | undefined\r\n     *     }\r\n     *     ```\r\n     * @param context Not used.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EALog {\r\n        if (obj['message'] == undefined) throw new Error('Message missing.');\r\n        return new EALog(obj['message'], obj['dumpVariables'] || false);\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        console.log(this._message);\r\n        if (this._dumpVariables) {\r\n            context.variableStore.dumpToConsole();\r\n        }\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Displays one message.\r\n */\r\nexport class EADisplayMessage extends EventAction {\r\n\r\n    constructor(private _message: TranslationKeySource,\r\n                private _confirm: TranslationKeySource,\r\n                private _icon: string) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'DisplayMessage';\r\n\r\n    /**\r\n     * Creates an `EADisplayMessage` instance from its JSON definition stored in\r\n     * the given JSON object.\r\n     * @param obj Schema:\r\n     *  ```\r\n     *  {\r\n     *      \"id\": \"DisplayMessage\",\r\n     *      \"message\": TranslationKeySourceDefinition,\r\n     *      \"confirm\": TranslationKeySourceDefinition\r\n     *  }\r\n     *  ```\r\n     * @param context Not used.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EADisplayMessage {\r\n        if (obj['message'] == undefined) throw new Error('Message missing.');\r\n        if (obj['confirm'] == undefined) {\r\n            throw new Error('Confirm message missing.');\r\n        }\r\n        return new EADisplayMessage(\r\n            context.translationKeySourceFactory.fromObject(obj['message']),\r\n            context.translationKeySourceFactory.fromObject(obj['confirm']),\r\n            obj['icon'] || ''\r\n        );\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        return context.actionProxy.displayMessage(\r\n            this._message.getTranslationKey(context),\r\n            this._confirm.getTranslationKey(context),\r\n            this._icon\r\n        ).then(() => EventActionResult.Ok);\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        const builder = new SetBuilder<string>();\r\n        builder.addAll(this._message.collectTranslationKeys());\r\n        builder.addAll(this._confirm.collectTranslationKeys());\r\n        return builder.get();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Display a message randomly selected from a list of predefined messages.\r\n */\r\nexport class EADisplayRandomMessage extends EventAction {\r\n\r\n    constructor(private _messages: TranslationKeySource[],\r\n                private _confirm: TranslationKeySource,\r\n                private _icon: string) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'DisplayRandomMessage';\r\n\r\n    /**\r\n     * Creates an `EADisplayRandomMessage` instance from its JSON definition\r\n     * stored in the given JSON object.\r\n     * @param obj Schema:\r\n     *  ```\r\n     *  {\r\n     *      \"id\": \"DisplayRandomMessage\",\r\n     *      \"messages\": TranslationKeySourceDefinition[]\r\n     *      \"confirm\": TranslationKeySourceDefinition\r\n     *      \"icon\": string | undefined\r\n     *  }\r\n     *  ```\r\n     * @param context Not used.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EADisplayRandomMessage {\r\n        if (!Array.isArray(obj['messages'])) {\r\n            throw new Error('Messages missing.');\r\n        }\r\n        let messages: TranslationKeySource[] = [];\r\n        for (const message of obj['messages']) {\r\n            messages.push(\r\n                context.translationKeySourceFactory.fromObject(message));\r\n        }\r\n        if (typeof obj['confirm'] !== 'string') {\r\n            throw new Error('Confirm message missing.');\r\n        }\r\n        return new EADisplayRandomMessage(\r\n            messages,\r\n            context.translationKeySourceFactory.fromObject(obj['confirm']),\r\n            obj['icon'] || ''\r\n        );\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        const msgId = Math.floor(context.random.next() * this._messages.length);\r\n        return context.actionProxy.displayMessage(\r\n            this._messages[msgId].getTranslationKey(context),\r\n            this._confirm.getTranslationKey(context),\r\n            this._icon\r\n        ).then(() => EventActionResult.Ok);\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        const builder = new SetBuilder<string>(\r\n            this._confirm.collectTranslationKeys());\r\n        for (const message of this._messages) {\r\n            builder.addAll(message.collectTranslationKeys());\r\n        }\r\n        return builder.get();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Displays a message along with multiple choices from which players can select.\r\n * Each choice can also optionally execute a list of actions after being\r\n * selected.\r\n */\r\nexport class EADisplayChoices extends EventAction {\r\n\r\n    constructor(private _message: TranslationKeySource,\r\n                private _choiceMessages: TranslationKeySource[],\r\n                private _requirements: CompiledEventExpression[],\r\n                private _actions: EventActionList[], private _icon: string)\r\n    {\r\n        super();\r\n        if (_choiceMessages.length !== _requirements.length || _choiceMessages.length !== _actions.length) {\r\n            throw new Error('The number of choices must be equal to the number of requirements/actions.');\r\n        }\r\n    }\r\n\r\n    static ID = 'DisplayChoices';\r\n    \r\n    /**\r\n     * Creates an `EADisplayChoices` instance from its JSON definition stored in\r\n     * the given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"DisplayChoices\",\r\n     *         \"message\": TranslationKeySourceDefinition,\r\n     *         \"choices\": [\r\n     *             {\r\n     *                 \"message\": TranslationKeySourceDefinition,\r\n     *                 \"requirement\": number | string | undefined,\r\n     *                 \"actions\": EventAction[] | undefined\r\n     *             }\r\n     *         ]\r\n     *     }\r\n     *     ```\r\n     *     The `requirement` is optional and can be an expression.\r\n     * @param context Used to create nested actions and compile expressions from\r\n     *     the `requirement` field.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EADisplayChoices {\r\n        if (obj['message'] == undefined) throw new Error('Message missing.');\r\n        const message =\r\n            context.translationKeySourceFactory.fromObject(obj['message']);\r\n        if (!Array.isArray(obj['choices'])) throw new Error('Choices are missing.');\r\n        let choiceMessages: TranslationKeySource[] = [];\r\n        let requirements: CompiledEventExpression[] = [];\r\n        let actions: EventActionList[] = [];\r\n        for (const c of obj['choices']) {\r\n            choiceMessages.push(\r\n                context.translationKeySourceFactory.fromObject(c['message']));\r\n            const curActions = Array.isArray(c['actions'])\r\n                ? context.actionFactory.fromJSONArray(c['actions'])\r\n                : [];\r\n            actions.push(new EventActionList(curActions));\r\n            // requirement\r\n            if (c['requirement'] != undefined) {\r\n                requirements.push(\r\n                    context.expressionCompiler.compile(c['requirement']));\r\n            } else {\r\n                requirements.push(context.expressionCompiler.compile('true'));\r\n            }\r\n        }\r\n        return new EADisplayChoices(message, choiceMessages,\r\n                                    requirements, actions, obj['icon'] || '');\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        // Build choice array according to requirements.\r\n        let choices: Array<[string, number]> = [];\r\n        for (let i = 0; i < this._choiceMessages.length;i++) {\r\n            if (context.evaluator.eval(this._requirements[i])) {\r\n                choices.push(\r\n                    [this._choiceMessages[i].getTranslationKey(context), i]);\r\n            }\r\n        }\r\n        return context.actionProxy.displayChoices(\r\n            this._message.getTranslationKey(context),\r\n            choices,\r\n            this._icon\r\n        ).then((choiceId) => this._actions[choiceId].execute(context));\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        const builder = new SetBuilder<string>();\r\n        builder.addAll(this._message.collectTranslationKeys());\r\n        for (const choiceMessage of this._choiceMessages) {\r\n            builder.addAll(choiceMessage.collectTranslationKeys());\r\n        }\r\n        for (const actionList of this._actions) {\r\n            builder.addAll(actionList.collectTranslationKeys());\r\n        }\r\n        return builder.get();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Randomly executes one list of actions of a group of action lists according to\r\n * the given weights.\r\n */\r\nexport class EARandom extends EventAction {\r\n\r\n    private _actions: EventActionList[];\r\n    private _weightExprs: CompiledEventExpression[];\r\n\r\n    constructor(actions: EventActionList[], weightExprs: CompiledEventExpression[]) {\r\n        super();\r\n        if (actions.length !== weightExprs.length) {\r\n            throw new Error('The number of weights must match the number of actions.');\r\n        }\r\n        this._actions = actions;\r\n        this._weightExprs = weightExprs\r\n    }\r\n\r\n    static ID = 'Random';\r\n    \r\n    /**\r\n     * Creates an `EARandom` instance from its JSON definition stored in the\r\n     * given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"Random\",\r\n     *         \"groups\": [\r\n     *             {\r\n     *                 \"weight\": number | string,\r\n     *                 \"actions\": EventAction[]\r\n     *             }\r\n     *         ]\r\n     *     }\r\n     *     ```\r\n     *     The `weight` field can be an expression.\r\n     * @param context Used to create nested actions and compile expressions from\r\n     *     the `weight` field.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EARandom {\r\n        if (!Array.isArray(obj['groups'])) {\r\n            throw new Error('Missing group definitions.');\r\n        }\r\n        let weightExprs: CompiledEventExpression[] = [];\r\n        let actions: EventActionList[] = [];\r\n        for (let o of obj['groups']) {\r\n            let weight = o['weight'];\r\n            if (weight == undefined) {\r\n                throw new Error('Missing weight definition.');\r\n            }\r\n            if (typeof weight !== 'string' && typeof weight !== 'number') {\r\n                throw new Error('Weight must be a number or an expression.');\r\n            }\r\n            if (!Array.isArray(o['actions'])) {\r\n                throw new Error('Missing actions.');\r\n            }\r\n            weightExprs.push(context.expressionCompiler.compile(weight));\r\n            actions.push(new EventActionList(\r\n                context.actionFactory.fromJSONArray(o['actions'])));\r\n        }\r\n        return new EARandom(actions, weightExprs);\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        return this._actions[this._randomIndex(context)].execute(context);\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        const builder = new SetBuilder<string>()\r\n        for (const actionList of this._actions) {\r\n            builder.addAll(actionList.collectTranslationKeys());\r\n        }\r\n        return builder.get();\r\n    }\r\n\r\n    private _randomIndex(context: EventActionExecutionContext): number {\r\n        return weightedSample(\r\n            this._weightExprs.map(item => context.evaluator.eval(item)),\r\n            () => context.random.next());\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Randomly chooses one of the two action lists to execute via a coin flip.\r\n * This action is a simplified version of `EARandom` when you only need randomly\r\n * pick from two actions.\r\n */\r\nexport class EACoinFlip extends EventAction {\r\n\r\n    constructor(private _p: CompiledEventExpression,\r\n                private _successActionList: EventActionList,\r\n                private _failActionList: EventActionList)\r\n    {\r\n        super();\r\n    }\r\n\r\n    static ID = 'CoinFlip';\r\n\r\n    /**\r\n     * Creates an `EACoinFlip` instance from its JSON definition stored in the\r\n     * given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"CoinFlip\",\r\n     *         \"probability\": number | string,\r\n     *         \"success\": EventAction[] | undefined,\r\n     *         \"fail\": EventAction[] | undefined\r\n     *     }\r\n     *     ```\r\n     * @param context Used to create nested actions and compile expressions from\r\n     *     the `probability` field.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EACoinFlip {\r\n        const p = obj['probability'];\r\n        if (typeof p !== 'string' && typeof p !== 'number') {\r\n            throw new Error('Probability must be a number of an expression.');\r\n        }\r\n        let successActions = Array.isArray(obj['success']) \r\n            ? context.actionFactory.fromJSONArray(obj['success'])\r\n            : [];\r\n        let failActions = Array.isArray(obj['fail'])\r\n            ? context.actionFactory.fromJSONArray(obj['fail'])\r\n            : [];\r\n        return new EACoinFlip(context.expressionCompiler.compile(p),\r\n                              new EventActionList(successActions),\r\n                              new EventActionList(failActions));\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        if (this._coinFlip(context)) {\r\n            return this._successActionList.execute(context);\r\n        } else {\r\n            return this._failActionList.execute(context);\r\n        }\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        const builder = new SetBuilder<string>();\r\n        builder.addAll(this._successActionList.collectTranslationKeys());\r\n        builder.addAll(this._failActionList.collectTranslationKeys());\r\n        return builder.get();\r\n    }\r\n\r\n    private _coinFlip(context: EventActionExecutionContext): boolean {\r\n        const p = context.evaluator.eval(this._p);\r\n        if (p < 0) return false;\r\n        return context.random.next() < p;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Given a list of conditions and their associated action lists, evaluates the\r\n * conditions in the order they are defined and executes the action list\r\n * associated with the first condition that evaluates to true.\r\n * This action is similar to a non-fall-through switch statement in JavaScript.\r\n */\r\nexport class EASwitch extends EventAction {\r\n\r\n    constructor(private _conditions: EventCondition[],\r\n                private _actions: EventActionList[]) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'Switch';\r\n\r\n    /**\r\n     * Creates an `EASwitch` instance from its JSON definition stored in the\r\n     * given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"Switch\",\r\n     *         \"branches\": [\r\n     *             {\r\n     *                 \"condition\": string | number | EventCondition,\r\n     *                 \"actions\": EventAction[]\r\n     *             }\r\n     *         ]\r\n     *     }\r\n     *     ```\r\n     *     Each `condition` can also be an expression.\r\n     * @param context Used to create nested actions and compile conditions or\r\n     *     expressions from the `probability` field.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EASwitch {\r\n        const branches = obj['branches'];\r\n        if (!Array.isArray(branches)) {\r\n            throw new Error('Expecting an array of branches.');\r\n        }\r\n        let conditions: EventCondition[] = [];\r\n        let actions: EventActionList[] = [];\r\n        for (let branch of branches) {\r\n            if (branch['condition'] == undefined) {\r\n                throw new Error('Condition is required.');\r\n            }\r\n            conditions.push(context.conditionFactory.fromJSON(branch['condition']));\r\n            if (!Array.isArray(branch['actions'])) {\r\n                throw new Error('Missing actions.');\r\n            }\r\n            actions.push(new EventActionList(\r\n                context.actionFactory.fromJSONArray(branch['actions'])));\r\n        }\r\n        return new EASwitch(conditions, actions);\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        // Check operation\r\n        for (let i = 0; i < this._conditions.length; i++) {\r\n            if (this._conditions[i].check(context)) {\r\n                return this._actions[i].execute(context);\r\n            }\r\n        }\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        const builder = new SetBuilder<string>();\r\n        for (const actionList of this._actions) {\r\n            builder.addAll(actionList.collectTranslationKeys());\r\n        }\r\n        return builder.get();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Keeps executing a list of actions until the stop condition is met. Like a\r\n * loop in JavaScript.\r\n */\r\nexport class EALoop extends EventAction {\r\n\r\n    private _i: number = -1;\r\n\r\n    constructor(private _stopCondition: EventCondition | null,\r\n                private _maxIterations: number,\r\n                private _checkStopConditionAtEnd: boolean,\r\n                private _actions: EventActionList) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'Loop';\r\n    \r\n    /**\r\n     * Creates an `EALoop` instance from its JSON definition stored in the given\r\n     * JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"Loop\",\r\n     *         \"stopCondition\": number | string | EventCondition | undefined,\r\n     *         \"maxIterations\": number | undefined,\r\n     *         \"checkStopConditionAtEnd\": boolean | undefined,\r\n     *         \"actions\": EventAction[]\r\n     *     }\r\n     *     ```\r\n     *     If `stopCondition` is not set, there will no stop condition and the\r\n     *     loop will keep going until `maxIterations` is reached.\r\n     *     `maxIterations` limits the maximum number of times the loop can run,\r\n     *     regardless of the `stopCondition`. If `maxIterations` is not set, or\r\n     *     not set to a positive value, there will be no limit.\r\n     *     If `checkStopConditionAtEnd` is true, `actions` will be executed\r\n     *     first before evaluating the stop condition (like a do ... while\r\n     *     loop). If the stop condition is met, next iteration will not occur.\r\n     *     Otherwise, the stop condition will be evaluated before executing\r\n     *     `actions` (like a while loop). Default value is false.\r\n     *     \r\n     * @param context Used to create nested actions, and compile conditions or\r\n     *     expressions from the `stopCondition` field.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EALoop {\r\n        let stopCondition: EventCondition | null = null;\r\n        const stopConditionDef = obj['stopCondition'];\r\n        if (stopConditionDef != undefined) {\r\n            stopCondition = context.conditionFactory.fromJSON(stopConditionDef);\r\n        }\r\n        let maxIterations = obj['maxIterations'];\r\n        if (maxIterations == undefined) {\r\n            maxIterations = 0;\r\n        } else if (typeof maxIterations === 'number') {\r\n            maxIterations = maxIterations > 0 ? maxIterations : 0;\r\n        } else {\r\n            throw new Error('maxIterations needs to be a number.');\r\n        }\r\n        let checkStopConditionAtEnd = obj['checkStopConditionAtEnd'];\r\n        if (checkStopConditionAtEnd == undefined) {\r\n            checkStopConditionAtEnd = false;\r\n        } else if (typeof checkStopConditionAtEnd !== 'boolean') {\r\n            throw new Error('checkStopConditionAtEnd need to be a boolean.');\r\n        }\r\n        if (!Array.isArray(obj['actions'])) {\r\n            throw new Error('Missing actions.');\r\n        }\r\n        const actions = context.actionFactory.fromJSONArray(obj['actions']);\r\n        return new EALoop(stopCondition, maxIterations, checkStopConditionAtEnd,\r\n                          new EventActionList(actions));\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        if (this._i >= 0) throw new Error('Already executing.');\r\n        this._i = 0;\r\n        return this._checkStopConditionAtEnd\r\n            ? this._nextDoWhileIteration(context)\r\n            : this._nextWhileDoIteration(context);\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        const builder = new SetBuilder<string>();\r\n        builder.addAll(this._actions.collectTranslationKeys());\r\n        return builder.get();\r\n    }\r\n\r\n    private _nextDoWhileIteration(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        do {\r\n            const result = this._actions.execute(context);\r\n            if (typeof result === 'number') {\r\n                if (result === EventActionResult.StopExecutionGlobally) {\r\n                    this._i = -1;\r\n                    return EventActionResult.StopExecutionGlobally;\r\n                }\r\n                if (this._maxIterations > 0 &&\r\n                    ++this._i >= this._maxIterations) {\r\n                    this._i = -1;\r\n                    break;\r\n                }\r\n            } else {\r\n                return result.then((futureResult) => {\r\n                    if (futureResult === EventActionResult.StopExecutionGlobally) {\r\n                        this._i = -1;\r\n                        return EventActionResult.StopExecutionGlobally;\r\n                    } else {\r\n                        if (this._maxIterations > 0 &&\r\n                            ++this._i >= this._maxIterations) {\r\n                            this._i = -1;\r\n                            return EventActionResult.Ok;\r\n                        }\r\n                        if (this._stopCondition === null ||\r\n                            !this._stopCondition.check(context)) {\r\n                            return this._nextDoWhileIteration(context);\r\n                        } else {\r\n                            this._i = -1;\r\n                            return EventActionResult.Ok;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        } while (this._stopCondition === null ||\r\n                 !this._stopCondition.check(context));\r\n        this._i = -1;\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n    private _nextWhileDoIteration(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        while (this._stopCondition === null ||\r\n               !this._stopCondition.check(context)) {\r\n            const result = this._actions.execute(context);\r\n            if (typeof result === 'number') {\r\n                if (result === EventActionResult.StopExecutionGlobally) {\r\n                    this._i = -1;\r\n                    return EventActionResult.StopExecutionGlobally;\r\n                }\r\n                if (this._maxIterations > 0 &&\r\n                    ++this._i >= this._maxIterations) {\r\n                    this._i = -1;\r\n                    break;\r\n                }\r\n            } else {\r\n                return result.then((futureResult) => {\r\n                    if (futureResult === EventActionResult.StopExecutionGlobally) {\r\n                        this._i = -1;\r\n                        return EventActionResult.StopExecutionGlobally;\r\n                    } else {\r\n                        if (this._maxIterations > 0 &&\r\n                            ++this._i >= this._maxIterations) {\r\n                            this._i = -1;\r\n                            return EventActionResult.Ok;\r\n                        }\r\n                        return this._nextWhileDoIteration(context);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        this._i = -1;\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Updates one variable in the variable store.\r\n */\r\nexport class EAUpdateVariable extends EventAction {\r\n\r\n    constructor(private _varName: string, private _updateExpr: CompiledEventExpression) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'UpdateVariable';\r\n    \r\n    /**\r\n     * Creates an `EAUpdateVariable` instance from its JSON definition stored in\r\n     * the given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"UpdateVariable\",\r\n     *         \"variable\": string,\r\n     *         \"value\": number | string\r\n     *     }\r\n     *     ```\r\n     *     The `value` field can also be an expression.\r\n     * @param context Used to compile the expression in the `value` field.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EAUpdateVariable {\r\n        if (!obj['variable']) throw new Error('Missing variable name.');\r\n        if (obj['value'] == undefined) throw new Error('Missing value.');\r\n        let expr = obj['value'];\r\n        if (typeof expr !== 'number' && typeof expr !== 'string') {\r\n            throw new Error('Value must be either a number of a string.');\r\n        }\r\n        return new EAUpdateVariable(obj['variable'],\r\n                                    context.expressionCompiler.compile(expr));\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        context.variableStore.setVar(this._varName,\r\n                                     context.evaluator.eval(this._updateExpr),\r\n                                     false);\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Updates one or more variables in the variable store.\r\n */\r\nexport class EAUpdateVariables extends EventAction {\r\n\r\n    constructor(private _varNames: string[], private _updateExprs: CompiledEventExpression[]) {\r\n        super();\r\n        if (_varNames.length !== _updateExprs.length) {\r\n            throw new Error('The number of variables must be equal to the number of expressions.');\r\n        }\r\n    }\r\n\r\n    static ID = 'UpdateVariables';\r\n\r\n    /**\r\n     * Creates an `EAUpdateVariables` instance from its JSON definition stored\r\n     * in the given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"UpdateVariables\",\r\n     *         \"updates\": { [varName: string]: string | number }\r\n     *     }\r\n     *     ```\r\n     * @param context Used to compile expressions in the `updates` map.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EAUpdateVariables {\r\n        if (!obj['updates']) throw new Error('Missing update definitions.');\r\n        let varNames: string[] = [];\r\n        let exprs: CompiledEventExpression[] = [];\r\n        for (let varName in obj['updates']) {\r\n            varNames.push(varName);\r\n            exprs.push(\r\n                context.expressionCompiler.compile(obj['updates'][varName]));\r\n        }\r\n        return new EAUpdateVariables(varNames, exprs);\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        for (let i = 0;i < this._varNames.length;i++) {\r\n            context.variableStore.setVar(\r\n                this._varNames[i],\r\n                context.evaluator.eval(this._updateExprs[i])\r\n            );\r\n        }\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Updates one or more variables' limits.\r\n */\r\nexport class EAUpdateVariableLimits extends EventAction {\r\n\r\n    constructor(private _limitsByVarName: Record<string, [number, number]>) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'UpdateVariableLimits';\r\n\r\n    /**\r\n     * Creates an `EAUpdateVariableLimits` instance from its JSON definition\r\n     * stored in the given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"UpdateVariableLimits\",\r\n     *         \"updates\": { [varName: string]: [number, number] }\r\n     *     }\r\n     *     ```\r\n     *     Limits are defined via a pair of constant numbers, where the first\r\n     *     number specifies the lower bound (inclusive) and the second number\r\n     *     specifies the upper bound (inclusive). The can be Infinity or\r\n     *     -Infinity, but cannot be NaN expressions.\r\n     * @param context Not used.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EAUpdateVariableLimits {\r\n        if (!obj['updates']) throw new Error('Missing update definitions.');\r\n        let limitsByVarName: Record<string, [number, number]> = {};\r\n        for (const varName in obj['updates']) {\r\n            let limits = obj['updates'][varName];\r\n            if (!Array.isArray(limits) || limits.length !== 2 ||\r\n                typeof limits[0] !== 'number' ||\r\n                typeof limits[1] !== 'number') {\r\n                throw new Error('Limits need to be two-element tuples.');\r\n            }\r\n            limitsByVarName[varName] = <[number, number]>limits;\r\n        }\r\n        return new EAUpdateVariableLimits(limitsByVarName);\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        for (const varName in this._limitsByVarName) {\r\n            const limits = this._limitsByVarName[varName];\r\n            context.variableStore.setVarLimits(varName, limits[0], limits[1]);\r\n        }\r\n        return EventActionResult.Ok;\r\n    }\r\n}\r\n\r\n/**\r\n * Gives the player a certain amount of a certain item.\r\n */\r\nexport class EAGiveItem extends EventAction {\r\n\r\n    constructor(private _itemId: string, private _amountExpr: CompiledEventExpression) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'GiveItem';\r\n\r\n    /**\r\n     * Creates an `EAGiveItem` instance from its JSON definition stored in the\r\n     * given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"GiveItem\",\r\n     *         \"itemId\": string,\r\n     *         \"amount\": number | string\r\n     *     }\r\n     *     ```\r\n     *     The `amount` field can also be an expression.\r\n     * @param context Used to compile the expression in the `amount` field.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EAGiveItem {\r\n        if (obj['itemId'] == undefined) throw new Error('Missing item id.');\r\n        // We allow amount to be an expression.\r\n        if (typeof obj['amount'] !== 'string' &&\r\n            typeof obj['amount'] !== 'number') {\r\n            throw new Error('Amount must be a number or an expression.');\r\n        }\r\n        return new EAGiveItem(\r\n            obj['itemId'], context.expressionCompiler.compile(obj['amount']));\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        let amount = context.evaluator.eval(this._amountExpr);\r\n        if (amount > 0) {\r\n            context.inventory.add(this._itemId, amount);\r\n        } else if (amount < 0) {\r\n            context.inventory.remove(this._itemId, -amount);\r\n        }\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Updates the amounts of items relatively.\r\n */\r\nexport class EAUpdateItemAmounts extends EventAction {\r\n\r\n    constructor(private _itemIds: string[], private _updateExprs: CompiledEventExpression[]) {\r\n        super();\r\n        if (_itemIds.length !== _updateExprs.length) {\r\n            throw new Error('The number of items must match the number of expressions.');\r\n        }\r\n    }\r\n\r\n    static ID = 'UpdateItemAmounts';\r\n\r\n    /**\r\n     * Creates an `EAUpdateItemAmounts` instance from its JSON definition stored\r\n     * in the given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"UpdateItemAmounts\",\r\n     *         \"updates\": { [itemId: string]: number | string; }\r\n     *     }\r\n     *     ```\r\n     * @param context Used to compute the item amount expressions in the\r\n     *     `update` field.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EAUpdateItemAmounts {\r\n        if (obj['updates'] == undefined) {\r\n            throw new Error('Missing update definitions.');\r\n        }\r\n        let itemIds: string[] = [];\r\n        let updateExprs: CompiledEventExpression[] = [];\r\n        for (const itemId in obj['updates']) {\r\n            itemIds.push(itemId);\r\n            updateExprs.push(\r\n                context.expressionCompiler.compile(obj['updates'][itemId]));\r\n        }\r\n        return new EAUpdateItemAmounts(itemIds, updateExprs);\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        for (let i = 0;i < this._itemIds.length;i++) {\r\n            const itemId = this._itemIds[i];\r\n            const amount = context.evaluator.eval(this._updateExprs[i]);\r\n            if (amount > 0) {\r\n                context.inventory.add(itemId, amount);\r\n            } else if (amount < 0) {\r\n                context.inventory.remove(itemId, -amount);\r\n            }\r\n        }\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Ends the game.\r\n */\r\nexport class EAEndGame extends EventAction {\r\n\r\n    constructor(private _message: TranslationKeySource,\r\n                private _confirm: TranslationKeySource,\r\n                private _winning: boolean,\r\n                private _endingType?: string,\r\n                private _fx?: string) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'EndGame';\r\n\r\n    /**\r\n     * Creates an `EAEndGame` instance from its JSON definition stored in the\r\n     * given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"EndGame\",\r\n     *         \"message\": TranslationKeySourceDefinition,\r\n     *         \"confirm\": TranslationKeySourceDefinition,\r\n     *         \"winning\": boolean,\r\n     *         \"endingType\": string | undefined,\r\n     *         \"fx\": string | undefined\r\n     *     }\r\n     *     ```\r\n     *     An optional `endingType` can be supplied to provide additional\r\n     *     information about the ending. It won't affect ehe display, but will\r\n     *     be included in GameEndEvent when you directly interface with the\r\n     *     GameEngine.\r\n     * @param context Not used.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EAEndGame {\r\n        if (obj['message'] == undefined) {\r\n            throw new Error('Missing message.');\r\n        }\r\n        if (obj['confirm'] == undefined) {\r\n            throw new Error('Missing confirm message.');\r\n        }\r\n        if (typeof(obj['winning']) !== 'boolean') {\r\n            throw new Error('Missing winning status.');\r\n        }\r\n        if (obj['endingType'] && typeof(obj['endingType']) !== 'string') {\r\n            throw new Error('\"endingType\" must be a string if set.')\r\n        }\r\n        if (obj['fx'] && typeof(obj['fx']) !== 'string') {\r\n            throw new Error('FX must be a string.');\r\n        }\r\n        return new EAEndGame(\r\n            context.translationKeySourceFactory.fromObject(obj['message']),\r\n            context.translationKeySourceFactory.fromObject(obj['confirm']),\r\n            obj['winning'],\r\n            obj['endingType'],\r\n            obj['fx']\r\n        );\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        return context.actionProxy.displayMessage(\r\n            this._message.getTranslationKey(context),\r\n            this._confirm.getTranslationKey(context),\r\n            '',\r\n            this._fx\r\n        ).then(() => {\r\n            context.setEndGameState(\r\n                this._winning ? EndGameState.Win : EndGameState.Loss,\r\n                this._endingType\r\n            );\r\n            return EventActionResult.StopExecutionGlobally;\r\n        });\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        const builder = new SetBuilder<string>();\r\n        builder.addAll(this._message.collectTranslationKeys());\r\n        builder.addAll(this._confirm.collectTranslationKeys());\r\n        return builder.get();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Sets a status effect on or off.\r\n */\r\nexport class EASetStatus extends EventAction {\r\n\r\n    constructor(private _statusId: string, private _on: boolean) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'SetStatus';\r\n    \r\n    /**\r\n     * Creates an `EASetStatus` instance from its JSON definition stored in the\r\n     * given JSON object.\r\n     * @param obj Schema\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"SetStatus\",\r\n     *         \"statusId\": string,\r\n     *         \"on\": boolean\r\n     *     }\r\n     *     ```\r\n     * @param context Not used.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EASetStatus {\r\n        if (typeof(obj['statusId']) !== 'string') {\r\n            throw new Error('Missing status id.');\r\n        }\r\n        if (typeof(obj['on']) !== 'boolean') {\r\n            throw new Error('Missing on/off indicator.');\r\n        }\r\n        return new EASetStatus(obj['statusId'], obj['on']);\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        if (this._on) {\r\n            context.statusTable.add(this._statusId);\r\n        } else {\r\n            context.statusTable.remove(this._statusId);\r\n        }\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n\r\ninterface TriggerInfo {\r\n    id: string;\r\n    priority: number;\r\n    probability?: CompiledEventExpression;\r\n}\r\n\r\n/**\r\n * Triggers one or more events via one or more trigger ids.\r\n * \r\n * IMPORTANT: Game events will be triggered asynchronously instead of\r\n * synchronously:\r\n * \r\n * 1. Each trigger id listed in this action will be pushed to a queue in order\r\n *    and processed after all game events from the ongoing trigger are handled.\r\n * 2. The same trigger id can be used multiple times if you need certain game\r\n *    events to be triggered multiple times.\r\n * 3. The processing order is determined by priority (trigger ids with higher\r\n *    priorities will be processed earlier than those with lower priorities).\r\n *    In case of ties, use the time when they are pushed into the queue.\r\n * \r\n * Example:\r\n * \r\n * Suppose you define a game event named \"HandleTick\" triggered by \"Tick\", which\r\n * contains a `TriggerEvents` action with the following trigger definitions in\r\n * order:\r\n * \r\n * (1) \"A\" with priority 100;\r\n * (2) \"B\" with priority 100;\r\n * (3) \"C\" with priority 200.\r\n * \r\n * Suppose you also define another game event named \"HandleA\" triggered by\r\n * \"A\", which contains an event action that triggers \"C\" with priority 50.\r\n * \r\n * Then after \"Tick\" is triggered,\r\n * \r\n * 1. \"C\" is triggered;\r\n * 2. \"A\" is triggered;\r\n * 3. \"B\" is triggered;\r\n * 4. \"C\" is triggered.\r\n */\r\nexport class EATriggerEvents extends EventAction {\r\n\r\n    constructor(private _triggerInfoList: TriggerInfo[]) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'TriggerEvents'\r\n\r\n    /**\r\n     * Creates an `EATriggerEvents` instance from its JSON definition stored in\r\n     * the given JSON object.\r\n     * @param obj Schema\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"TriggerEvents\",\r\n     *         \"triggers\": [\r\n     *             {\r\n     *                 \"id\": string,\r\n     *                 \"priority\": number | undefined,\r\n     *                 \"probability\": number | string | undefined\r\n     *             }\r\n     *         ]\r\n     *     }\r\n     *     ```\r\n     *     The default `priority` is 0. Triggers with higher priorities with be\r\n     *     processed earlier than those with lower priorities. In case of same\r\n     *     priorities, triggers defined first will be processed first.\r\n     *     `probability` defaults to 1 if not set, meaning the 100% chance of\r\n     *     triggering. It can also be an expression that will be evaluated when\r\n     *     the event action is executed.\r\n     * @param context Used to compile expressions in the `probability` fields.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EATriggerEvents {\r\n        let triggerInfoList: TriggerInfo[] = [];\r\n        if (!obj['triggers'] || !Array.isArray(obj['triggers'])) {\r\n            throw new Error('Missing trigger definitions.');\r\n        }\r\n        for (const trigger of obj['triggers']) {\r\n            let triggerId = trigger['id'];\r\n            if (typeof triggerId !== 'string') {\r\n                throw new Error('Missing valid trigger id.');\r\n            }\r\n            let priority = trigger['priority'] || 0;\r\n            if (typeof priority !== 'number' || isNaN(priority)) {\r\n                throw new Error('Priority must be a valid number.');\r\n            }\r\n            let triggerInfo: TriggerInfo = {\r\n                \"id\": triggerId,\r\n                \"priority\": priority\r\n            };\r\n            let probability = trigger['probability'];\r\n            if (probability != undefined) {\r\n                if (typeof probability !== 'string' &&\r\n                    typeof probability !== 'number') {\r\n                    throw new Error('Invalid probability definition.');\r\n                }\r\n                triggerInfo['probability'] =\r\n                    context.expressionCompiler.compile(probability);\r\n            }\r\n            triggerInfoList.push(triggerInfo);\r\n        }\r\n        return new EATriggerEvents(triggerInfoList);\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        for (const trigger of this._triggerInfoList) {\r\n            const probability = trigger.probability == undefined\r\n                ? 1.0\r\n                : context.evaluator.eval(trigger.probability);\r\n            context.eventEngine.trigger(trigger.id, probability,\r\n                                        trigger.priority);\r\n        }\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Enables one or more events. This action can re-enable game events with `once`\r\n * set to true.\r\n */\r\nexport class EAEnableEvents extends EventAction {\r\n\r\n    constructor(private _eventIds: string[]) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'EnableEvents';\r\n\r\n    /**\r\n     * Creates an `EAEnableEvents` instance from its JSON definition stored in\r\n     * the given JSON object.\r\n     * @param obj Schema\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"EnableEvents\",\r\n     *         \"eventIds\": string[]\r\n     *     }\r\n     *     ```\r\n     * @param context Not used.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EAEnableEvents {\r\n        if (!('eventIds' in obj) || !Array.isArray(obj.eventIds)) {\r\n            throw new Error('Expecting \"eventIds\" to be an array.');\r\n        }\r\n        let eventIds: string[] = [];\r\n        for (let eventId of obj.eventIds) {\r\n            if (typeof eventId !== 'string') {\r\n                throw new Error('Expect event id to be a string.');\r\n            }\r\n            eventIds.push(eventId);\r\n        }\r\n        return new EAEnableEvents(eventIds);\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        for (const eventId of this._eventIds) {\r\n            context.eventEngine.enableEvent(eventId);\r\n        }\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Disables one or more events.\r\n */\r\nexport class EADisableEvents extends EventAction {\r\n\r\n    constructor(private _eventIds: string[]) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'DisableEvents';\r\n\r\n    /**\r\n     * Creates an `EADisableEvents` instance from its JSON definition stored in\r\n     * the given JSON object.\r\n     * @param obj Schema\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"DisableEvents\",\r\n     *         \"eventIds\": string[]\r\n     *     }\r\n     *     ```\r\n     * @param context Not used.\r\n     */\r\n    static fromJSONObject(obj: any, context: EventActionDeserializationContext): EADisableEvents {\r\n        if (!('eventIds' in obj) || !Array.isArray(obj.eventIds)) {\r\n            throw new Error('Expecting \"eventIds\" to be an array.');\r\n        }\r\n        let eventIds: string[] = [];\r\n        for (let eventId of obj.eventIds) {\r\n            if (typeof eventId !== 'string') {\r\n                throw new Error('Expect event id to be a string.');\r\n            }\r\n            eventIds.push(eventId);\r\n        }\r\n        return new EADisableEvents(eventIds);\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        for (const eventId of this._eventIds) {\r\n            context.eventEngine.disableEvent(eventId);\r\n        }\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n","import { EventCondition, EventConditionEvaluationContext } from './core';\r\nimport { CompiledEventExpression, EventExpressionCompiler } from './expression';\r\n\r\ninterface EventConditionDeserializationContext {\r\n    conditionFactory: EventConditionFactory;\r\n    expressionCompiler: EventExpressionCompiler;\r\n}\r\n\r\ntype EventConditionDeserializer =\r\n    (obj: object, context: EventConditionDeserializationContext) => EventCondition;\r\n\r\nexport interface EventConditionDeserializerDefinition {\r\n    ID: string;\r\n    fromJSONObject: EventConditionDeserializer;\r\n}\r\n\r\nexport class EventConditionFactory {\r\n\r\n    private _deserializers: Map<string, EventConditionDeserializer> = new Map();\r\n    private _deserializationContext: EventConditionDeserializationContext;\r\n\r\n    constructor(expressionCompiler: EventExpressionCompiler) {\r\n        this._deserializationContext = {\r\n            conditionFactory: this,\r\n            expressionCompiler: expressionCompiler\r\n        };\r\n    }\r\n\r\n    registerDeserializer(def: EventConditionDeserializerDefinition) : void {\r\n        this._deserializers.set(def.ID, def.fromJSONObject);\r\n    }\r\n\r\n    fromJSONObject(obj: object): EventCondition {\r\n        if (!('id' in obj) || typeof obj.id !== 'string') {\r\n            throw new Error('Condition id must be a string.');\r\n        }\r\n        const conditionId = obj.id;\r\n        const deserializer = this._deserializers.get(conditionId);\r\n        if (deserializer == undefined) {\r\n            throw new Error(`No deserializer defined for \"${conditionId}\".`);\r\n        }\r\n        return deserializer(obj, this._deserializationContext);\r\n    }\r\n\r\n    /**\r\n     * A more relaxed version of `fromJSONObject()` that allows expression\r\n     * inputs (string or number) in addition to objects.\r\n     */\r\n    fromJSON(obj: any): EventCondition {\r\n        if (obj == undefined) throw new Error('JSON input cannot be null.');\r\n        if (typeof obj === 'number' || typeof obj === 'string') {\r\n            return new ECExpression(\r\n                this._deserializationContext.expressionCompiler.compile(obj));\r\n        } else if (typeof obj === 'object') {\r\n            return this.fromJSONObject(obj);\r\n        } else {\r\n            throw new Error('Unsupported JSON input.');\r\n        }\r\n    }\r\n\r\n    fromJSONArray(objectArray: any[]): EventCondition[] {\r\n        return objectArray.map((obj) => this.fromJSON(obj));\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Represents a condition constructed from a simple expression. The condition\r\n * evaluates to true when the expression evaluates to a valid non-zero number\r\n * (no NaN).\r\n */\r\nexport class ECExpression extends EventCondition {\r\n\r\n    constructor(private _expression: CompiledEventExpression) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'Expression';\r\n    \r\n    /**\r\n     * Creates a new `ECExpression` instance from its JSON definition stored in\r\n     * the given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"Expression\",\r\n     *         \"expression\": number | string\r\n     *     }\r\n     *     ```\r\n     * @param context The required context to construct the event condition.\r\n     */\r\n    static fromJSONObject(obj: object, context: EventConditionDeserializationContext): ECExpression {\r\n        if (!('expression' in obj) || obj.expression == undefined) {\r\n            throw new Error('Missing expression.');\r\n        }\r\n        const expression = obj.expression;\r\n        if (typeof expression !== 'number' && typeof expression !== 'string') {\r\n            throw new Error('Expression must be a number or string.');\r\n        }\r\n        return new ECExpression(context.expressionCompiler.compile(expression));\r\n    }\r\n\r\n    check(context: EventConditionEvaluationContext): boolean {\r\n        return !!context.evaluator.eval(this._expression);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Negates the given condition.\r\n */\r\nexport class ECNot extends EventCondition {\r\n\r\n    constructor(private _condition: EventCondition) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'Not';\r\n    \r\n    /**\r\n     * Creates a new `ECNot` instance from its JSON definition stored in the\r\n     * given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"Not\",\r\n     *         \"condition\": number | string | EventCondition\r\n     *     }\r\n     *     ```\r\n     * @param context The required context to construct the event condition.\r\n     */\r\n    static fromJSONObject(obj: object, context: EventConditionDeserializationContext): ECNot {\r\n        if (!('condition' in obj) || obj.condition == undefined) {\r\n            throw new Error('Missing condition definition.');\r\n        }\r\n        return new ECNot(context.conditionFactory.fromJSON(obj.condition));\r\n    }\r\n\r\n    check(context: EventConditionEvaluationContext): boolean {\r\n        return !this._condition.check(context);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Evaluates to true if an only if all sub-conditions evaluate true.\r\n */\r\nexport class ECAll extends EventCondition {\r\n    \r\n    constructor(private _conditions: EventCondition[]) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'All'\r\n\r\n    /**\r\n     * Creates a new `ECAll` instance from its JSON definition stored in the\r\n     * given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"All\",\r\n     *         \"conditions\": Array<number | string | EventCondition>\r\n     *     }\r\n     *     ```\r\n     *     Each sub-condition in `conditions` can either be a simple expression\r\n     *     or another event condition.\r\n     * @param context The required context to construct the event condition.\r\n     */\r\n    static fromJSONObject(obj: object, context: EventConditionDeserializationContext): ECAll {\r\n        if (!('conditions' in obj) || !Array.isArray(obj.conditions)) {\r\n            throw new Error('Missing condition definitions.');\r\n        }\r\n        return new ECAll(\r\n            context.conditionFactory.fromJSONArray(obj.conditions));\r\n    }\r\n\r\n    check(context: EventConditionEvaluationContext): boolean {\r\n        for (let cond of this._conditions) {\r\n            if (!cond.check(context)) return false; \r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Evaluates to true if any sub-condition evaluates true.\r\n */\r\nexport class ECAny extends EventCondition {\r\n    \r\n    constructor(private _conditions: EventCondition[]) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'Any';\r\n\r\n    /**\r\n     * Creates a new `ECAny` instance from its JSON definition stored in the\r\n     * given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"Any\",\r\n     *         \"conditions\": Array<number | string | EventCondition>\r\n     *     }\r\n     *     ```\r\n     *     Each sub-condition in `conditions` can either be a simple expression\r\n     *     or another event condition.\r\n     * @param context The required context to construct the event condition.\r\n     */\r\n    static fromJSONObject(obj: object, context: EventConditionDeserializationContext): ECAny {\r\n        if (!('conditions' in obj) || !Array.isArray(obj.conditions)) {\r\n            throw new Error('Missing condition definitions.');\r\n        }\r\n        return new ECAny(\r\n            context.conditionFactory.fromJSONArray(obj.conditions));\r\n    }\r\n\r\n    check(context: EventConditionEvaluationContext): boolean {\r\n        for (let cond of this._conditions) {\r\n            if (cond.check(context)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Evaluates to true if some sub-conditions evaluate true.\r\n */\r\nexport class ECSome extends EventCondition {\r\n    \r\n    constructor(private _conditions: EventCondition[],\r\n                private _min: CompiledEventExpression,\r\n                private _max: CompiledEventExpression) {\r\n        super();\r\n    }\r\n\r\n    static ID = 'Some';\r\n\r\n    /**\r\n     * Creates a new `ECSome` instance from its JSON definition stored in the\r\n     * given JSON object.\r\n     * @param obj Schema:\r\n     *     ```\r\n     *     {\r\n     *         \"id\": \"Some\",\r\n     *         \"min\": number | string | undefined,\r\n     *         \"max\": number | string | undefined,\r\n     *         \"conditions\": Array<number | string | EventCondition>\r\n     *     }\r\n     *     ```\r\n     *     Each sub-condition in `conditions` can either be a simple expression\r\n     *     or another event condition.\r\n     * \r\n     *     `min` (inclusive) and `max` (inclusive) specifies the allowed number\r\n     *     of sub-conditions that can be true. They can be a constant number or\r\n     *     an expression. If not set, `min` defaults to `-Infinity` and `max`\r\n     *     defaults to `Infinity`.\r\n     * \r\n     *     If you require exactly N sub-conditions to be true, set `min` and\r\n     *     `max` to the same value N.\r\n     * @param context The required context to construct the event condition.\r\n     */\r\n    static fromJSONObject(obj: object, context: EventConditionDeserializationContext): ECSome {\r\n        if (!('conditions' in obj) || !Array.isArray(obj['conditions'])) {\r\n            throw new Error('Missing condition definitions.');\r\n        }\r\n        const conditions =\r\n            context.conditionFactory.fromJSONArray(obj['conditions']);\r\n        let min: CompiledEventExpression;\r\n        if (!('min' in obj)) {\r\n            min = context.expressionCompiler.compile(-Infinity);\r\n        } else if (typeof obj['min'] === 'number' ||\r\n                   typeof obj['min'] === 'string') {\r\n            min = context.expressionCompiler.compile(obj['min']);\r\n        } else {\r\n            throw new Error('min must be a valid number or expression string.');\r\n        }\r\n        let max: CompiledEventExpression;\r\n        if (!('max' in obj)) {\r\n            max = context.expressionCompiler.compile(Infinity);\r\n        } else if (typeof obj['max'] === 'number' ||\r\n                   typeof obj['max'] === 'string') {\r\n            max = context.expressionCompiler.compile(obj['max']);\r\n        } else {\r\n            throw new Error('max must be a valid number or expression string.');\r\n        }\r\n        return new ECSome(conditions, min, max);\r\n    }\r\n\r\n    check(context: EventConditionEvaluationContext): boolean {\r\n        const min = context.evaluator.eval(this._min);\r\n        const max = context.evaluator.eval(this._max);\r\n        let n = 0;\r\n        for (let c of this._conditions) {\r\n            if (c.check(context)) n++;\r\n        }\r\n        return n >= min && n <= max;\r\n    }\r\n\r\n}\r\n","/**\r\n * Core definitions for the event system.\r\n */\r\nimport { Inventory } from '../effect/item';\r\nimport { StatusTable } from '../effect/status';\r\nimport { VariableStore } from '../variableStore';\r\nimport { SetBuilder } from '../utils/collection';\r\nimport { RandomSource } from '../utils/random';\r\nimport { GameEventEngine } from './engine';\r\nimport { EventExpressionEvaluator, CompiledEventExpression } from './expression';\r\nimport { EndGameState } from '../endGameState';\r\n\r\n/**\r\n * Delegates the execution of actual GUI related actions.\r\n * An instance will be passed as an argument in the execute()\r\n * function so each EventAction instance does not need to hold references to \r\n * action targets such as the GUI instances.\r\n * EventAction instances do not need to know the implementation details of\r\n * the action targets.\r\n */\r\nexport interface GuiActionProxy {\r\n    /**\r\n     * Provides the ability to display a message.\r\n     * @param message Message (potentially unlocalized) to be displayed.\r\n     * @param confirm Text (potentially unlocalized) of the confirm button.\r\n     */\r\n    displayMessage(message: string, confirm: string, icon?: string, fx?: string): Promise<void>;\r\n    /**\r\n     * Provides the ability to display a message with multiple choices.\r\n     * @param message Message (potentially unlocalized) to be displayed.\r\n     * @param choices Texts (potentially unlocalized) of choices.\r\n     */\r\n    displayChoices(message: string, choices: Array<[string, number]>, icon?: string): Promise<number>;\r\n}\r\n\r\n/**\r\n * Context needed to evaluate an `EventCondition`.\r\n */\r\nexport interface EventConditionEvaluationContext {\r\n    readonly variableStore: VariableStore;\r\n    readonly random: RandomSource;\r\n    readonly evaluator: EventExpressionEvaluator;\r\n}\r\n\r\n/**\r\n * Represents a condition.\r\n * The implementation should be stateless and only storing necessary\r\n * definitions.\r\n */\r\nexport abstract class EventCondition {\r\n\r\n    check(context: EventConditionEvaluationContext): boolean {\r\n        throw new Error('Not implemented.');\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Context needed to execute an `EventAction`.\r\n */\r\nexport interface EventActionExecutionContext extends EventConditionEvaluationContext {\r\n    readonly inventory: Inventory;\r\n    readonly statusTable: StatusTable;\r\n    readonly eventEngine: GameEventEngine;\r\n    readonly actionProxy: GuiActionProxy;\r\n    setEndGameState(state: EndGameState, endingType?: string): void;\r\n}\r\n\r\nexport enum EventActionResult {\r\n    /**\r\n     * Indicates the execution of EventActions should continue normally.\r\n     */\r\n    Ok,\r\n    /**\r\n     * Execution of further EventActions in the current action list should be\r\n     * aborted. The remaining EventActions in the current GameEvent but not in\r\n     * the current action list may still run.\r\n     */\r\n    StopExecutionLocally,\r\n    /**\r\n     * Execution of all further EventActions in the current GameEvent should\r\n     * be aborted.\r\n     */\r\n    StopExecutionGlobally,\r\n}\r\n\r\nconst EMPTY_TRANSLATION_KEYS: ReadonlySet<string> = new Set();\r\n\r\n/**\r\n * Represents an action.\r\n */\r\nexport abstract class EventAction {\r\n\r\n    /**\r\n     * Execute the action in the given `context`. Execution can be either\r\n     * synchronous or asynchronous. A promise should be returned in case of \r\n     * asynchronous executions.\r\n     * Note: Should not be called while this event action is already executing.\r\n     */\r\n    abstract execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult>;\r\n\r\n    // Collects all translation keys defined in this event action as a set.\r\n    collectTranslationKeys(): ReadonlySet<string> {\r\n        return EMPTY_TRANSLATION_KEYS;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Helper class to manage the execution of a fixed list of actions.\r\n */\r\nexport class EventActionList {\r\n\r\n    constructor(private _actions: ReadonlyArray<EventAction>,\r\n                private _nextIndex: number = -1) {}\r\n\r\n    get actions(): ReadonlyArray<EventAction> {\r\n        return this._actions;\r\n    }\r\n\r\n    execute(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        if (this._nextIndex >= 0) throw new Error('Already executing.'); \r\n        this._nextIndex = 0;\r\n        return this._executeNext(context);\r\n    }\r\n\r\n    // Collects all translation keys defined from the EventActions in this list.\r\n    collectTranslationKeys(): ReadonlySet<string> {\r\n        const builder = new SetBuilder<string>();\r\n        for (let action of this._actions) {\r\n            builder.addAll(action.collectTranslationKeys());\r\n        }\r\n        return builder.get();\r\n    }\r\n\r\n    private _executeNext(context: EventActionExecutionContext): EventActionResult | Promise<EventActionResult> {\r\n        while (this._nextIndex >= 0 && this._nextIndex < this._actions.length) {\r\n            const action = this._actions[this._nextIndex];\r\n            ++this._nextIndex;\r\n            const result = action.execute(context);\r\n            if (typeof result === 'number') {\r\n                if (result !== EventActionResult.Ok) {\r\n                    this._nextIndex = -1;\r\n                    return result === EventActionResult.StopExecutionLocally\r\n                        ? EventActionResult.Ok\r\n                        : EventActionResult.StopExecutionGlobally;\r\n                }\r\n            } else {\r\n                return result.then((futureResult) => {\r\n                    if (futureResult === EventActionResult.Ok) {\r\n                        return this._executeNext(context);\r\n                    }\r\n                    this._nextIndex = -1;\r\n                    return futureResult === EventActionResult.StopExecutionLocally\r\n                        ? EventActionResult.Ok\r\n                        : EventActionResult.StopExecutionGlobally;\r\n                });\r\n            }\r\n        }\r\n        this._nextIndex = -1;\r\n        return EventActionResult.Ok;\r\n    }\r\n\r\n}\r\n\r\nconst EMPTY_EVENT_ACTION_LIST = new EventActionList([]);\r\n\r\n/**\r\n * Represents a game event.\r\n * The implementation should be stateless and only contain necessary\r\n * definitions.\r\n */\r\nexport class GameEvent {\r\n    \r\n    constructor(private _id: string, private _trigger: string,\r\n                private _conditions: EventCondition[] = [],\r\n                private _actions: EventActionList = EMPTY_EVENT_ACTION_LIST,\r\n                private _probability: number | CompiledEventExpression = 1.0,\r\n                private _exclusions: string[] = [],\r\n                private _once: boolean = false,\r\n                private _disabledByDefault: boolean = false)\r\n    {\r\n    }\r\n    /**\r\n     * Unique identifier of this event.\r\n     */\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n    /**\r\n     * Trigger id.\r\n     */\r\n    get trigger(): string {\r\n        return this._trigger;\r\n    }\r\n    /**\r\n     * Conditions for this event.\r\n     */\r\n    get conditions(): EventCondition[] {\r\n        return this._conditions;\r\n    }\r\n    /**\r\n     * Actions for this event.\r\n     */\r\n    get actions(): EventActionList {\r\n        return this._actions;\r\n    }\r\n    /**\r\n     * Probability of executing the actions if all conditions are meet.\r\n     */\r\n    get probability(): number | CompiledEventExpression {\r\n        return this._probability;\r\n    }\r\n    /**\r\n     * Collection of event ids that are not allowed to be triggered under the\r\n     * SAME trigger after successfully executing all actions of this event.\r\n     */\r\n    get exclusions(): string[] {\r\n        return this._exclusions;\r\n    }\r\n    /**\r\n     * Returns if this event only occurs once.\r\n     */\r\n    get once(): boolean {\r\n        return this._once;\r\n    }\r\n\r\n    /**\r\n     * Returns if this event is disable by default.\r\n     */\r\n    get disabledByDefault(): boolean {\r\n        return this._disabledByDefault;\r\n    }\r\n\r\n    /**\r\n     * Collects translation keys from all event actions\r\n     */\r\n    collectTranslationKeys(): ReadonlySet<string> {\r\n        return this._actions.collectTranslationKeys();\r\n    }\r\n}\r\n\r\nexport interface EventOccurrenceTracker {\r\n    /**\r\n     * Returns the occurrence count of an event with the given `eventId`.\r\n     */\r\n    getEventOccurrenceCount(eventId: string): number;\r\n}\r\n","import { GameEvent, EventActionExecutionContext, EventOccurrenceTracker, EventActionResult } from './core';\r\nimport { PriorityQueue } from '../utils/priorityQueue';\r\n\r\ninterface GameEventInfo {\r\n    event: GameEvent;\r\n    disabled: boolean;\r\n    occurrenceCount: number;\r\n}\r\n\r\ninterface PendingTrigger {\r\n    id: string;\r\n    priority: number;\r\n    order: number;\r\n    probability: number;\r\n}\r\n\r\nfunction comparePendingTrigger(a: PendingTrigger, b: PendingTrigger): boolean {\r\n    if (a.priority !== b.priority) return a.priority < b.priority;\r\n    if (a.order !== b.order) return a.order > b.order;\r\n    return a.id < b.id;\r\n}\r\n\r\nexport class GameEventEngine implements EventOccurrenceTracker {\r\n\r\n    private _eventsByTrigger: Map<string, GameEvent[]> = new Map();\r\n    // id => (GameEvent, disabled)\r\n    private _eventInfoById: Map<string, GameEventInfo> = new Map();\r\n    private _pendingTriggers: PriorityQueue<PendingTrigger> =\r\n        new PriorityQueue(comparePendingTrigger);\r\n    private _pendingTriggerOrder: number = 0;\r\n    // Event actions and condition have access to the same expression evaluator.\r\n    private _ongoingTrigger: string | null = null;\r\n\r\n    constructor() {}\r\n\r\n    /**\r\n     * Enables the game event of the given `eventId`.\r\n     * Throws an error if the given `eventId` does not exist.\r\n     */\r\n    enableEvent(eventId: string): void {\r\n        let info = this._eventInfoById.get(eventId);\r\n        if (info == undefined) {\r\n            throw new Error(`Event \"${eventId}\" does not exist.`);\r\n        }\r\n        info.disabled = false;\r\n    }\r\n\r\n    /**\r\n     * Disables the game event of the given `eventId`.\r\n     * Throws an error if the given `eventId` does not exist.\r\n     */\r\n    disableEvent(eventId: string): void {\r\n        let info = this._eventInfoById.get(eventId);\r\n        if (info == undefined) {\r\n            throw new Error(`Event \"${eventId}\" does not exist.`);\r\n        }\r\n        info.disabled = true;\r\n    }\r\n\r\n    registerEvents(events: GameEvent[]): void {\r\n        for (let e of events) {\r\n            this.registerEvent(e);\r\n        }\r\n    }\r\n\r\n    registerEvent(e: GameEvent): void {\r\n        if (this._eventInfoById.has(e.id)) {\r\n            throw new Error(`Event \"${e.id}\" is already registered.`);\r\n        }\r\n        this._eventInfoById.set(e.id, {\r\n            event: e,\r\n            disabled: e.disabledByDefault,\r\n            occurrenceCount: 0\r\n        });\r\n        let existingEvents = this._eventsByTrigger.get(e.trigger);\r\n        if (existingEvents == undefined) {\r\n            this._eventsByTrigger.set(e.trigger, [e]);\r\n        } else {\r\n            existingEvents.push(e);\r\n        }\r\n    }\r\n\r\n    unregisterEvent(e: GameEvent): void {\r\n        if (!this._eventInfoById.has(e.id)) return;\r\n        this._eventInfoById.delete(e.id);\r\n        let existingEvents = this._eventsByTrigger.get(e.trigger);\r\n        if (existingEvents != undefined) {\r\n            const index = existingEvents.indexOf(e);\r\n            if (index >= 0) {\r\n                existingEvents.splice(index, 1);\r\n                if (existingEvents.length === 0) {\r\n                    this._eventsByTrigger.delete(e.trigger);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        throw new Error('Invariance broken: event has info entry but not registered under any trigger id.');\r\n    }\r\n\r\n    getEvents(): GameEvent[] {\r\n        let events: GameEvent[] = [];\r\n        for (let info of this._eventInfoById.values()) {\r\n            events.push(info.event);\r\n        }\r\n        return events;\r\n    }\r\n\r\n    getEventOccurrenceCount(eventId: string): number {\r\n        const info = this._eventInfoById.get(eventId);\r\n        return info == undefined ? 0 : info.occurrenceCount;\r\n    }\r\n\r\n    /**\r\n     * Triggers events with the given trigger id.\r\n     * NOTE: This method simply pushes the given trigger into the queue, which\r\n     * won't be processed until `processNextTrigger()` is called.\r\n     * @param triggerId Trigger id.\r\n     * @param probability Probability of triggering.\r\n     * @param priority Priority.\r\n     */\r\n    trigger(triggerId: string, probability: number, priority: number): void {\r\n        if (triggerId.length === 0) {\r\n            throw new Error('Trigger id cannot be empty.');\r\n        }\r\n        this._pendingTriggers.push({\r\n            'id': triggerId,\r\n            'priority': priority,\r\n            'order': this._pendingTriggerOrder++,\r\n            'probability': probability\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Processes the next trigger in the queue using the given `context`.\r\n     * \r\n     * NOTE: Recursive `processNextTrigger()` calls are not supported.\r\n     * \r\n     * Returns `true` if there are still pending triggers in the queue.\r\n     * Otherwise returns `false`.\r\n     */\r\n    async processNextTrigger(context: EventActionExecutionContext): Promise<boolean> {\r\n        // Check if we need to process the next trigger first\r\n        if (this._pendingTriggers.empty()) return false;\r\n        const pendingTrigger = this._pendingTriggers.pop();\r\n        if (pendingTrigger.probability <= 0 || (\r\n            pendingTrigger.probability < 1 &&\r\n            context.random.next() > pendingTrigger.probability)) {\r\n            return !this._pendingTriggers.empty();\r\n        }\r\n        // Actual processing\r\n        if (this._ongoingTrigger != null) {\r\n            throw new Error(`Cannot process the next trigger when the ongoing trigger \"${this._ongoingTrigger}\" is still being processed.`);\r\n        }\r\n        const triggerId = pendingTrigger.id;\r\n        this._ongoingTrigger = triggerId;\r\n        const events = this._eventsByTrigger.get(triggerId);\r\n        if (events == undefined) return !this._pendingTriggers.empty();\r\n        let exclusions: { [key: string]: boolean; } = {};\r\n        for (let e of events) {\r\n            const info = this._eventInfoById.get(e.id) as GameEventInfo;\r\n            // Skip disabled events.\r\n            if (info.disabled) continue;\r\n            // Skip mutually exclusive events.\r\n            if (exclusions[e.id]) continue;\r\n            // Check all the conditions.\r\n            let skip = false;\r\n            for (let c of e.conditions) {\r\n                if (!c.check(context)) {\r\n                    skip = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (skip) continue;\r\n            // Randomness\r\n            const p = typeof e.probability === 'number'\r\n                ? e.probability\r\n                : context.evaluator.eval(e.probability);\r\n            if (p <= 0 || (p < 1 && context.random.next() > p)) {\r\n                continue;\r\n            }\r\n            // Add exclusions\r\n            for (let ex of e.exclusions) {\r\n                exclusions[ex] = true;\r\n            }\r\n            // Mark as occurred\r\n            ++info.occurrenceCount;\r\n            // Execute actions\r\n            const result = await e.actions.execute(context);\r\n            // Once\r\n            if (e.once) {\r\n                info.disabled = true;\r\n            }\r\n            // Check end condition\r\n            if (result === EventActionResult.StopExecutionGlobally) break;\r\n        }\r\n        this._ongoingTrigger = null;\r\n        return !this._pendingTriggers.empty();\r\n    }\r\n\r\n    /**\r\n     * Resets each game event's state (e.g., disabled/enabled) as well as\r\n     * pending triggers.\r\n     */\r\n    reset(): void {\r\n        if (this._ongoingTrigger != null) {\r\n            throw new Error(`Cannot reset the engine when the ongoing trigger \"${this._ongoingTrigger}\" is still being processed.`);\r\n        }\r\n        for (let info of this._eventInfoById.values()) {\r\n            info.disabled = info.event.disabledByDefault;\r\n            info.occurrenceCount = 0;\r\n        }\r\n        this._pendingTriggers.clear();\r\n        this._pendingTriggerOrder = 0;\r\n    }\r\n\r\n}\r\n","import { FunctionTable, ExpressionEvaluator, CompiledExpression, FunctionTableProvider, ExpressionCompiler, compileExpression } from '../utils/expression';\r\nimport { VariableStore } from '../variableStore';\r\nimport { EventOccurrenceTracker } from './core';\r\nimport { RandomSource } from '../utils/random';\r\nimport { Inventory } from '../effect/item';\r\nimport { StatusTable } from '../effect/status';\r\nimport { AttributeModifier, AttributeRegistry } from '../effect/attribute';\r\n\r\nexport interface EventExpressionFunctionTable extends FunctionTable {\r\n    // Math functions. \r\n    random(): number;\r\n    randi(x: number): number;\r\n    max(...values: number[]): number;\r\n    min(...values: number[]): number;\r\n    floor(x: number): number;\r\n    round(x: number): number;\r\n    ceil(x: number): number;\r\n    clip(x: number, min: number, max: number): number;\r\n    /**\r\n     * Sets variable limits.\r\n     */\r\n    setVarLimits(varName: string, lb: number, ub: number): void;\r\n    /**\r\n     * Retrieves the upper bound of a game variable.\r\n     */\r\n    upperBound(varName: string): number;\r\n    /**\r\n     * Retrieves the lower bound of a game variable.  \r\n     */  \r\n    lowerBound(varName: string): number;\r\n    /**\r\n     * Checks if the specified event has occurred.\r\n     */\r\n    eventOccurred(id: string): boolean;\r\n    /**\r\n     * Returns the number of specified items.\r\n     */\r\n    itemCount(id: string): number;\r\n    /**\r\n     * Returns the total months.\r\n     */\r\n    totalMonths(): number;\r\n    /**\r\n     * Checks if the player has the specified status.\r\n     */\r\n    hasStatus(id: string): boolean;\r\n    /**\r\n     * Calculates the give attribute's value.\r\n     */\r\n    getAttributeValue(id: string): number;\r\n}\r\n\r\nexport type CompiledEventExpression = CompiledExpression<EventExpressionFunctionTable>;\r\nexport type EventExpressionCompiler = ExpressionCompiler<EventExpressionFunctionTable>;\r\nexport type EventExpressionEvaluator = ExpressionEvaluator<EventExpressionFunctionTable>;\r\nexport type EventFunctionTableProvider = FunctionTableProvider<EventExpressionFunctionTable>;\r\n\r\nexport class EventExpressionEngine implements EventFunctionTableProvider, EventExpressionCompiler, EventExpressionEvaluator {\r\n\r\n    private _fTable: EventExpressionFunctionTable;\r\n    private _variableStore: VariableStore;\r\n    private _attributes: AttributeRegistry;\r\n    private _inventory: Inventory;\r\n    private _statusTable: StatusTable;\r\n    private _random: RandomSource\r\n    private _eventOccurrenceTracker: EventOccurrenceTracker;\r\n    private _cache: { [key: string]: CompiledEventExpression } = {};\r\n\r\n    constructor(variableStore: VariableStore, attributes: AttributeRegistry,\r\n                inventory: Inventory, statusTable: StatusTable,\r\n                random: RandomSource, tracker: EventOccurrenceTracker) {\r\n        this._variableStore = variableStore;\r\n        this._attributes = attributes;\r\n        this._inventory = inventory;\r\n        this._statusTable = statusTable;\r\n        this._random = random;\r\n        this._eventOccurrenceTracker = tracker;\r\n        this._fTable = this._initFunctionTable();\r\n    }\r\n\r\n    private _initFunctionTable(): EventExpressionFunctionTable {\r\n        return {\r\n            getVar: varName => this._variableStore.getVar(varName, true),\r\n            setVarLimits: (varName: string, lb: number, ub: number) => this._variableStore.setVarLimits(varName, lb, ub),\r\n            eventOccurred: id => this._eventOccurrenceTracker.getEventOccurrenceCount(id) > 0,\r\n            upperBound: varName => this._variableStore.getVarLimits(varName)[1],\r\n            lowerBound: varName => this._variableStore.getVarLimits(varName)[0],\r\n            itemCount: id => this._inventory.count(id),\r\n            totalMonths: () => this._variableStore.getVar('year', true) * 12 + this._variableStore.getVar('month', true),\r\n            getAttributeValue: (id) => {\r\n                const attribute = this._attributes.get(id);\r\n                const amountsItem = this._inventory.getCombinedAttributeModifierAmountsOf(attribute);\r\n                const amountsStatus = this._statusTable.getCombinedAttributeModifierAmountsOf(attribute);\r\n                const value = AttributeModifier.CalculateAttributeValue(attribute, {\r\n                    absolute: amountsItem.absolute + amountsStatus.absolute,\r\n                    relative: amountsItem.relative + amountsStatus.relative,\r\n                    relativeToBase: amountsItem.relativeToBase + amountsStatus.relativeToBase\r\n                });\r\n                return value;\r\n            },\r\n            hasStatus: id => this._statusTable.count(id) > 0,\r\n            random: () => this._random.next(),\r\n            randi: x => Math.floor(this._random.next() * x),\r\n            max: Math.max,\r\n            min: Math.min,\r\n            floor: Math.floor,\r\n            round: Math.round,\r\n            ceil: Math.ceil,\r\n            clip: (x, min, max) => x < min ? x : (x > max ? max : x)\r\n        };\r\n    }\r\n\r\n    getClosure(): EventExpressionFunctionTable {\r\n        return this._fTable;\r\n    }\r\n\r\n    existsFunction(fname: string): boolean {\r\n        return this._fTable[fname] != undefined;\r\n    }\r\n\r\n    compile(expr: string | number): CompiledEventExpression {\r\n        if (typeof expr === \"number\") {\r\n            return {\r\n                source: expr.toString(),\r\n                fn: () => expr\r\n            };\r\n        }\r\n        if (!this._cache[expr]) {\r\n            this._cache[expr] = compileExpression(expr, this);\r\n        }\r\n        return this._cache[expr];\r\n    }\r\n\r\n    eval(expr: CompiledExpression<EventExpressionFunctionTable>): number {\r\n        let val = expr.fn(this.getClosure());\r\n        if (isNaN(val)) throw new Error('Expression produced NaN.');\r\n        return val;\r\n    }\r\n\r\n}\r\n","import { EventConditionFactory } from './conditions';\r\nimport { EventActionFactory } from './actions';\r\nimport { EventActionList, GameEvent } from './core';\r\nimport { downloadAndParse } from '../utils/network';\r\nimport { load as loadYaml } from 'js-yaml';\r\nimport { CompiledEventExpression, EventExpressionCompiler } from './expression';\r\n\r\nexport class GameEventLoader {\r\n\r\n    private _exprCompiler: EventExpressionCompiler;\r\n    private _conditionFactory: EventConditionFactory;\r\n    private _actionFactory: EventActionFactory;\r\n\r\n    constructor(ec: EventExpressionCompiler, cf: EventConditionFactory, af: EventActionFactory) {\r\n        this._exprCompiler = ec;\r\n        this._conditionFactory = cf;\r\n        this._actionFactory = af;\r\n    }\r\n\r\n    async load(url: string): Promise<GameEvent[]> {\r\n        return downloadAndParse(url, s => this.loadFromString(s));\r\n    }\r\n\r\n    loadFromString(s: string): GameEvent[] {\r\n        return this.parseEvents(loadYaml(s) || {});\r\n    }\r\n\r\n    parseEvents(obj: any): GameEvent[] {\r\n        if (!Array.isArray(obj)) throw new Error('Expecting an array of event definitions.');\r\n        // Preserve this!\r\n        return obj.map(item => this.parseEvent(item));\r\n    }\r\n\r\n    /**\r\n     * Creates a game event from its description.\r\n     * Schema:\r\n     *  ```\r\n     *  {\r\n     *      id: string,\r\n     *      trigger: string | undefined, // undefined means never triggered.\r\n     *      conditions: Array<EventCondition | string | number> | undefined,\r\n     *      probability: number | string | undefined,\r\n     *      once: boolean | undefined,\r\n     *      disabled: boolean | undefined,\r\n     *      exclusions: string[] | undefined,\r\n     *      actions: EventAction[]\r\n     *  }\r\n     *  ```\r\n     * @param obj JSON-like object.\r\n     */\r\n    parseEvent(obj: any): GameEvent {\r\n        if (obj['id'] == undefined) throw new Error('Missing event id.');\r\n        const id = obj['id'];\r\n        if (obj['trigger'] != undefined && typeof(obj['trigger']) !== 'string') {\r\n            throw new Error('Event trigger must be a string.');\r\n        }\r\n        const trigger = obj['trigger'] || '';\r\n        const conditions = Array.isArray(obj['conditions'])\r\n            ? obj['conditions'].map((item: any) => this._conditionFactory.fromJSON(item))\r\n            : [];\r\n        let probability: number | CompiledEventExpression;\r\n        if (obj['probability'] == undefined) {\r\n            probability = 1.0;\r\n        } else {\r\n            if (typeof obj['probability'] === 'number') {\r\n                probability = obj['probability'];\r\n            } else if (typeof obj['probability'] === 'string') {\r\n                probability = this._exprCompiler.compile(obj['probability']);\r\n            } else {\r\n                throw new Error('Probability must either a number or a string expression.');\r\n            }\r\n        }\r\n        const exclusions = Array.isArray(obj['exclusions']) ? obj['exclusions'] : [];\r\n        if (!Array.isArray(obj['actions'])) throw new Error('Missing actions.');\r\n        const actions = new EventActionList(obj['actions'].map((item: any) => {\r\n            return this._actionFactory.fromJSONObject(item);\r\n        }));\r\n        const once = !!obj['once'];\r\n        const disabledByDefault = !!obj['disabled'];\r\n        return new GameEvent(id, trigger, conditions, actions, probability,\r\n                             exclusions, once, disabledByDefault);\r\n    }\r\n\r\n}\r\n","import { SetBuilder } from \"../utils/collection\";\r\nimport { weightedSample } from \"../utils/random\";\r\nimport { EventConditionFactory } from \"./conditions\";\r\nimport { EventCondition, EventConditionEvaluationContext } from \"./core\";\r\nimport { CompiledEventExpression, EventExpressionCompiler } from \"./expression\";\r\n\r\n/**\r\n * Source of a translation key used in GameEvents (for e.g., message, choices,\r\n * etc.).\r\n */\r\nexport interface TranslationKeySource {\r\n\r\n    /**\r\n     * Returns the translation key given the `context`.\r\n     */\r\n    getTranslationKey(context: EventConditionEvaluationContext): string;\r\n\r\n    /**\r\n     * Retrieves all possible translation keys that can be returned from this\r\n     * source.\r\n     */\r\n    collectTranslationKeys(): Set<string>;\r\n\r\n}\r\n\r\n/**\r\n * Provides a constant translation key, regardless of the given context.\r\n * Defined as a simple string in GameEvent definitions (e.g., \"message.ok\").\r\n */\r\nexport class ConstantTranslationKeySource implements TranslationKeySource {\r\n\r\n    constructor(private _key: string) { }\r\n\r\n    getTranslationKey(context: EventConditionEvaluationContext): string {\r\n        return this._key;\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        return new Set([this._key])\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Provides a translation key based on some randomness.\r\n * Defined through an array of translation key source definitions if weights are\r\n * equal. Otherwise an array of\r\n *  ```\r\n *  {\r\n *      \"weight\": number,\r\n *      \"text\": TranslationKeySourceDefinition\r\n *  }\r\n *  ```\r\n * Examples,\r\n *  ```\r\n *  [\r\n *      \"message.base\",\r\n *      [\r\n *          \"message.alternative1\",\r\n *          \"message.alternative2\"\r\n *      ],\r\n *  ]\r\n *  ```\r\n *  ```\r\n *  [\r\n *      { \"weight\": 3, \"text\": \"message.variant1\" },\r\n *      { \"weight\": 2, \"text\": \"message.variant2\" },\r\n *      {\r\n *          \"weight\": 1,\r\n *          \"text\": [\r\n *              \"message.variant31\",\r\n *              \"message.variant32\"\r\n *          ]\r\n *      }\r\n *  ]\r\n *  ```\r\n */\r\nexport class RandomTranslationKeySource implements TranslationKeySource {\r\n\r\n    constructor(private _keySources: TranslationKeySource[],\r\n                private _weights: CompiledEventExpression[]) {\r\n        if (this._keySources.length !== this._weights.length) {\r\n            throw new Error(\"The number of TranslationKeySources is not equal to the number of weight expressions.\");\r\n        }\r\n        if (this._keySources.length === 0) {\r\n            throw new Error('At least one TranslationKeySource is required.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Randomly returns a translation key from the list of\r\n     * TranslationKeySources.\r\n     */\r\n    getTranslationKey(context: EventConditionEvaluationContext): string {\r\n        const weights: number[] =\r\n            this._weights.map((w) => context.evaluator.eval(w));\r\n        const index: number =\r\n            weightedSample(weights, () => context.random.next());\r\n        return this._keySources[index].getTranslationKey(context);\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        const builder = new SetBuilder<string>();\r\n        for (const keySource of this._keySources) {\r\n            builder.addAll(keySource.collectTranslationKeys());\r\n        }\r\n        return builder.get();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Provides a translation key conditionally.\r\n * Defined through the following object:\r\n *  ```\r\n *  {\r\n *      \"default\": TranslationKeySourceDefinition\r\n *      \"branches\": [{\r\n *          \"condition\": EventConditionDefinition\r\n *          \"text\": TranslationKeySourceDefinition\r\n *      }]\r\n *  }\r\n *  ```\r\n * Example:\r\n *  ```\r\n *  {\r\n *      \"default\": \"message.default\",\r\n *      \"branches\": [\r\n *          {\r\n *              \"condition\": \"year === 1\",\r\n *              \"text\": [\r\n *                  \"message.year1variant1\",\r\n *                  \"message.year1variant2\"\r\n *              ]\r\n *          },\r\n *          {\r\n *              \"condition\": \"year === 2\",\r\n *              \"text\": \"message.year2\"\r\n *          }\r\n *      ]\r\n *  }\r\n *  ```\r\n */\r\nexport class ConditionalTranslationKeySource implements TranslationKeySource {\r\n\r\n    constructor(private _defaultKey: TranslationKeySource,\r\n                private _conditions: EventCondition[],\r\n                private _keySources: TranslationKeySource[]) {\r\n        if (this._keySources.length !== this._conditions.length) {\r\n            throw new Error(\"The number of TranslationKeySources is not equal to the number of conditions.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the first translation key from the list of TranslationKeySources\r\n     * whose corresponding condition evaluates to true. If none of the\r\n     * conditions evaluates to true, returns the translation key from the\r\n     * default TranslationKeySource.\r\n     */\r\n    getTranslationKey(context: EventConditionEvaluationContext): string {\r\n        for (let i = 0; i < this._conditions.length; i++) {\r\n            if (this._conditions[i].check(context)) {\r\n                return this._keySources[i].getTranslationKey(context);\r\n            }\r\n        }\r\n        return this._defaultKey.getTranslationKey(context);\r\n    }\r\n\r\n    collectTranslationKeys(): Set<string> {\r\n        const builder = new SetBuilder<string>(\r\n            this._defaultKey.collectTranslationKeys());\r\n        for (const keySource of this._keySources) {\r\n            builder.addAll(keySource.collectTranslationKeys());\r\n        }\r\n        return builder.get();\r\n    }\r\n\r\n}\r\n\r\nexport class TranslationKeySourceFactory {\r\n\r\n    constructor(private _conditionFactory: EventConditionFactory,\r\n                private _expressionCompiler: EventExpressionCompiler) { }\r\n\r\n    fromObject(obj: any): TranslationKeySource {\r\n        if (typeof obj === 'string') return new ConstantTranslationKeySource(obj);\r\n        if (Array.isArray(obj)) {\r\n            if (obj.length === 0) {\r\n                throw new Error('The array of TranslationKeySource definitions cannot be empty.');\r\n            }\r\n            let keySources: TranslationKeySource[] = [];\r\n            let weights: CompiledEventExpression[] = [];\r\n            if (typeof obj[0] === 'object' && 'weight' in obj[0] &&\r\n                'text' in obj[0]) {\r\n                // weighted\r\n                for (const def of obj) {\r\n                    const weight = def['weight'];\r\n                    if (weight == undefined) {\r\n                        throw new Error('\"weight\" is not defined.');\r\n                    }\r\n                    if (typeof weight !== 'number' &&\r\n                        typeof weight !== 'string') {\r\n                        throw new Error('Weight must be a number or a string defining an expression.');\r\n                    }\r\n                    weights.push(this._expressionCompiler.compile(weight));\r\n                    const text = def['text'];\r\n                    if (text == undefined) {\r\n                        throw new Error('\"text\" is not defined.');\r\n                    }\r\n                    keySources.push(this.fromObject(text));\r\n                }\r\n            } else {\r\n                // unweighted\r\n                for (const text of obj) {\r\n                    keySources.push(this.fromObject(text));\r\n                    weights.push(this._expressionCompiler.compile(1.0));\r\n                }\r\n            }\r\n            return new RandomTranslationKeySource(keySources, weights);\r\n        } else if (typeof obj === 'object' && 'default' in obj &&\r\n                   'branches' in obj) {\r\n            const defaultKeySource = this.fromObject(obj['default']);\r\n            if (!Array.isArray(obj['branches'])) {\r\n                throw new Error('\"branches\" should be an array.');\r\n            }\r\n            let conditions: EventCondition[] = [];\r\n            let keySources: TranslationKeySource[] = [];\r\n            for (const branch of obj['branches']) {\r\n                conditions.push(\r\n                    this._conditionFactory.fromJSON(branch['condition']));\r\n                keySources.push(this.fromObject(branch['text']));\r\n            }\r\n            return new ConditionalTranslationKeySource(defaultKeySource,\r\n                                                       conditions,\r\n                                                       keySources);\r\n        }\r\n        throw new Error('Unrecognized TranslationKeySource definition.');\r\n    }\r\n\r\n}\r\n","import { EventActionExecutionContext, GuiActionProxy } from './event/core';\r\nimport { VariableStore } from './variableStore';\r\nimport { GuiGame } from './gui/guiGame';\r\nimport { Inventory, ItemRegistry } from './effect/item';\r\nimport { GameEventEngine } from './event/engine';\r\nimport { EventExpressionEngine } from './event/expression';\r\nimport { EventActionFactory, EALog, EADisplayMessage, EADisplayRandomMessage, EADisplayChoices, EARandom, EACoinFlip, EAUpdateVariable, EAUpdateVariables, EAGiveItem, EAUpdateItemAmounts, EAEndGame, EASetStatus, EASwitch, EAUpdateVariableLimits, EATriggerEvents, EALoop, EAEnableEvents, EADisableEvents } from './event/actions';\r\nimport { EventConditionFactory, ECExpression, ECAll, ECAny, ECSome, ECNot } from './event/conditions';\r\nimport { GameEventLoader } from './event/loader';\r\nimport { StatusRegistry, StatusTable } from './effect/status';\r\nimport { AleaRandomSource, RandomSource } from './utils/random';\r\nimport { EndGameState } from './endGameState';\r\nimport { AttributeRegistry } from './effect/attribute';\r\n\r\nexport interface GameConfig {\r\n    initialRandomSeed?: string;\r\n    attributeDefinitionUrl?: string;\r\n    itemDefinitionUrl?: string;\r\n    statusDefinitionUrl?: string;\r\n    eventDefinitionUrl?: string;\r\n}\r\n\r\nfunction newSeedFromNativeRandom(): string {\r\n    return Math.random().toString().substring(2);\r\n}\r\n\r\nexport class GameEndEvent {\r\n    constructor(public readonly state: EndGameState,\r\n                public readonly endingType: string) { }\r\n}\r\n\r\ntype GameEndedEventHandler = (sender: GameEngine, event: GameEndEvent) => void;\r\n\r\n/**\r\n * Central class for the game.\r\n */\r\nexport class GameEngine {\r\n\r\n    private _config: GameConfig;\r\n    private _actionProxy: GuiActionProxy;\r\n    private _attributeRegistry: AttributeRegistry;\r\n    private _itemRegistry: ItemRegistry;\r\n    private _statusRegistry: StatusRegistry;\r\n    private _inventory: Inventory;\r\n    private _statusTable: StatusTable;\r\n    private _variableStore: VariableStore;\r\n    private _endGameState: EndGameState;\r\n    private _endingType: string;\r\n    private _random: AleaRandomSource;\r\n    private _expressionEngine: EventExpressionEngine;\r\n    private _eventEngine: GameEventEngine;\r\n    private _actionFactory: EventActionFactory;\r\n    private _conditionFactory: EventConditionFactory;\r\n    private _executionContext: EventActionExecutionContext;\r\n\r\n    private _dataLoaded: boolean = false;\r\n\r\n    /**\r\n     * Gets/sets the callback when the game ends.\r\n     */\r\n    onGameEnd?: GameEndedEventHandler;\r\n\r\n    constructor(config: GameConfig, ap: GuiActionProxy) {\r\n        // Copy the configuration.\r\n        this._config = Object.assign({}, config);\r\n        this._actionProxy = ap;\r\n        this._attributeRegistry = new AttributeRegistry();\r\n        this._itemRegistry = new ItemRegistry(this._attributeRegistry);\r\n        this._statusRegistry = new StatusRegistry(this._attributeRegistry);\r\n        this._inventory = new Inventory(this._itemRegistry);\r\n        this._statusTable = new StatusTable(this._statusRegistry);\r\n        this._variableStore = new VariableStore();\r\n        this._endGameState = EndGameState.None;\r\n        this._endingType = '';\r\n        this._random = new AleaRandomSource(\r\n            this._config.initialRandomSeed == undefined\r\n                ? newSeedFromNativeRandom()\r\n                : this._config.initialRandomSeed\r\n        );\r\n        this._eventEngine = new GameEventEngine();\r\n        this._expressionEngine = new EventExpressionEngine(\r\n            this._variableStore, this._attributeRegistry, this._inventory,\r\n            this._statusTable, this._random, this._eventEngine);\r\n        this._conditionFactory = \r\n            new EventConditionFactory(this._expressionEngine);\r\n        this._actionFactory = new EventActionFactory(this._conditionFactory,\r\n                                                     this._expressionEngine);\r\n        this._executionContext = {\r\n            variableStore: this._variableStore,\r\n            inventory: this._inventory,\r\n            statusTable: this._statusTable,\r\n            random: this._random,\r\n            evaluator: this._expressionEngine,\r\n            eventEngine: this._eventEngine,\r\n            actionProxy: ap,\r\n            setEndGameState: (state, endingType) => {\r\n                this._endGameState = state\r\n                if (endingType) {\r\n                    this._endingType = endingType;\r\n                }\r\n            },\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Retrieves the variable store.\r\n     */\r\n    get variableStore(): VariableStore {\r\n        return this._variableStore;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the random source.\r\n     */\r\n    get random(): RandomSource {\r\n        return this._random;\r\n    }\r\n    \r\n    /**\r\n     * Retrieves the attribute registry.\r\n     */\r\n    get attributeRegistry(): AttributeRegistry {\r\n        return this._attributeRegistry;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the item registry.\r\n     */\r\n    get itemRegistry(): ItemRegistry {\r\n        return this._itemRegistry;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the status registry.\r\n     */\r\n    get statusRegistry(): StatusRegistry {\r\n        return this._statusRegistry;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the inventory of the current game.\r\n     */\r\n    get inventory(): Inventory {\r\n        return this._inventory;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the status table of the current game.\r\n     */\r\n    get statusTable(): StatusTable {\r\n        return this._statusTable;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the action proxy.\r\n     */\r\n    get actionProxy(): GuiActionProxy {\r\n        return this._actionProxy;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the expression engine.\r\n     */\r\n    get expressionEngine(): EventExpressionEngine {\r\n        return this._expressionEngine;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the event engine.\r\n     */\r\n    get eventEngine(): GameEventEngine {\r\n        return this._eventEngine;\r\n    }\r\n\r\n    /**\r\n     * Loads game data.\r\n     */\r\n    async loadGameData(): Promise<void> {\r\n        if (this._dataLoaded) return;\r\n        this._initFactories();\r\n        if (this._config.attributeDefinitionUrl) {\r\n            await this._attributeRegistry.loadAttributes(\r\n                this._config.attributeDefinitionUrl);\r\n        } else {\r\n            console.warn('Missing attribute definitions. No attributes loaded.');\r\n        }\r\n        if (this._config.itemDefinitionUrl) {\r\n            await this._itemRegistry.loadItems(this._config.itemDefinitionUrl);\r\n        } else {\r\n            console.warn('Missing item definitions. No items loaded.');\r\n        }\r\n        if (this._config.statusDefinitionUrl) {\r\n            await this._statusRegistry.loadStatus(\r\n                this._config.statusDefinitionUrl);\r\n        } else {\r\n            console.warn('Missing status definitions. No status loaded.');\r\n        }\r\n        const eventLoader = new GameEventLoader(this._expressionEngine,\r\n                                                this._conditionFactory,\r\n                                                this._actionFactory);\r\n        if (this._config.eventDefinitionUrl) {\r\n            const events = await eventLoader.load(\r\n                this._config.eventDefinitionUrl);\r\n            this._eventEngine.registerEvents(events);\r\n            console.log(\r\n                `Successfully registered ${events.length} game events.`);\r\n        } else {\r\n            console.warn('Missing event definitions. No events loaded.');\r\n        }\r\n        this._dataLoaded = true;\r\n    }\r\n\r\n    private _initFactories(): void {\r\n        // Event factory\r\n        this._actionFactory.registerDeserializer(EALog);\r\n        this._actionFactory.registerDeserializer(EADisplayMessage);\r\n        this._actionFactory.registerDeserializer(EADisplayRandomMessage);\r\n        this._actionFactory.registerDeserializer(EADisplayChoices);\r\n        this._actionFactory.registerDeserializer(EARandom);\r\n        this._actionFactory.registerDeserializer(EACoinFlip);\r\n        this._actionFactory.registerDeserializer(EAUpdateVariable);\r\n        this._actionFactory.registerDeserializer(EAUpdateVariables);\r\n        this._actionFactory.registerDeserializer(EAUpdateVariableLimits);\r\n        this._actionFactory.registerDeserializer(EAGiveItem);\r\n        this._actionFactory.registerDeserializer(EAUpdateItemAmounts);\r\n        this._actionFactory.registerDeserializer(EAEndGame);\r\n        this._actionFactory.registerDeserializer(EASetStatus);\r\n        this._actionFactory.registerDeserializer(EASwitch);\r\n        this._actionFactory.registerDeserializer(EALoop);\r\n        this._actionFactory.registerDeserializer(EATriggerEvents);\r\n        this._actionFactory.registerDeserializer(EAEnableEvents);\r\n        this._actionFactory.registerDeserializer(EADisableEvents);\r\n        // Condition factory\r\n        this._conditionFactory.registerDeserializer(ECExpression);\r\n        this._conditionFactory.registerDeserializer(ECNot);\r\n        this._conditionFactory.registerDeserializer(ECAll);\r\n        this._conditionFactory.registerDeserializer(ECAny);\r\n        this._conditionFactory.registerDeserializer(ECSome);\r\n    }\r\n\r\n    /**\r\n     * Starts (or restarts) the game.\r\n     * \r\n     * @param newRandomSeed If true will generate a new random seed and use the\r\n     * new seed to reset the random number generator. Otherwise the existing\r\n     * random seed will be used to reset the random number generator.\r\n     */\r\n    async start(newRandomSeed: boolean): Promise<void> {\r\n        if (!this._dataLoaded) {\r\n            await this.loadGameData();\r\n        }\r\n        this._variableStore.reset();\r\n        this._inventory.clear();\r\n        this._statusTable.clear();\r\n        this._endGameState = EndGameState.None;\r\n        if (newRandomSeed) {\r\n            this._random.reset(newSeedFromNativeRandom());\r\n        } else {\r\n            this._random.reset();\r\n        }\r\n        this._eventEngine.reset();\r\n        this._eventEngine.trigger('Initialization', 1.0, 0);\r\n    }\r\n\r\n    /**\r\n     * Advances one game tick.\r\n     */\r\n    async tick(): Promise<void> {\r\n        this._eventEngine.trigger('Tick', 1.0, 0);\r\n        while (true) {\r\n            const pending = await this._eventEngine.processNextTrigger(\r\n                this._executionContext);\r\n            if (this._endGameState !== EndGameState.None) {\r\n                // Restart the game\r\n                if (this.onGameEnd) {\r\n                    this.onGameEnd(\r\n                        this,\r\n                        new GameEndEvent(this._endGameState, this._endingType)\r\n                    );\r\n                }\r\n                await this.start(this._endGameState === EndGameState.Win);\r\n                return;\r\n            } else if (!pending) {\r\n                break;\r\n            }\r\n        }\r\n        this._statusTable.tick();\r\n    }\r\n    \r\n}\r\n\r\nexport class GameActionProxy implements GuiActionProxy {\r\n\r\n    private _guiGame: GuiGame | undefined;\r\n\r\n    attachGui(gui: GuiGame): void {\r\n        this._guiGame = gui;\r\n    }\r\n\r\n    displayMessage(message: string, confirm: string, icon?: string, fx?: string): Promise<void> {\r\n        if (!this._guiGame) throw new Error('No attached GUI.');\r\n        return this._guiGame.displayMessage(message, confirm, icon, fx);\r\n    }\r\n\r\n    displayChoices(message: string, choices: Array<[string, number]>, icon?: string): Promise<number> {\r\n        if (!this._guiGame) throw new Error('No attached GUI.');\r\n        return this._guiGame.displayChoices(message, choices, icon);\r\n    }\r\n\r\n}\r\n","import { GameTextEngine } from './textEngine';\r\n\r\nexport class GuiBase<T extends HTMLElement> {\r\n\r\n    protected _container: T;\r\n    protected _textEngine: GameTextEngine;\r\n\r\n    constructor(container: T, textRenderer: GameTextEngine) {\r\n        this._container = container;\r\n        this._textEngine = textRenderer\r\n    }\r\n\r\n    setHidden(hidden: boolean): void {\r\n        this._container.style.display = hidden ? 'none' : 'block';\r\n    }\r\n\r\n    removeAllChildrenOf(el: HTMLElement): void {\r\n        while (el.firstChild) el.removeChild(el.firstChild);\r\n    }\r\n\r\n    createAndAddChild<T extends HTMLElement>(type: string, id?: string, className?: string): T {\r\n        const el = document.createElement(type);\r\n        if (id) el.id = id;\r\n        if (className) el.className = className;\r\n        this._container.appendChild(el);\r\n        // Unsafe hack.\r\n        return <T>el;\r\n    }\r\n\r\n}\r\n","import { GuiBase } from './guiBase';\r\nimport { SimpleRegistry } from '../utils/simpleRegistry';\r\nimport { EffectProviderCollection, EffectProvider, EffectProviderCollectionChangedEvent } from '../effect/effect';\r\nimport { Item } from '../effect/item';\r\nimport { GameTextEngine } from './textEngine';\r\nimport { Status } from '../effect/status';\r\n\r\ninterface GuiEffectProviderListDefinition {\r\n    title: string;\r\n}\r\n\r\n/**\r\n * Abstract base class for item list and status list.\r\n */\r\nexport abstract class GuiEffectProviderList<T extends EffectProvider> extends GuiBase<HTMLElement> {\r\n    \r\n    protected _titleContainer: HTMLHeadingElement;\r\n    protected _listContainer: HTMLUListElement;\r\n    protected _collection: EffectProviderCollection<T>;\r\n    protected _registry: SimpleRegistry<T>;\r\n\r\n    constructor(container: HTMLElement, textEngine: GameTextEngine,\r\n                collection: EffectProviderCollection<T>,\r\n                registry: SimpleRegistry<T>,\r\n                definition?: GuiEffectProviderListDefinition) {\r\n        super(container, textEngine);\r\n        this._collection = collection;\r\n        this._registry = registry;\r\n        this._titleContainer = this.createAndAddChild('h3');\r\n        if (definition) {\r\n            if (typeof definition['title'] !== 'string') {\r\n                throw new Error(\"Title must be a string.\");\r\n            }\r\n            this._titleContainer.innerHTML =\r\n                textEngine.localizeAndRender(definition.title);\r\n            textEngine.getLocalizationDictionary()\r\n                .addRequiredKey(definition.title);\r\n        }\r\n        this._listContainer = this.createAndAddChild('ul');\r\n        this._collection.onChanged = (collection, e) => {\r\n            this.renderList(collection, e);\r\n        };\r\n        // Handles item clicks.\r\n        this._listContainer.onclick = e => {\r\n            let target = e.target;\r\n            if (target instanceof HTMLLIElement && this.onItemClicked) {\r\n                this.onItemClicked(\r\n                    this.retrieveEffectProviderFromElement(target));\r\n            } \r\n        };\r\n    }\r\n\r\n    /**\r\n     * Specifies the callback function to handle item clicks.\r\n     */\r\n    onItemClicked?: (item: T) => void;\r\n\r\n    /**\r\n     * Renders the list.\r\n     * @param collection Effect provider collection.\r\n     * @param e Collection changed event.\r\n     */\r\n    abstract renderList(collection: EffectProviderCollection<T>,\r\n                        e: EffectProviderCollectionChangedEvent<T>): void;\r\n\r\n    /**\r\n     * Retrieves the effect provider instance based on the given HTML li element.\r\n     * @param el HTML li element.\r\n     */\r\n    abstract retrieveEffectProviderFromElement(el: HTMLElement): T;\r\n\r\n}\r\n\r\ninterface RaritySpecificStyle {\r\n    // Minimum rarity required to apply the style (inclusive).\r\n    // Defaults to -Infinity if not set.\r\n    minRarity?: number;\r\n    // Maximum rarity allowed to apply the style (inclusive).\r\n    // Defaults to Infinity if not set.\r\n    maxRarity?: number;\r\n    styleClasses: string[];\r\n}\r\n\r\nexport interface GuiItemListDefinition extends GuiEffectProviderListDefinition {\r\n    // Style classes to apply based on rarity. Evaluated in order.\r\n    raritySpecificStyles?: RaritySpecificStyle[];\r\n}\r\n\r\nexport class GuiItemList extends GuiEffectProviderList<Item> {\r\n\r\n    private _raritySpecificStyles: Required<RaritySpecificStyle>[] = [];\r\n\r\n    constructor(container: HTMLElement, textEngine: GameTextEngine,\r\n                collection: EffectProviderCollection<Item>,\r\n                registry: SimpleRegistry<Item>,\r\n                definition?: GuiItemListDefinition) {\r\n        super(container, textEngine, collection, registry, definition);\r\n        if (definition == undefined ||\r\n            definition['raritySpecificStyles'] == undefined) {\r\n            return;\r\n        }\r\n        if (!Array.isArray(definition['raritySpecificStyles'])) {\r\n            throw new Error('raritySpecificStyles must be an array.');\r\n        }\r\n        for (let style of definition['raritySpecificStyles']) {\r\n            const minRarity = style['minRarity'] == undefined\r\n                ? -Infinity\r\n                : style['minRarity'];\r\n            const maxRarity = style['maxRarity'] == undefined\r\n                ? Infinity\r\n                : style['maxRarity'];\r\n            if (!Array.isArray(style['styleClasses'])) {\r\n                throw new Error('styleClasses must be an array.');\r\n            }\r\n            for (const styleClass of style['styleClasses']) {\r\n                if (typeof styleClass !== 'string') {\r\n                    throw new Error(\r\n                        'styleClasses must be an array of strings.');\r\n                }\r\n            }\r\n            this._raritySpecificStyles.push({\r\n                minRarity: minRarity,\r\n                maxRarity: maxRarity,\r\n                styleClasses: [...style['styleClasses']]\r\n            });\r\n        }\r\n    }\r\n\r\n    renderList(collection: EffectProviderCollection<Item>,\r\n               e: EffectProviderCollectionChangedEvent<Item>): void {\r\n        this.removeAllChildrenOf(this._listContainer);\r\n        if (e.clear) return;\r\n        for (const itemId in collection.items) {\r\n            let node = document.createElement('li');\r\n            let [item, count] = collection.items[itemId];\r\n            node.setAttribute('data-item-id', item.id);\r\n            for (const style of this._raritySpecificStyles) {\r\n                if (item.rarity >= style.minRarity &&\r\n                    item.rarity <= style.maxRarity) {\r\n                    node.classList.add(...style.styleClasses);\r\n                }\r\n            }\r\n            const localizedItemName =\r\n                this._textEngine.localizeAndRender(item.unlocalizedName);\r\n            node.innerHTML = `${localizedItemName} x${count}`;\r\n            this._listContainer.appendChild(node);\r\n        }\r\n    }\r\n\r\n    retrieveEffectProviderFromElement(el: HTMLElement): Item {\r\n        return this._registry.get(el.getAttribute('data-item-id') || '');\r\n    }\r\n\r\n}\r\n\r\nexport interface GuiStatusListDefinition extends GuiEffectProviderListDefinition {}\r\n\r\nexport class GuiStatusList extends GuiEffectProviderList<Status> {\r\n\r\n    constructor(container: HTMLElement, textEngine: GameTextEngine,\r\n                collection: EffectProviderCollection<Status>,\r\n                registry: SimpleRegistry<Status>,\r\n                definition?: GuiStatusListDefinition) {\r\n        super(container, textEngine, collection, registry, definition);\r\n    }\r\n\r\n    renderList(collection: EffectProviderCollection<Status>,\r\n               e: EffectProviderCollectionChangedEvent<Status>): void {\r\n        this.removeAllChildrenOf(this._listContainer);\r\n        if (e.clear) return;\r\n        for (const itemId in collection.items) {\r\n            let node = document.createElement('li');\r\n            let status = collection.items[itemId];\r\n            node.innerHTML =\r\n                this._textEngine.localizeAndRender(status[0].unlocalizedName);\r\n            node.setAttribute('data-status-id', itemId);\r\n            this._listContainer.appendChild(node);\r\n        }\r\n    }\r\n\r\n    retrieveEffectProviderFromElement(el: HTMLElement): Status {\r\n        return this._registry.get(el.getAttribute('data-status-id') || '');\r\n    }\r\n\r\n}\r\n","import { GuiBase } from \"./guiBase\";\r\nimport { GuiModalBox } from \"./guiModalBox\";\r\nimport { GameTextEngine } from \"./textEngine\";\r\n\r\nexport interface GuiFooterLinkButtonDefinition {\r\n  text: string;\r\n  styleClasses?: string[];\r\n  url: string;\r\n}\r\n\r\nexport interface GuiFooterMessageButtonDefinition {\r\n  text: string;\r\n  styleClasses?: string[];\r\n  messageTitle: string;\r\n  message: string;\r\n  confirmText: string;\r\n  icon?: string;\r\n}\r\n\r\nexport interface GuiFooterDefinition {\r\n  // Localizable text before all buttons.\r\n  preamble?: string;\r\n  buttons: Array<GuiFooterLinkButtonDefinition | GuiFooterMessageButtonDefinition>;\r\n}\r\n\r\n// The footer GUI component, where help, privacy notice, copyright notice, etc.\r\n// are displayed.\r\nexport class GuiFooter extends GuiBase<HTMLElement> {\r\n  constructor(container: HTMLElement, textEngine: GameTextEngine,\r\n              modalBox: GuiModalBox, definition?: GuiFooterDefinition) {\r\n    super(container, textEngine);\r\n    this.removeAllChildrenOf(container);\r\n    if (!definition) return;\r\n    const localizer = textEngine.getLocalizationDictionary();\r\n    if (definition.preamble) {\r\n      let preamble = document.createElement('span');\r\n      preamble.innerHTML = textEngine.localizeAndRender(definition.preamble);\r\n      localizer.addRequiredKey(definition.preamble);\r\n      this._container.appendChild(preamble);\r\n    }\r\n    for (let i = 0; i < definition.buttons.length; i++) {\r\n      const buttonDef = definition.buttons[i];\r\n      if (i > 0) {\r\n        let separator = document.createElement('span');\r\n        separator.textContent = ' | ';\r\n        this._container.appendChild(separator);\r\n      }\r\n      let button = document.createElement('a');\r\n      button.innerHTML = textEngine.localizeAndRender(buttonDef.text);\r\n      localizer.addRequiredKey(buttonDef.text);\r\n      if ('styleClasses' in buttonDef) {\r\n        if (!Array.isArray(buttonDef.styleClasses)) {\r\n          throw new Error(\"Style classes should be an array.\");\r\n        }\r\n        for (let style of buttonDef.styleClasses) {\r\n          button.classList.add(style);\r\n        }\r\n      }\r\n      if ('url' in buttonDef) {\r\n        button.href = buttonDef.url;\r\n      } else {\r\n        localizer.addRequiredKey(buttonDef.messageTitle);\r\n        localizer.addRequiredKey(buttonDef.message);\r\n        localizer.addRequiredKey(buttonDef.confirmText);\r\n        button.onclick = (event) => {\r\n          event.preventDefault();\r\n          modalBox.display(\r\n              buttonDef.messageTitle,\r\n              buttonDef.message,\r\n              buttonDef.confirmText,\r\n              buttonDef.icon\r\n          );\r\n        };\r\n      }\r\n      this._container.appendChild(button);\r\n    }\r\n  }\r\n}\r\n","import { GuiBase } from './guiBase';\r\n\r\n/**\r\n * Simple particle wrapper.\r\n * TODO: implement a particle pool.\r\n */\r\nclass Particle {\r\n\r\n    private _el: HTMLDivElement;\r\n\r\n    x: number = 0;\r\n    y: number = 0;\r\n    vx: number = 0;\r\n    vy: number = 0;\r\n    ax: number = 0;\r\n    ay: number = 0;\r\n    active: boolean = true;\r\n\r\n    constructor(className: string) {\r\n        this._el = document.createElement('div');\r\n        this._el.className = className;\r\n    }\r\n\r\n    get element(): HTMLDivElement {\r\n        return this._el;\r\n    }\r\n\r\n    addToScene(scene: HTMLElement): void {\r\n        scene.appendChild(this._el);\r\n    }\r\n\r\n    removeFromScene(scene: HTMLElement): void {\r\n        scene.removeChild(this._el);\r\n    }\r\n\r\n    updatePosition(stepSize: number): void {\r\n        if (!this.active) return;\r\n        this.vx += this.ax * stepSize;\r\n        this.vy += this.ay * stepSize;\r\n        this.x += (this.vx + 0.5 * this.ax * stepSize) * stepSize;\r\n        this.y += (this.vy + 0.5 * this.ay * stepSize) * stepSize;\r\n        this._el.style.top = this.y + 'px';\r\n        this._el.style.left = this.x + 'px';\r\n    }\r\n\r\n}\r\n\r\nexport class GuiFX extends GuiBase<HTMLDivElement> {\r\n    \r\n    confetti(): void {\r\n        // Generate random sized divs\r\n        const colors = ['#f00', '#0f0', '#00f', '#ff0', '#0ff', '#f0f', '#000', '#fff'];\r\n        let particles: Particle[] = [];\r\n        let viewPortWidth = this._container.offsetWidth;\r\n        let viewPortHeight = document.body.offsetHeight;\r\n        let nActive = Math.max(30, Math.ceil(viewPortWidth / 20));\r\n        let lastTimestamp: number | null = null;\r\n        for (let i = 0;i < nActive;i++) {\r\n            let p = new Particle('particle_confetti');\r\n            p.x = Math.random() * viewPortWidth;\r\n            p.y = - 10 - Math.random() * 300;\r\n            p.vy = Math.random() * 2;\r\n            p.ay = 8 / 60;\r\n            p.element.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\r\n            p.element.style.width = Math.floor(Math.random() * 6 + 4) + 'px';\r\n            p.element.style.height = p.element.style.width;\r\n            p.addToScene(this._container);\r\n            particles.push(p);\r\n        }\r\n        const animate: FrameRequestCallback = (timestamp) => {\r\n            if (!lastTimestamp) {\r\n                lastTimestamp = timestamp;\r\n            }\r\n            // 60 UPS\r\n            let stepSize = (timestamp - lastTimestamp) / (1000 / 60);\r\n            lastTimestamp = timestamp;\r\n            for (let p of particles) {\r\n                p.updatePosition(stepSize);\r\n                if (p.active && p.y > viewPortHeight * 1.5) {\r\n                    p.active = false;\r\n                    p.removeFromScene(this._container);\r\n                    nActive--;\r\n                }\r\n            }\r\n            if (nActive > 0) {\r\n                requestAnimationFrame(animate);\r\n            }\r\n        };\r\n        requestAnimationFrame(animate);\r\n    }\r\n\r\n}","import { VariableStore, VariableChangedEvent } from '../variableStore';\r\nimport { GuiModalBox } from './guiModalBox';\r\nimport { GuiBase } from './guiBase';\r\nimport { GameEngine } from '../gameEngine';\r\nimport { GuiMessageWindow, GuiMessageWindowDefinition } from './guiMessageWindow';\r\nimport { GuiItemList, GuiItemListDefinition, GuiStatusList, GuiStatusListDefinition } from './guiEffectProviderList';\r\nimport { GuiFX } from './guiFx';\r\nimport { GameTextEngine } from './textEngine';\r\nimport { GuiFooter, GuiFooterDefinition } from './guiFooter';\r\nimport { GuiStatsBar, GuiStatsBarDefinition } from './guiStatsBar';\r\n\r\nexport interface GuiGameWindowDefinition {\r\n    statsBar?: GuiStatsBarDefinition;\r\n    messageWindow?: GuiMessageWindowDefinition;\r\n    itemList?: GuiItemListDefinition;\r\n    statusList?: GuiStatusListDefinition;\r\n    footer?: GuiFooterDefinition;\r\n}\r\n\r\nexport interface GuiGame {\r\n\r\n    displayMessage(message: string, confirm: string, icon?: string, fx?: string): Promise<void>;\r\n\r\n    displayChoices(message: string, choices: Array<[string, number]>, icon?: string): Promise<number>;\r\n\r\n}\r\n\r\nexport class GuiGameWindow extends GuiBase<HTMLElement> implements GuiGame {\r\n\r\n    private _statsBar: GuiStatsBar;\r\n    private _messageWindow: GuiMessageWindow;\r\n    private _modalBox: GuiModalBox;\r\n    private _itemList: GuiItemList;\r\n    private _statusList: GuiStatusList;\r\n    private _footer: GuiFooter;\r\n    private _fx: GuiFX;\r\n\r\n    private _gameEngine: GameEngine;\r\n\r\n    constructor(container: HTMLElement, textEngine: GameTextEngine,\r\n                gameEngine: GameEngine, definition: GuiGameWindowDefinition) {\r\n        super(container, textEngine);\r\n        this._gameEngine = gameEngine;\r\n        // Initialize sub-components.\r\n        this._statsBar = new GuiStatsBar(\r\n            this.retrieveElement('stats_bar'), textEngine,\r\n            gameEngine.expressionEngine, definition.statsBar);\r\n        this._messageWindow = new GuiMessageWindow(\r\n            this.retrieveElement('message_window'), textEngine,\r\n            definition.messageWindow);\r\n        this._modalBox = new GuiModalBox(\r\n            this.retrieveElement('modal_container'), textEngine);\r\n        this._itemList = new GuiItemList(\r\n            this.retrieveElement('items_window'), textEngine,\r\n            this._gameEngine.inventory,\r\n            this._gameEngine.itemRegistry, definition.itemList);\r\n        this._statusList = new GuiStatusList(\r\n            this.retrieveElement('status_window'), textEngine,\r\n            this._gameEngine.statusTable,\r\n            this._gameEngine.statusRegistry, definition.statusList);\r\n        this._footer = new GuiFooter(\r\n            this.retrieveElement('footer'), textEngine, this._modalBox,\r\n            definition.footer);\r\n        this._fx = new GuiFX(\r\n            this.retrieveElement('fx_container'),\r\n            textEngine);\r\n        // Handlers for variable updates.\r\n        this._gameEngine.variableStore.onVariableChanged = (sender, e) => {\r\n            this.handleVariableUpdate(sender, e);\r\n        };\r\n        // Event handlers for items/status list.\r\n        this._itemList.onItemClicked = item => {\r\n            this._modalBox.display(\r\n                item.unlocalizedName,\r\n                item.unlocalizedDescription,\r\n                'ui.ok',\r\n                item.icon\r\n            );\r\n        };\r\n        this._statusList.onItemClicked = status => {\r\n            this._modalBox.display(\r\n                status.unlocalizedName,\r\n                status.unlocalizedDescription,\r\n                'ui.ok',\r\n                status.icon\r\n            );\r\n        };\r\n    }\r\n\r\n    playFx(fx: string): void {\r\n        switch (fx) {\r\n            case 'confetti':\r\n                this._fx.confetti();\r\n                break;\r\n            default:\r\n                throw new Error(`Unknown fx \"${fx}\".`);\r\n        }\r\n    }\r\n\r\n    retrieveElement<T extends HTMLElement>(id: string): T {\r\n        // Lazy implementation here.\r\n        let el = document.getElementById(id);\r\n        if (!el) throw new Error(`Unable to find #${id}.`);\r\n        return <T>el;\r\n    }\r\n\r\n    handleVariableUpdate(sender: VariableStore, e: VariableChangedEvent): void {\r\n        this._statsBar.handleVariableUpdate(sender, e);\r\n    }\r\n\r\n    displayMessage(message: string, confirm: string, icon?: string, fx?: string): Promise<void> {\r\n        if (fx) this.playFx(fx);\r\n        return this._messageWindow.displayMessage(message, confirm, icon);\r\n    }\r\n\r\n    displayChoices(message: string, choices: Array<[string, number]>, icon?: string): Promise<number> {\r\n        return this._messageWindow.displayChoices(message, choices, icon);\r\n    }\r\n\r\n}\r\n","import { GuiBase } from './guiBase';\r\nimport { GameTextEngine } from './textEngine';\r\n\r\n// https://en.wikipedia.org/wiki/Unicode_block\r\nconst CJK_SCRIPTS = [\r\n    \"\\\\p{Script=Han}\",\r\n    \"\\\\p{Script=Bopomofo}\",\r\n    \"\\\\p{Script=Katakana}\",\r\n    \"\\\\p{Script=Hiragana}\",\r\n    \"\\\\p{Script=Hangul}\",\r\n];\r\nconst CJK_REGEXP = new RegExp(`^[${CJK_SCRIPTS.join('')}]\\$`, 'u');\r\n\r\nfunction segmentMessage(message: string): string[] {\r\n    const segments: string[] = [];\r\n    let idx = 0;\r\n    let lastIdx = 0;\r\n    while (idx < message.length) {\r\n        const currentChar = message[idx];\r\n        if (currentChar === ' ') {\r\n            // Consume all white spaces\r\n            ++idx;\r\n            while (idx < message.length && message[idx] === ' ');\r\n            segments.push(message.substring(lastIdx, idx));\r\n            lastIdx = idx;\r\n        } else if (CJK_REGEXP.test(currentChar)) {\r\n            // Currently only support CJK characters\r\n            ++idx;\r\n            segments.push(message.substring(lastIdx, idx));\r\n            lastIdx = idx;\r\n        } else {\r\n            ++idx;\r\n        }\r\n    }\r\n    if (lastIdx < idx) {\r\n        segments.push(message.substring(lastIdx, idx));\r\n    }\r\n    return segments;\r\n}\r\n\r\nexport interface GuiMessageWindowDefinition {\r\n    // Updates per second.\r\n    typewriterSpeed?: number;\r\n}\r\n\r\nexport class GuiMessageWindow extends GuiBase<HTMLDivElement> {\r\n\r\n    private _messageContainer: HTMLDivElement;\r\n    private _choicesContainer: HTMLDivElement;\r\n    private _typewriterSpeed: number;\r\n    private _typewriterFrameTime: number;\r\n\r\n    /**\r\n     * Creates a message window.\r\n     * @param container Container element.\r\n     * @param textEngine HTML text renderer.\r\n     */\r\n    constructor(container: HTMLDivElement, textEngine: GameTextEngine,\r\n                definition?: GuiMessageWindowDefinition) {\r\n        super(container, textEngine);\r\n        this._messageContainer = this.createAndAddChild('div', '', 'message_container');\r\n        this._choicesContainer = this.createAndAddChild('div', '', 'choices_container');\r\n        if (definition == undefined ||\r\n            definition.typewriterSpeed == undefined) {\r\n            this._typewriterSpeed = 30.0;\r\n        } else {\r\n            if (typeof definition.typewriterSpeed !== 'number' ||\r\n                isNaN(definition.typewriterSpeed)) {\r\n                throw new Error('Typewrite speed must be a valid number.');\r\n            }\r\n            this._typewriterSpeed = definition.typewriterSpeed;\r\n        }\r\n        if (this._typewriterSpeed > 0) {\r\n            this._typewriterFrameTime = 1000.0 / this._typewriterSpeed;\r\n        } else {\r\n            this._typewriterFrameTime = 0.0;\r\n        }\r\n    }\r\n\r\n    async displayMessage(message: string, confirm: string, icon?: string): Promise<void> {\r\n        if (this._typewriterSpeed > 0) {\r\n            await this.typewriteMessage(message, icon);\r\n        } else {\r\n            this.updateMessage(message, icon);\r\n        }\r\n        return new Promise<void>(resolve => {\r\n            const btnConfirm = document.createElement('a');\r\n            btnConfirm.className = 'btn';\r\n            btnConfirm.href = 'javascript: void(0)';\r\n            btnConfirm.innerHTML = this._textEngine.localizeAndRender(confirm);\r\n            this._choicesContainer.appendChild(btnConfirm);\r\n            btnConfirm.onclick = () => {\r\n                this._messageContainer.textContent = '';\r\n                btnConfirm.onclick = null;\r\n                btnConfirm.remove();\r\n                resolve();        \r\n            }\r\n        });\r\n    }\r\n\r\n    async displayChoices(message: string, choices: Array<[string, number]>, icon?: string): Promise<number> {\r\n        if (this._typewriterSpeed > 0) {\r\n            await this.typewriteMessage(message, icon);\r\n        } else {\r\n            this.updateMessage(message, icon);\r\n        }\r\n        return new Promise<number>(resolve => {\r\n            let choiceButtons : HTMLAnchorElement[] = [];\r\n            for (let i = 0;i < choices.length;i++) {\r\n                let btn = document.createElement('a');\r\n                let [choiceMessage, choiceId] = choices[i];\r\n                btn.className = 'btn';\r\n                // Allow styled text in the buttons.\r\n                btn.innerHTML = this._textEngine.localizeAndRender(choiceMessage);\r\n                btn.href = 'javascript: void(0);';\r\n                btn.setAttribute('data-choice-number', choiceId.toString());\r\n                btn.onclick = () => {\r\n                    this._messageContainer.textContent = '';\r\n                    for (btn of choiceButtons) btn.remove();\r\n                    resolve(choiceId);\r\n                };\r\n                choiceButtons.push(btn);\r\n                this._choicesContainer.appendChild(btn);\r\n            }\r\n        });\r\n    }\r\n\r\n    updateMessage(message: string, icon?: string): void {\r\n        let html = `<p>${this._textEngine.localizeAndRender(message)}</p>`;\r\n        if (icon) {\r\n            html += `<p><img src=\"${icon}\" /></p>`;\r\n        }\r\n        this._messageContainer.innerHTML = html;\r\n    }\r\n\r\n    typewriteMessage(message: string, icon?: string): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            this.removeAllChildrenOf(this._messageContainer);\r\n            let pText = document.createElement('p');\r\n            this._messageContainer.appendChild(pText);\r\n            let segments = segmentMessage(this._textEngine.localize(message));\r\n            let curText = '';\r\n            let lastStep = 0;\r\n            let startingTimestamp : number | null = null;\r\n            let callback: FrameRequestCallback = (timestamp) => {\r\n                if (!startingTimestamp) {\r\n                    startingTimestamp = timestamp;\r\n                }\r\n                const elapsedTime = timestamp - startingTimestamp;\r\n                // 30 FPS\r\n                const steps = Math.min(elapsedTime / this._typewriterFrameTime,\r\n                                       segments.length);\r\n                while (lastStep < steps) {\r\n                    curText += segments[lastStep];\r\n                    ++lastStep;\r\n                }\r\n                pText.innerHTML = this._textEngine.render(curText);\r\n                if (lastStep === segments.length) {\r\n                    // Finished!\r\n                    if (icon) {\r\n                        let pIcon = document.createElement('p');\r\n                        let img = document.createElement('img');\r\n                        img.src = icon;\r\n                        pIcon.appendChild(img);\r\n                        this._messageContainer.appendChild(pIcon);\r\n                    }\r\n                    resolve();\r\n                } else {\r\n                    requestAnimationFrame(callback);\r\n                }\r\n            };\r\n            requestAnimationFrame(callback);\r\n        });\r\n    }\r\n}","import { GuiBase } from './guiBase';\r\nimport { GameTextEngine } from './textEngine';\r\n\r\ninterface PendingMessage {\r\n    title: string;\r\n    message: string;\r\n    confirm: string;\r\n    icon?: string;\r\n}\r\n\r\nexport class GuiModalBox extends GuiBase<HTMLDivElement> {\r\n\r\n    private _contentBox: HTMLDivElement;\r\n    private _titleContainer: HTMLHeadingElement;\r\n    private _messageContainer: HTMLDivElement;\r\n    private _confirmBtn: HTMLAnchorElement;\r\n\r\n    private _pending: Array<PendingMessage> = [];\r\n    private _shown: boolean = false;\r\n\r\n    constructor(container: HTMLDivElement, textEngine: GameTextEngine) {\r\n        super(container, textEngine);\r\n        // Init components.\r\n        this._contentBox = this.createAndAddChild('div', '', 'modal_content');\r\n        this._titleContainer = document.createElement('h3');\r\n        this._messageContainer = document.createElement('div');\r\n        this._messageContainer.className = 'modal_message';\r\n        this._confirmBtn = document.createElement('a');\r\n        this._confirmBtn.className = 'btn_confirm btn';\r\n        this._confirmBtn.href = 'javascript:void(0)';\r\n        this._contentBox.appendChild(this._titleContainer);\r\n        this._contentBox.appendChild(this._messageContainer);\r\n        this._contentBox.appendChild(this._confirmBtn);\r\n        this._confirmBtn.onclick = () => {\r\n            if (this._pending.length > 0) {\r\n                const m = <PendingMessage>this._pending.shift();\r\n                this._setContent(m.title, m.message, m.confirm, m.icon);\r\n            } else {\r\n                this.setHidden(true);\r\n                this._clearContent();\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Displays a message.\r\n     * @param title Title.\r\n     * @param message Message.\r\n     * @param confirm Text for the confirm button.\r\n     * @param icon (Optional) Path to the icon file (image file).\r\n     */\r\n    display(title: string, message: string, confirm: string, icon?: string): void {\r\n        if (this._shown) {\r\n            this._pending.push({\r\n                title: this._textEngine.localizeAndRender(title),\r\n                message: this._textEngine.localizeAndRender(message),\r\n                confirm: this._textEngine.localizeAndRender(confirm),\r\n                icon: icon\r\n            });\r\n        } else {\r\n            this._setContent(\r\n                this._textEngine.localizeAndRender(title),\r\n                this._textEngine.localizeAndRender(message),\r\n                this._textEngine.localizeAndRender(confirm),\r\n                icon\r\n            );\r\n            this.setHidden(false);\r\n        }\r\n    }\r\n\r\n    private _setContent(title: string, message: string, confirm: string, icon?: string): void {\r\n        this._titleContainer.textContent = title;\r\n        const p = document.createElement('p');\r\n        p.innerHTML = message;\r\n        this._messageContainer.appendChild(p);\r\n        if (icon) {\r\n            const img = document.createElement('img');\r\n            img.src = icon;\r\n            this._messageContainer.appendChild(img);\r\n        }\r\n        this._confirmBtn.textContent = confirm;\r\n    }\r\n\r\n    private _clearContent(): void {\r\n        this._titleContainer.textContent = '';\r\n        this._messageContainer.innerHTML = '';\r\n        this._confirmBtn.textContent = '';\r\n    }\r\n\r\n}\r\n","import { CompiledEventExpression, EventExpressionCompiler, EventExpressionEngine, EventExpressionEvaluator } from '../event/expression';\r\nimport { VariableStore, VariableChangedEvent } from '../variableStore';\r\nimport { GuiBase } from './guiBase';\r\nimport { GameTextEngine } from './textEngine';\r\n\r\nexport interface GuiStatsBarItemUpdateTrigger {\r\n  variables: string[];\r\n}\r\n\r\nexport interface GuiStatsBarItemConditionalStyle {\r\n  // An expression string that can be compiled by `EventExpressionCompiler`.\r\n  // You can use the same conditions defined in `GameEvent` here.\r\n  condition: string;\r\n  // List of classes to be applied to the stats bar item when the condition is\r\n  // met. If unset or empty, it effectively removes all classes.\r\n  styleClasses?: string[];\r\n}\r\n\r\nexport interface GuiStatsBarItemDefinition {\r\n  // Localizible text to be displayed.\r\n  text: string;\r\n  // Determines if the item shows on the left or the right side.\r\n  side?: 'left' | 'right';\r\n  // If the rendering of `text` depends on any variables in `VariableStore`,\r\n  // they need to listed here to the stats display can be updated properly once\r\n  // the variables change.\r\n  updateTrigger?: GuiStatsBarItemUpdateTrigger;\r\n  // Optional list of conditional styles to be applied. If multiple conditions\r\n  // are met, only the styles associated with the first one will be applied.\r\n  // If none of the conditions are met, a default style (no class) will be\r\n  // applied.\r\n  conditionalStyles?: GuiStatsBarItemConditionalStyle[];\r\n}\r\n\r\nexport interface GuiStatsBarDefinition {\r\n  items?: GuiStatsBarItemDefinition[];\r\n}\r\n\r\ninterface CompiledConditionalStyle {\r\n  conditionExpression: CompiledEventExpression;\r\n  classNames: string[];\r\n}\r\n\r\nclass GuiStatsBarItem {\r\n\r\n  private _container: HTMLElement;\r\n  private _text: string;\r\n  private _conditionalStyles: CompiledConditionalStyle[] = [];\r\n\r\n  constructor(container: HTMLElement, exprCompiler: EventExpressionCompiler,\r\n              definition: GuiStatsBarItemDefinition) {\r\n    this._container = container;\r\n    this._text = definition.text;\r\n    if (definition.conditionalStyles) {\r\n      for (const style of definition.conditionalStyles) {\r\n        this._conditionalStyles.push({\r\n          conditionExpression: exprCompiler.compile(style.condition),\r\n          classNames: style.styleClasses ? [...style.styleClasses] : []\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  update(textEngine: GameTextEngine, ee: EventExpressionEvaluator) {\r\n    this._container.innerHTML = textEngine.localizeAndRender(this._text);\r\n    let conditionMet = false;\r\n    for (const style of this._conditionalStyles) {\r\n      if (!!ee.eval(style.conditionExpression)) {\r\n        this._container.className = style.classNames.join(' ');\r\n        conditionMet = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!conditionMet) {\r\n      this._container.className = '';\r\n    }\r\n  }\r\n  \r\n}\r\n\r\n// Displays various player stats at the very top of the screen.\r\nexport class GuiStatsBar extends GuiBase<HTMLElement> {\r\n\r\n  private _itemsByTriggeringVariable: Record<string, GuiStatsBarItem[]> = {};\r\n  private _expressionEvaluator: EventExpressionEvaluator;\r\n\r\n  constructor(container: HTMLElement, textEngine: GameTextEngine,\r\n              expressionEngine: EventExpressionEngine,\r\n              definition?: GuiStatsBarDefinition) {\r\n    super(container, textEngine);\r\n    this._expressionEvaluator = expressionEngine;\r\n    if (!definition || !definition.items) return;\r\n    const leftContainer = this.createAndAddChild('div', 'stats_left');\r\n    const rightContainer = this.createAndAddChild('div', 'stats_right');\r\n    for (const itemDef of definition.items) {\r\n      textEngine.getLocalizationDictionary().addRequiredKey(itemDef.text);\r\n      const itemContainer = document.createElement('p');\r\n      const item = new GuiStatsBarItem(itemContainer, expressionEngine,\r\n                                       itemDef);\r\n      if (!itemDef.side || itemDef.side === 'left') {\r\n        leftContainer.appendChild(itemContainer);\r\n      } else if (itemDef.side === 'right') {\r\n        rightContainer.appendChild(itemContainer);\r\n      } else {\r\n        throw new Error(`Unknown side: ${itemDef.side}.`);\r\n      }\r\n      if (itemDef.updateTrigger) {\r\n        for (const varName of itemDef.updateTrigger.variables) {\r\n          if (varName in this._itemsByTriggeringVariable) {\r\n            this._itemsByTriggeringVariable[varName].push(item);\r\n          } else {\r\n            this._itemsByTriggeringVariable[varName] = [item];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleVariableUpdate(sender: VariableStore, e: VariableChangedEvent): void {\r\n    if (e.clear) return;\r\n    if (e.varName in this._itemsByTriggeringVariable) {\r\n      for (const item of this._itemsByTriggeringVariable[e.varName]) {\r\n        item.update(this._textEngine, this._expressionEvaluator);\r\n      }\r\n    }\r\n  }\r\n}","import { LocalizationDictionary } from '../i18n/localization';\r\nimport { VariableStore } from '../variableStore';\r\nimport { isVariableName } from '../utils/expression';\r\nimport { RandomSource } from '../utils/random';\r\n\r\nexport interface GameTextEngine {\r\n    /**\r\n     * Renders the source text into HTML text.\r\n     * Pipeline: original string -> variable interpolation + styling\r\n     * Formats:\r\n     * * {{varName:ndigits}} Variable interpolation, number of digits is\r\n     *                       optional.\r\n     * * {{@specialVarName}} Special variable interpolation. See\r\n     *                       `_evalSpecialVariable()` for more details.\r\n     * * __text__ underline\r\n     * * **text** emphasize\r\n     * * ##text## strong\r\n     * * ``text`` vertabim, no additional style modifier allowed inside.\r\n     *            Variable interpolation still applies inside.\r\n     * For example, if player.hope is 50, then \"Hope: <**{{player.hope}}**>\" will be\r\n     * converted to \"Hope: &lt;<em>50</em>&gt;\".\r\n     * @param src Source text.\r\n     */\r\n    render(src: string): string;\r\n\r\n    /**\r\n     * Localizes and then renders the source text into HTML text.\r\n     * @param src Source text.\r\n     */\r\n    localizeAndRender(src: string): string;\r\n\r\n    /**\r\n     * Only localizes the source text.\r\n     * @param src Source text.\r\n     */\r\n    localize(src: string): string;\r\n\r\n    /**\r\n     * Gets the underlying localization dictionary.\r\n     */\r\n    getLocalizationDictionary(): LocalizationDictionary;\r\n}\r\n\r\nexport class SimpleGameTextEngine implements GameTextEngine {\r\n    \r\n    constructor(private _ldict: LocalizationDictionary,\r\n                private _variableStore: VariableStore,\r\n                private _random: RandomSource) {\r\n\r\n    }\r\n\r\n    render(src: string): string {\r\n        // Step 1: interpolate\r\n        src = src.replace(/\\{\\{(@?[a-z0-9$_.]+)(:\\d+)?\\}\\}/gi, (match, p1, p2) => {\r\n            if (p1[0] === '@') {\r\n                // Special variables\r\n                let specialVarName = p1.substring(1);\r\n                return this._evalSpecialVariable(specialVarName) || match;\r\n            } else if (isVariableName(p1)) {\r\n                // Variables in VariableStore\r\n                let val = this._variableStore.getVar(p1, false);\r\n                if (val == undefined) {\r\n                    console.log('Undefined variable ' + p1);\r\n                    return match;\r\n                }\r\n                if (p2 == undefined) {\r\n                    return val.toString();\r\n                } else {\r\n                    return val.toFixed(parseInt(p2.slice(1)));\r\n                }\r\n            } else {\r\n                return match;\r\n            }\r\n        });\r\n        // Step 2: Escape\r\n        src = escapeHTML(src);\r\n        // Step 3: Add style\r\n        return renderWithStyle(src);\r\n    }\r\n    \r\n    localizeAndRender(src: string): string {\r\n        return this.render(this.localize(src));\r\n    }\r\n    \r\n    localize(src: string): string {\r\n        return this._ldict.translate(src);\r\n    }\r\n\r\n    getLocalizationDictionary(): LocalizationDictionary {\r\n        return this._ldict;\r\n    }\r\n\r\n    private _evalSpecialVariable(varName: string): string | undefined {\r\n        if (!isVariableName(varName)) {\r\n            return undefined;\r\n        }\r\n        switch (varName) {\r\n            case 'seed':\r\n                return this._random.seed;\r\n            case 'seedUrl':\r\n                let path = window.location.protocol + '//' + \r\n                           window.location.host + window.location.pathname;\r\n                let encodedSeed = encodeURIComponent(this._random.seed)\r\n                return `${path}#init_seed=${encodedSeed}`;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n}\r\n\r\nconst TextStyleMarkupMap: { [key: string]: [string, string]; } = {\r\n    '*': ['<em>', '</em>'],\r\n    '#': ['<strong>', '</strong>'],\r\n    '_': ['<span style=\"text-decoration: underline\">', '</span>'],\r\n    '`': ['<code>', '</code>']\r\n};\r\n\r\nfunction escapeHTML(s: string): string {\r\n    return s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n}\r\n\r\nfunction renderWithStyle(s: string): string {\r\n    // Split into segments and render.\r\n    let stack: string[] = [];\r\n    let result = '';\r\n    let idx = 0;\r\n    let lastIdx = 0;\r\n    while (idx < s.length) {\r\n        if (!(s[idx] in TextStyleMarkupMap)) {\r\n            ++idx;   \r\n            continue;\r\n        }\r\n        // Must repeat once and not inside a code block\r\n        let curChar = s[idx];\r\n        if (idx + 1 < s.length && s[idx + 1] === curChar) {\r\n            if (idx > lastIdx) {\r\n                result += s.substring(lastIdx, idx);\r\n            }\r\n            let markupConsumed = false;\r\n            if (stack.length > 0 && curChar === stack[stack.length - 1]) {\r\n                // Closing\r\n                stack.pop();\r\n                result += TextStyleMarkupMap[curChar][1];\r\n                markupConsumed = true;\r\n            } else if (stack.length === 0 || stack[stack.length - 1] !== '`') {\r\n                // Opening\r\n                stack.push(s[idx]);\r\n                result += TextStyleMarkupMap[curChar][0];\r\n                markupConsumed = true;\r\n            }\r\n            idx += 2;\r\n            if (markupConsumed) {\r\n                lastIdx = idx;\r\n            }\r\n        } else {\r\n            ++idx;\r\n        }\r\n    }\r\n    // Last segment.\r\n    if (idx > lastIdx) {\r\n        result += s.substring(lastIdx, idx);\r\n    }\r\n    // Auto closing\r\n    while (stack.length > 0) {\r\n        result += TextStyleMarkupMap[<string>stack.pop()][1];\r\n    }\r\n    return result;\r\n}\r\n","import { downloadAndParse } from \"../utils/network\";\r\nimport { load as loadYaml } from \"js-yaml\";\r\n\r\nexport class LocalizationDictionary {\r\n    \r\n    private _dict: Map<string, string> = new Map();\r\n    private _requiredTranslationKeys: Set<string> = new Set();\r\n\r\n    addTranslation(translationKey: string, translation: string): void {\r\n        this._dict.set(translationKey, translation);\r\n    }\r\n\r\n    addRequiredKey(translationKey: string): void {\r\n        this._requiredTranslationKeys.add(translationKey);\r\n    }\r\n\r\n    translate(translationKey: string): string {\r\n        const translation = this._dict.get(translationKey)\r\n        return translation == undefined ? translationKey : translation;\r\n    }\r\n\r\n    /**\r\n     * Dumps keys of missing translations as a list, in lexicographical order.\r\n     */\r\n    dumpMissingTranslationKeys(): string[] {\r\n        let missingKeys: string[] = [];\r\n        for (const requiredKey of this._requiredTranslationKeys) {\r\n            if (!this._dict.has(requiredKey)) {\r\n                missingKeys.push(requiredKey);\r\n            }\r\n        }\r\n        missingKeys.sort();\r\n        return missingKeys;\r\n    }\r\n\r\n    /**\r\n     * Dumps all keys of required translations as a list, in lexicographical\r\n     * order.\r\n     */\r\n    dumpRequiredTranslationKeys(): string[] {\r\n        let requiredKeys = [...this._requiredTranslationKeys];\r\n        requiredKeys.sort();\r\n        return requiredKeys;\r\n    }\r\n\r\n    /**\r\n     * Dumps all keys with translations but are not required as a list, in\r\n     * lexicographical order.\r\n     */\r\n    dumpUnnecessaryTranslationKeys(): string[] {\r\n        let unnecessaryKeys: string[] = [];\r\n        for (const key of this._dict.keys()) {\r\n            if (!this._requiredTranslationKeys.has(key)) {\r\n                unnecessaryKeys.push(key);\r\n            }\r\n        }\r\n        unnecessaryKeys.sort();\r\n        return unnecessaryKeys;\r\n    }\r\n\r\n    async loadFrom(url: string): Promise<void> {\r\n        let obj: any = await downloadAndParse(url, loadYaml);\r\n        if (obj == undefined) {\r\n            throw new Error(`Failed to load translation file from: ${url}`);\r\n        }\r\n        let nTranslations = 0;\r\n        for (let translationKey in obj) {\r\n            const translation = obj[translationKey];\r\n            if (typeof translation !== 'string') {\r\n                throw new Error(\r\n                    `Translation of \"${translationKey}\" should be a string.`);\r\n            }\r\n            this.addTranslation(translationKey, translation);\r\n            ++nTranslations;\r\n        }\r\n        console.log(`Successfully loaded ${nTranslations} translations.`);\r\n    }\r\n\r\n}\r\n","/**\r\n * A simple set builder that helps easily combine sets.\r\n */\r\nexport class SetBuilder<T> {\r\n  \r\n  constructor(private _set: Set<T> = new Set(),\r\n              private _built: boolean = false) {}\r\n\r\n  /**\r\n   * Adds one or more elements to the set. Can no longer be called after\r\n   * calling `get()`.\r\n   */\r\n  add(...inputs: T[]): void {\r\n    this.addAll(inputs);\r\n  }\r\n\r\n  /**\r\n   * Adds all elements from an array or another set. Can no longer be called\r\n   * after calling `get()`.\r\n   * @param elements A array or a set.\r\n   */\r\n  addAll(elements: T[] | ReadonlySet<T>): void {\r\n    if (this._built) {\r\n      throw new Error('Cannot add element(s) after the set is built!');\r\n    }\r\n    for (let element of elements) {\r\n      this._set.add(element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the built set.\r\n   */\r\n  get(): Set<T> {\r\n    this._built = true;\r\n    return this._set;\r\n  }\r\n\r\n}\r\n","/**\r\n * A simple expression evaluation system for checking conditions, updating\r\n * weights, or changing variables using events.\r\n */\r\n\r\n/**\r\n * Represents the type of a token.\r\n */\r\nenum TokenType {\r\n    Name,\r\n    Number,\r\n    Boolean,\r\n    String,\r\n    Operator,\r\n    Delimiter,\r\n    Whitespace // We do not store whitespace tokens.\r\n}\r\n\r\n/**\r\n * Represents a token object.\r\n */\r\ninterface Token {\r\n    text: string;\r\n    type: TokenType;\r\n}\r\n\r\n/**\r\n * Regular expressions for different tokens.\r\n */\r\nconst regexGroups = [\r\n    {\r\n        tokenType: TokenType.Whitespace,\r\n        regex: /^\\s+/g\r\n    },\r\n    {\r\n        tokenType: TokenType.Boolean,\r\n        regex: /^true|^false/\r\n    },\r\n    {\r\n        tokenType: TokenType.Name,\r\n        regex: /^[a-z_$][a-z0-9_$]*(\\.[a-z_$][a-z0-9_$]*)*/i\r\n    },\r\n    {\r\n        tokenType: TokenType.Number,\r\n        regex: /^[+-]?Infinity|^NaN|^(\\d+(\\.\\d+)?([Ee][+-]?\\d+)?)/\r\n    },\r\n    {\r\n        tokenType: TokenType.String,\r\n        regex: /^'(\\\\['\\\\]|[^'])*'/\r\n    },\r\n    {\r\n        tokenType: TokenType.Operator,\r\n        regex: /^(\\+|-|\\*|\\/|%|\\(|\\)|>=|>|<=|<|&&|&|\\|\\||\\||!|:|\\?|===|==|!==|!=)/\r\n    },\r\n    {\r\n        tokenType: TokenType.Delimiter,\r\n        regex: /^,/\r\n    }\r\n];\r\n\r\nexport function isVariableName(s: string): boolean {\r\n    return /^[a-z_$][a-z0-9_$]*(\\.[a-z_$][a-z0-9_$]*)*$/i.test(s);\r\n}\r\n\r\n/**\r\n * Tokenizes a simple expression.\r\n * @param expr String representation of the simple expression.\r\n */\r\nfunction tokenize(expr: string): Token[] {\r\n    let idx = 0;\r\n    let tokens: Token[] = [];\r\n    while (expr.length > 0) {\r\n        let matched = false;\r\n        for (let g of regexGroups) {\r\n            let match = g.regex.exec(expr);\r\n            if (match) {\r\n                matched = true;\r\n                if (g.tokenType !== TokenType.Whitespace) {\r\n                    tokens.push({\r\n                        type: g.tokenType,\r\n                        text: match[0]\r\n                    });\r\n                }\r\n                expr = expr.slice(match[0].length);\r\n                break;\r\n            }\r\n        }\r\n        if (!matched) {\r\n            throw new Error(`Invalid syntax starting at: ${expr}`);\r\n        }\r\n    }\r\n    return tokens;\r\n}\r\n\r\n/**\r\n * Consists of the available functions when evaluating the expressions.\r\n * These functions should NOT depend on this.\r\n */\r\nexport interface FunctionTable {\r\n    /**\r\n     * Retrieves the numerical value of a game variable.\r\n     * This function must be implemented.\r\n     * @param varName Name of the variable.\r\n     */\r\n    getVar(varName: string): number;\r\n\r\n    /**\r\n     * Other optional functions.\r\n     */\r\n    [fname: string]: Function;\r\n}\r\n\r\nexport interface FunctionTableProvider<T extends FunctionTable> {\r\n    /**\r\n     * Returns a \"dictionary\" of functions where none of the functions should\r\n     * depend of `this`. These functions will be made available when evaluating\r\n     * simple expressions.\r\n     */\r\n    getClosure(): T;\r\n    /**\r\n     * Checks if the specified function name exists.\r\n     */\r\n    existsFunction(fname: string): boolean;\r\n}\r\n\r\nexport interface CompiledExpression<T extends FunctionTable> {\r\n    /**\r\n     * Retrieves the source code for this expression.\r\n     */\r\n    readonly source: string;\r\n\r\n    /**\r\n     * Compiled function.\r\n     * @param fTable Function table.\r\n     */\r\n    fn(fTable: T): number; \r\n}\r\n\r\nexport interface ExpressionEvaluator<T extends FunctionTable> {\r\n\r\n    eval(expr: CompiledExpression<T>): number;\r\n\r\n}\r\n\r\nexport interface ExpressionCompiler<T extends FunctionTable> {\r\n\r\n    /**\r\n     * Converts a string or a number of a compiled expression.\r\n     * @param expr Expression.\r\n     */\r\n    compile(expr: string | number): CompiledExpression<T>;\r\n\r\n}\r\n\r\n/**\r\n * Compiles a simple expression into a JavaScript function.\r\n * A simple expression consists of:\r\n *  Names: year, player.hope, ...\r\n *         a-z, 0-9, $_., all segments cannot start with 0-9\r\n *  Numbers: 12, -1.3, 1e-8, Infinity, -Infinity, NaN, ...\r\n *  Strings: 'hello', 'a\\nb', ...\r\n *  Operators: +, -, *, /, (, ), ...\r\n *  White spaces\r\n * This compiler will simply replace variable names with proper JavaScript\r\n * accessors (e.g., `player.hope` -> `__functions.getVar('player.hope')`),\r\n * and function names with proper function calls (e.g., `hasItem` ->\r\n * `__functions.hasItem`), and then let JavaScript compiles the functions.\r\n * For instance, the following expression\r\n *  hasItem('idea') ? player.hope + 1 : 0\r\n * will be converted to\r\n *  __functions.has('idea') ? __functions.getVar('player.hope') + 1 : 0;\r\n * @param expr String representation of the simple expression.\r\n */\r\nexport function compileExpression<T extends FunctionTable>(expr: string, fp: FunctionTableProvider<T>): CompiledExpression<T> {\r\n    const tokens = tokenize(expr);\r\n    let funcBody = '\"use strict\";\\nreturn (';\r\n    let idx = 0;\r\n    while (idx < tokens.length) {\r\n        const curToken = tokens[idx];\r\n        switch (curToken.type) {\r\n            case TokenType.Name:\r\n                if (curToken.text.indexOf('.') > 0 || idx >= tokens.length - 2 || tokens[idx + 1].type !== TokenType.Operator || tokens[idx + 1].text !== '(') {\r\n                    // Normal variable.\r\n                    funcBody += `__functions.getVar('${curToken.text}')`;\r\n                } else {\r\n                    // Function call.\r\n                    if (fp.existsFunction(curToken.text)) {\r\n                        funcBody += `__functions.` + curToken.text;                        \r\n                    } else {\r\n                        throw new Error(`Unsupported function \"${curToken.text}\".`);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.Number:\r\n            case TokenType.Boolean:\r\n            case TokenType.Operator:\r\n            case TokenType.String:\r\n            case TokenType.Delimiter:\r\n                funcBody += curToken.text;\r\n                break;\r\n            default:\r\n                throw new Error('Unexpected token type.');\r\n        }\r\n        ++idx;\r\n    }\r\n    funcBody += ');'\r\n    let fn = new Function('__functions', funcBody);\r\n    return {\r\n        source: expr,\r\n        fn: <(fc: T) => number>fn\r\n    };\r\n}\r\n\r\n","/**\r\n * Retrieves and parses a text file asynchronously.\r\n * @param url URL of the text file.\r\n * @param parser Text parser.\r\n */\r\nexport async function downloadAndParse<T>(url: string, parser: (s: string) => T): Promise<T> {\r\n    return new Promise<T>((resolve, reject) => {\r\n        const request = new XMLHttpRequest();\r\n        request.open('GET', url, true);\r\n        request.onreadystatechange = () => {\r\n            if (request.readyState == XMLHttpRequest.DONE) {\r\n                if (request.status == 200){\r\n                    resolve(parser(request.responseText));                    \r\n                } else {\r\n                    reject(new Error('Error status: ' + request.statusText));\r\n                }\r\n            }\r\n        };\r\n        request.send();\r\n    });\r\n}\r\n","// Returns true if a < b.\r\ntype LessComparator<T> = (a: T, b: T) => boolean;\r\n\r\n/**\r\n * Simple max binary heap based priority queue using weak ordering.\r\n * \r\n * Notes:\r\n * \r\n * 1. Pop ordering of equal elements is unspecified.\r\n * 2. Mutations to elements in the queue will lead to unexpected behavior when\r\n *    such mutations affect ordering.\r\n */\r\nexport class PriorityQueue<T> {\r\n\r\n  private _comparator: LessComparator<T>;\r\n  private _data: T[] = [];\r\n\r\n  /**\r\n   * Constructs a new priority queue. Optionally with a custom comparator.\r\n   * @param comparator If not specified will use JavaScript's \"<\".\r\n   */\r\n  constructor(comparator?: LessComparator<T>) {\r\n    if (comparator) {\r\n      this._comparator = comparator;\r\n    } else {\r\n      this._comparator = (a, b) => a < b;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the number of elements in the queue.\r\n   */\r\n  get length(): number {\r\n    return this._data.length;\r\n  }\r\n\r\n  /**\r\n   * Checks if the queue is empty.\r\n   */\r\n  public empty(): boolean {\r\n    return this._data.length === 0;\r\n  }\r\n\r\n  /**\r\n   * Adds a new element to the queue.\r\n   * @param element \r\n   */\r\n  public push(element: T): void {\r\n    this._data.push(element);\r\n    this._heapUp(this._data.length - 1);\r\n  }\r\n\r\n  /**\r\n   * Removes the top element from the queue, and returns it.\r\n   */\r\n  public pop(): T {\r\n    if (this._data.length === 0) {\r\n      throw new Error('Cannot pop from an empty queue.');\r\n    }\r\n    const top = this._data[0];\r\n    if (this._data.length === 1) {\r\n      this._data.pop();\r\n      return top;\r\n    }\r\n    this._swap(0, this._data.length - 1);\r\n    this._data.pop();\r\n    this._heapDown(0);\r\n    return top;\r\n  }\r\n\r\n  /**\r\n   * Accesses the top element without removing it from the queue.\r\n   */\r\n  public top(): T {\r\n    if (this._data.length === 0) {\r\n      throw new Error('Cannot access the top element of an empty queue.');\r\n    }\r\n    return this._data[0];\r\n  }\r\n\r\n  /**\r\n   * Remove all elements from the queue.\r\n   */\r\n  public clear(): void {\r\n    this._data = [];\r\n  }\r\n\r\n  private _swap(i: number, j: number): void {\r\n    const temp = this._data[i];\r\n    this._data[i] = this._data[j];\r\n    this._data[j] = temp;\r\n  }\r\n\r\n  private _heapUp(i: number): void {\r\n    if (i === 0) return;\r\n    while (i > 0) {\r\n      const parent = (i - 1) >> 1;\r\n      if (this._comparator(this._data[parent], this._data[i])) {\r\n        this._swap(parent, i);\r\n      } else {\r\n        break;\r\n      }\r\n      i = parent;\r\n    }\r\n  }\r\n\r\n  private _heapDown(i: number): void {\r\n    if (this._data.length <= 1) return;\r\n    while (i < this._data.length) {\r\n      const right = (i + 1) << 1;\r\n      const left = right - 1;\r\n      if (left >= this._data.length) break;\r\n      if (right >= this._data.length) {\r\n        if (this._comparator(this._data[i], this._data[left])) {\r\n          this._swap(i, left);\r\n          i = left;\r\n        } else {\r\n          break;\r\n        }\r\n      } else {\r\n        const maxChild =\r\n          this._comparator(this._data[left], this._data[right]) ? right : left;\r\n        if (this._comparator(this._data[i], this._data[maxChild])) {\r\n          this._swap(i, maxChild);\r\n          i = maxChild;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}","import * as seedrandom from 'seedrandom';\r\n\r\n/**\r\n * Samples a integer from [0, w.length) according to the weights defined by w.\r\n * @param w Array of weights.\r\n */\r\nexport function weightedSample(w: ArrayLike<number>,\r\n                               random: () => number): number {\r\n    if (w.length === 0) throw new Error('Must have at least one weight value.');\r\n    let cw: number[] = new Array(w.length + 1);\r\n    let sum = 0;\r\n    for (let i = 0;i < w.length;i++)\r\n    {\r\n        cw[i] = sum;\r\n        if (w[i] < 0) throw new Error('Weights cannot be negative.');\r\n        sum += w[i];\r\n    }\r\n    cw[cw.length - 1] = sum;\r\n    if (sum === 0) throw new Error('Sum of weights must be positive.');\r\n    let p = random() * sum;\r\n    // Should use binary search here!\r\n    let idx = 0;\r\n    for (;idx < w.length;idx++) {\r\n        if (p >= cw[idx] && p < cw[idx + 1]) {\r\n            break;\r\n        }\r\n    }\r\n    return idx;\r\n}\r\n\r\nexport interface RandomSource {\r\n    /**\r\n     * Gets the current random seed.\r\n     */\r\n    seed: string;\r\n    /**\r\n     * Returns the next random number in [0, 1).\r\n     */\r\n    next(): number;\r\n}\r\n\r\nexport class AleaRandomSource implements RandomSource {\r\n\r\n    private _seed: string;\r\n    private _random: seedrandom.StatefulPRNG<seedrandom.State.Alea>;\r\n\r\n    constructor(seed: string) {\r\n        this._seed = seed;\r\n        this._random = seedrandom.alea(seed, {\r\n            state: true\r\n        });\r\n    }\r\n\r\n    get seed(): string {\r\n        return this._seed;\r\n    }\r\n\r\n    next(): number {\r\n        return this._random.double();\r\n    }\r\n\r\n    /**\r\n     * Resets the random source.\r\n     * \r\n     * @param seed If set, will reset the random source using the specified\r\n     * seed. Otherwise, the existing seed will be used.\r\n     */\r\n    reset(seed?: string): void {\r\n        if (seed == undefined) {\r\n            seed = this._seed;\r\n        } else {\r\n            this._seed = seed;\r\n        }\r\n        this._random = seedrandom.alea(seed, {\r\n            state: true\r\n        });\r\n    }\r\n\r\n}\r\n","/**\r\n * Represents an object tagged with an unique id.\r\n */\r\nexport interface IdOwner {\r\n\r\n    /**\r\n     * A unique identifier for this object.\r\n     */\r\n    readonly id: string;\r\n\r\n}\r\n\r\n/**\r\n * Implements a simple registry.\r\n */\r\nexport abstract class SimpleRegistry<T extends IdOwner> {\r\n\r\n    private _items: Map<string, T> = new Map();\r\n\r\n    /**\r\n     * Retrieves the name of the registry.\r\n     */\r\n    abstract get name(): string;\r\n\r\n    /**\r\n     * Adds an item to this registry.\r\n     * Implementation notes:\r\n     * 1. Should throw if a different item instance with the same id is being\r\n     * added.\r\n     * 2. Should do nothing if the given item is already added.\r\n     * @param item Item to be added.\r\n     */\r\n    add(item: T): void {\r\n        const existingItem = this._items.get(item.id);\r\n        if (existingItem != undefined && existingItem !== item) {\r\n            throw new Error('Cannot register two different items under the same id.');\r\n        }\r\n        this._items.set(item.id, item);\r\n    }\r\n\r\n    /**\r\n     * Checks if the given item is in the registry.\r\n     * @param item An instance of the item or its id.\r\n     */\r\n    has(item: T | string): boolean {\r\n        if (typeof item === 'string') {\r\n            return this._items.has(item);\r\n        } else {\r\n            return this._items.get(item.id) === item;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves an item by its id.\r\n     * Implementation notes:\r\n     * 1. Should throw if such an item does not exist.\r\n     * @param id Id of the item to be retrieved.\r\n     */\r\n    get(id: string): T {\r\n        const existingItem = this._items.get(id);\r\n        if (existingItem == undefined) {\r\n            throw new Error(`\"${id}\" does not exist in \"${this.name}\".`);\r\n        }\r\n        return existingItem;\r\n    }\r\n\r\n    /**\r\n     * Iterate through all items in the registry. The callback function will be\r\n     * invoked once for each item in this registry.\r\n     */\r\n    forEach(callback: (item: T) => void): void {\r\n        for (let item of this._items.values()) {\r\n            callback(item);\r\n        }\r\n    }\r\n\r\n}\r\n","import { JsonObject, JsonEncodable, JsonValue } from \"./utils/json\";\r\n\r\ntype EncodedNumber = number | 'NaN' | 'Infinity' | '-Infinity';\r\n\r\nfunction isEncodedNumber(x: any): x is EncodedNumber {\r\n    if (typeof x === 'number') return true;\r\n    if (typeof x === 'string') {\r\n        return x === 'NaN' || x === 'Infinity' || x === '-Infinity';\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction encodeNumber(x: number): EncodedNumber {\r\n    if (isNaN(x)) return 'NaN';\r\n    if (!isFinite(x)) return x > 0 ? \"Infinity\" : \"-Infinity\";\r\n    return x;\r\n}\r\n\r\nfunction decodeNumber(x: EncodedNumber) : number {\r\n    if (typeof x === 'string') {\r\n        if (x === 'NaN') return NaN;\r\n        if (x === 'Infinity') return Infinity;\r\n        if (x === '-Infinity') return -Infinity;\r\n        throw new Error('Unable to decode ' + x);\r\n    }\r\n    return x;\r\n}\r\n\r\nexport class VariableChangedEvent {\r\n\r\n    // Indicates whether all variables are cleared.\r\n    clear: boolean;\r\n    varName: string;\r\n    oldValue: number | undefined;\r\n    newValue: number;\r\n\r\n    constructor(clear: boolean, varName: string, oldValue: number | undefined, newValue: number) {\r\n        this.clear = clear;\r\n        this.varName = varName;\r\n        this.oldValue = oldValue;\r\n        this.newValue = newValue;\r\n    }\r\n\r\n}\r\n\r\ntype VariableChangeHandler = (sender: VariableStore, event: VariableChangedEvent) => void;\r\n\r\nexport class VariableStore implements JsonEncodable {\r\n\r\n    private _variables: Record<string, number> = {};\r\n    private _varLimits: Record<string, [number, number]> = {};\r\n\r\n    /**\r\n     * Variable changed event handler.\r\n     */\r\n    onVariableChanged: VariableChangeHandler | undefined;\r\n\r\n    constructor() {}\r\n\r\n    /**\r\n     * Sets a numeric variable.\r\n     * @param varName Name of the variable.\r\n     * @param value Value.\r\n     * @param checkExistence Whether the existence of this variable should be\r\n     * checked first.\r\n     */\r\n    setVar(varName: string, value: number, checkExistence: boolean = false): void {\r\n        if (checkExistence && !(varName in this._variables)) {\r\n            throw new Error(`Variable \"${varName}\" does not exist.`);\r\n        }\r\n        if (this._varLimits[varName]) {\r\n            if (value > this._varLimits[varName][1]) {\r\n                value = this._varLimits[varName][1];\r\n            }\r\n            if (value < this._varLimits[varName][0]) {\r\n                value = this._varLimits[varName][0];\r\n            }\r\n        }\r\n        let oldValue = this._variables[varName];\r\n        this._variables[varName] = value;\r\n        if (oldValue !== value) {\r\n            const e = new VariableChangedEvent(false, varName, oldValue, value);\r\n            setTimeout(() => this.dispatchChangeEvent(e), 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the lower bound and upper bound of a variable.\r\n     * @param varName Name of the variable.\r\n     * @param lb Lower bound.\r\n     * @param ub Upper bound.\r\n     */\r\n    setVarLimits(varName: string, lb: number, ub: number): void {\r\n        if (isNaN(lb)) throw new Error(\"Lower bound cannot be NaN\");\r\n        if (isNaN(ub)) throw new Error(\"Upper bound cannot be NaN\");\r\n        if (lb > ub) {\r\n            throw new Error('Lower bound cannot be greater than upper bound.');\r\n        }\r\n        this._varLimits[varName] = [lb, ub];\r\n        // Clamp the existing value if exists.\r\n        if (!(varName in this._variables)) return;\r\n        const oldValue = this._variables[varName];\r\n        if (oldValue < lb) {\r\n            this._variables[varName] = lb;\r\n            const e = new VariableChangedEvent(false, varName, oldValue, lb);\r\n            setTimeout(() => this.dispatchChangeEvent(e), 0);\r\n        } else if (oldValue > ub) {\r\n            this._variables[varName] = ub;\r\n            const e = new VariableChangedEvent(false, varName, oldValue, ub);\r\n            setTimeout(() => this.dispatchChangeEvent(e), 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the lower bound and upper bound of a variable.\r\n     * If such bounds are not defined, [-Infinity, Infinity] will be returned.\r\n     * @param varName Name of the variable.\r\n     */\r\n    getVarLimits(varName: string): [number, number] {\r\n        let limits = this._varLimits[varName];\r\n        if (limits) {\r\n            return [limits[0], limits[1]];\r\n        } else {\r\n            return [-Infinity, Infinity];\r\n        }\r\n    }\r\n\r\n    getVar(varName: string, checkExistence: true): number;\r\n    getVar(varName: string, checkExistence: false): number | undefined;\r\n    getVar(varName: string, checkExistence: boolean = true): number | undefined {\r\n        let value = this._variables[varName];\r\n        if (value == undefined && checkExistence) {\r\n            throw new Error(`Variable \"${varName}\" does not exist.`);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Resets all variables.\r\n     */\r\n    reset(): void {\r\n        this.dispatchChangeEvent(new VariableChangedEvent(true, '', 0, 0));\r\n        this._variables = {};\r\n    }\r\n\r\n    dumpToConsole(): void {\r\n        let lines: string[] = [];\r\n        lines.push('[Variables (Limits)]');\r\n        for (let varName in this._variables) {\r\n            const limits = this._varLimits[varName];\r\n            const limitsStr = limits ? ` ([${limits[0]}, ${limits[1]}])` : '';\r\n            lines.push(`${varName}: ${this._variables[varName]}${limitsStr}`);\r\n        }\r\n        console.log(lines.join('\\n'));\r\n    }\r\n\r\n    decodeFromJson(json: JsonValue): void {\r\n        if (json === null || typeof json !== 'object' || Array.isArray(json)) {\r\n            throw new Error('Non-null JSON object expected.');\r\n        }\r\n        this.reset();\r\n        for (const varName in json) {\r\n            const varValue = json[varName];\r\n            if (isEncodedNumber(varValue)) {\r\n                this.setVar(varName, decodeNumber(varValue));\r\n            } else if (Array.isArray(varValue)) {\r\n                if (varValue.length !== 3) {\r\n                    throw new Error('Expect 3 elements: value, lower bound, upper bound.');\r\n                }\r\n                const [value, lb, ub] = varValue;\r\n                if (!isEncodedNumber(value)) {\r\n                    throw new Error('Invalid variable value.');\r\n                }\r\n                if (!isEncodedNumber(lb)) {\r\n                    throw new Error('Invalid variable lower bound.');\r\n                }\r\n                if (!isEncodedNumber(ub)) {\r\n                    throw new Error('Invalid variable upper bound.');\r\n                }\r\n                this.setVar(varName, decodeNumber(value));\r\n                this.setVarLimits(varName, decodeNumber(lb), decodeNumber(ub));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Encoding format:\r\n     * ```\r\n     * {\r\n     *     // With limits\r\n     *     \"varName1\": [$value1, $loweBound1, $upperBound1],\r\n     *     // Without limits\r\n     *     \"varName2\": $value2,\r\n     *     ...\r\n     * }\r\n     * ```\r\n     * Infinity, -Infinity, and NaN values are encoded as strings.\r\n     */\r\n    encodeAsJson(): JsonValue {\r\n        let json: JsonObject = {};\r\n        for (const varName in this._variables) {\r\n            const varValue: number = this._variables[varName];\r\n            if (varName in this._varLimits) {\r\n                const [lb, ub] = this._varLimits[varName];\r\n                json[varName] = [\r\n                    encodeNumber(varValue), encodeNumber(lb), encodeNumber(ub)\r\n                ];\r\n            } else {\r\n                json[varName] = encodeNumber(varValue);\r\n            }\r\n        }\r\n        return json;\r\n    }\r\n\r\n    protected dispatchChangeEvent(event: VariableChangedEvent) {\r\n        if (this.onVariableChanged) {\r\n            this.onVariableChanged(this, event);\r\n        }\r\n    }\r\n\r\n}\r\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import { load as loadYaml } from 'js-yaml';\r\nimport queryString from 'query-string';\r\n\r\nimport { GuiGameWindow, GuiGameWindowDefinition } from './gui/guiGame';\r\nimport { LocalizationDictionary } from './i18n/localization';\r\nimport { GameEngine, GameConfig, GameActionProxy } from './gameEngine';\r\nimport { SimpleGameTextEngine } from './gui/textEngine';\r\nimport { downloadAndParse } from './utils/network';\r\nimport { SetBuilder } from './utils/collection';\r\n\r\ninterface DebugConfig {\r\n    dumpTranslationKeys?: boolean;\r\n}\r\n\r\ninterface AppConfig extends GameConfig {\r\n    guiDefinitionUrl?: string;\r\n    languageFileUrl?: string;\r\n    debugConfig?: DebugConfig;\r\n}\r\n\r\nclass App {\r\n\r\n    private _config: AppConfig;\r\n    private _container: HTMLElement;\r\n    private _localizer: LocalizationDictionary;\r\n    private _gameEngine: GameEngine;\r\n    private _actionProxy: GameActionProxy;\r\n    private _gui?: GuiGameWindow;\r\n    private _started: boolean = false;\r\n\r\n    constructor(container: HTMLElement, config: AppConfig) {\r\n        this._config = config;\r\n        this._container = container;\r\n        this._actionProxy = new GameActionProxy();\r\n        this._gameEngine = new GameEngine(config, this._actionProxy);\r\n        this._localizer = new LocalizationDictionary();\r\n    }\r\n\r\n    async start(): Promise<void> {\r\n        if (this._started) {\r\n            throw new Error('App already started!');\r\n        }\r\n        // The language file needs to be loaded first before rendering the game\r\n        // GUI.\r\n        if (this._config.languageFileUrl) {\r\n            await this._localizer.loadFrom(this._config.languageFileUrl);\r\n        } else {\r\n            console.warn('Missing language file!');\r\n        }\r\n        const textEngine = new SimpleGameTextEngine(this._localizer,\r\n                                                    this._gameEngine.variableStore,\r\n                                                    this._gameEngine.random);\r\n        if (!this._config.guiDefinitionUrl) {\r\n            throw new Error('Missing GUI config file!');\r\n        }\r\n        let guiDef = await <GuiGameWindowDefinition>downloadAndParse(\r\n            this._config.guiDefinitionUrl, loadYaml);\r\n        let gui = new GuiGameWindow(this._container, textEngine,\r\n                                    this._gameEngine, guiDef);\r\n        this._actionProxy.attachGui(gui);\r\n        this._gameEngine.onGameEnd = (sender, event) => {\r\n            window.dispatchEvent(new CustomEvent('gameEnd', {\r\n                detail: {\r\n                    state: event.state,\r\n                    endingType: event.endingType\r\n                }\r\n            }));\r\n        };\r\n        await this._gameEngine.start(false);\r\n        // Debugging info for translation keys\r\n        if (this._config.debugConfig) {\r\n           this._dumpDebugInfo(this._config.debugConfig);\r\n        }\r\n        // Start game loop\r\n        const gameLoop = () => {\r\n            setTimeout(() => this._gameEngine.tick().then(gameLoop), 50);\r\n        };\r\n        gameLoop();\r\n        this._started = true;\r\n    }\r\n\r\n    private _dumpDebugInfo(debugConfig: DebugConfig): void {\r\n        if (debugConfig.dumpTranslationKeys) {\r\n            const allEvents = this._gameEngine.eventEngine.getEvents();\r\n            const builder = new SetBuilder<string>();\r\n            for (let event of allEvents) {\r\n                builder.addAll(event.collectTranslationKeys());\r\n            }\r\n            this._gameEngine.itemRegistry.forEach((item) => {\r\n                this._localizer.addRequiredKey(item.unlocalizedName);\r\n                this._localizer.addRequiredKey(item.unlocalizedDescription);\r\n            });\r\n            this._gameEngine.statusRegistry.forEach((status) => {\r\n                this._localizer.addRequiredKey(status.unlocalizedName);\r\n                this._localizer.addRequiredKey(status.unlocalizedDescription);\r\n            })\r\n            builder.get().forEach((key) => this._localizer.addRequiredKey(key));\r\n            const requiredKeys = this._localizer.dumpRequiredTranslationKeys();\r\n            console.log(`# Required translation keys (${requiredKeys.length}):\\n${requiredKeys.join('\\n')}`);\r\n            const missingKeys = this._localizer.dumpMissingTranslationKeys();\r\n            console.log(`# Missing translation keys (${missingKeys.length}):\\n${missingKeys.join('\\n')}`);\r\n            const unnecessaryKeys = this._localizer.dumpUnnecessaryTranslationKeys();\r\n            console.log(`# Unnecessary translation keys (${unnecessaryKeys.length}):\\n${unnecessaryKeys.join('\\n')}`);\r\n        }\r\n    }\r\n}\r\n\r\nlet appConfig: AppConfig = {};\r\nlet appConfigJson = document.getElementById('app_config')?.textContent;\r\nif (appConfigJson) {\r\n    appConfig = {...JSON.parse(appConfigJson)};\r\n}\r\nlet parsedHash = queryString.parse(window.location.hash || '');\r\nlet seed = parsedHash['init_seed'];\r\nif (typeof seed === 'string') {\r\n    appConfig['initialRandomSeed'] = seed;\r\n}\r\n\r\nconst app = new App(document.body, appConfig);\r\napp.start().then(() => {\r\n    console.log('App started successfully.');\r\n});\r\n"],"names":["alea","xor128","xorwow","xorshift7","xor4096","tychei","sr","module","exports","global","define","Alea","seed","me","this","mash","n","data","String","i","length","h","charCodeAt","Mash","next","t","s0","c","s1","s2","copy","f","impl","opts","xg","state","prng","int32","double","quick","XorGen","strseed","b","d","a","Math","floor","k","result","x","y","z","w","v","X","j","limit","max","init","slice","Date","push","pool","math","nodecrypto","width","startdenom","pow","significance","overflow","mask","seedrandom","options","callback","key","shortseed","mixkey","flatten","entropy","tostring","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","e","browser","navigator","plugins","screen","autoseed","arc4","ARC4","g","S","pass","is_math_call","keylen","s","count","r","obj","depth","prop","typ","smear","stringseed","fromCharCode","apply","random","ex","self","AttributeModifierType","Attribute","constructor","_id","_baseValue","_minValue","Infinity","_maxValue","id","baseValue","minValue","maxValue","AttributeRegistry","SimpleRegistry","name","loadAttributes","url","downloadAndParse","load","undefined","Array","isArray","Error","attributeDefs","attributeDef","attributeId","isNaN","add","console","log","AttributeModifier","_target","_type","_amount","target","type","amount","fromObject","registry","has","Absolute","Relative","RelativeToBase","CalculateAttributeValue","attribute","combinedAmounts","value","relativeToBase","absolute","relative","min","loadEffectsFromObjectArray","objArray","attributeModifiers","modifier","EffectProviderCollectionChangedEvent","clear","item","oldCount","newCount","EffectProviderCollection","_items","_registry","maxStackSize","items","get","dispatchChangeEvent","remove","getCombinedAttributeModifierAmountsOf","absoluteAmount","relativeAmount","relativeToBaseAmount","effects","getEffects","effect","attributeModifier","event","onChanged","Item","_rarity","_icon","_effects","unlocalizedName","unlocalizedDescription","rarity","icon","ItemRegistry","_attributeRegistry","super","loadItems","itemDefs","itemDef","Inventory","decodeFromJson","json","itemData","encodeAsJson","itemId","Status","_duration","duration","StatusRegistry","loadStatus","statusDefs","statusDef","StatusTable","_remainingTicks","tick","pending","statusData","statusId","durationLeft","isFinite","EndGameState","EventActionFactory","conditionFactory","expressionCompiler","_deserializers","Map","_deserializationContext","actionFactory","translationKeySourceFactory","TranslationKeySourceFactory","registerDeserializer","def","set","ID","fromJSONObject","deserializer","fromJSONArray","arr","actions","EALog","EventAction","_message","_dumpVariables","context","execute","variableStore","dumpToConsole","EventActionResult","Ok","EADisplayMessage","_confirm","actionProxy","displayMessage","getTranslationKey","then","collectTranslationKeys","builder","SetBuilder","addAll","EADisplayRandomMessage","_messages","messages","message","msgId","EADisplayChoices","_choiceMessages","_requirements","_actions","choiceMessages","requirements","curActions","EventActionList","compile","choices","evaluator","eval","displayChoices","choiceId","choiceMessage","actionList","EARandom","weightExprs","_weightExprs","o","weight","_randomIndex","weightedSample","map","EACoinFlip","_p","_successActionList","_failActionList","p","successActions","failActions","_coinFlip","EASwitch","_conditions","branches","conditions","branch","fromJSON","check","EALoop","_stopCondition","_maxIterations","_checkStopConditionAtEnd","_i","stopCondition","stopConditionDef","maxIterations","checkStopConditionAtEnd","_nextDoWhileIteration","_nextWhileDoIteration","futureResult","StopExecutionGlobally","EAUpdateVariable","_varName","_updateExpr","expr","setVar","EAUpdateVariables","_varNames","_updateExprs","varNames","exprs","varName","EAUpdateVariableLimits","_limitsByVarName","limitsByVarName","limits","setVarLimits","EAGiveItem","_itemId","_amountExpr","inventory","EAUpdateItemAmounts","_itemIds","itemIds","updateExprs","EAEndGame","_winning","_endingType","_fx","setEndGameState","Win","Loss","EASetStatus","_statusId","_on","statusTable","EATriggerEvents","_triggerInfoList","triggerInfoList","trigger","triggerId","priority","triggerInfo","probability","eventEngine","EAEnableEvents","_eventIds","eventIds","eventId","enableEvent","EADisableEvents","disableEvent","EventConditionFactory","conditionId","ECExpression","objectArray","EventCondition","_expression","expression","ECNot","_condition","condition","ECAll","cond","ECAny","ECSome","_min","_max","EMPTY_TRANSLATION_KEYS","Set","_nextIndex","_executeNext","action","StopExecutionLocally","EMPTY_EVENT_ACTION_LIST","GameEvent","_trigger","_probability","_exclusions","_once","_disabledByDefault","exclusions","once","disabledByDefault","comparePendingTrigger","order","GameEventEngine","_eventsByTrigger","_eventInfoById","_pendingTriggers","PriorityQueue","_pendingTriggerOrder","_ongoingTrigger","info","disabled","registerEvents","events","registerEvent","occurrenceCount","existingEvents","unregisterEvent","delete","index","indexOf","splice","getEvents","values","getEventOccurrenceCount","processNextTrigger","empty","pendingTrigger","pop","skip","reset","EventExpressionEngine","attributes","tracker","_cache","_variableStore","_attributes","_inventory","_statusTable","_random","_eventOccurrenceTracker","_fTable","_initFunctionTable","getVar","lb","ub","eventOccurred","upperBound","getVarLimits","lowerBound","itemCount","totalMonths","getAttributeValue","amountsItem","amountsStatus","hasStatus","randi","round","ceil","clip","getClosure","existsFunction","fname","source","toString","fn","compileExpression","val","GameEventLoader","ec","cf","af","_exprCompiler","_conditionFactory","_actionFactory","loadFromString","parseEvents","parseEvent","ConstantTranslationKeySource","_key","RandomTranslationKeySource","_keySources","_weights","weights","keySource","ConditionalTranslationKeySource","_defaultKey","_expressionCompiler","keySources","text","defaultKeySource","newSeedFromNativeRandom","substring","GameEndEvent","endingType","GameEngine","config","ap","_dataLoaded","_config","Object","assign","_actionProxy","_itemRegistry","_statusRegistry","VariableStore","_endGameState","None","AleaRandomSource","initialRandomSeed","_eventEngine","_expressionEngine","_executionContext","attributeRegistry","itemRegistry","statusRegistry","expressionEngine","loadGameData","_initFactories","attributeDefinitionUrl","warn","itemDefinitionUrl","statusDefinitionUrl","eventLoader","eventDefinitionUrl","start","newRandomSeed","onGameEnd","GameActionProxy","attachGui","gui","_guiGame","confirm","fx","GuiBase","container","textRenderer","_container","_textEngine","setHidden","hidden","style","display","removeAllChildrenOf","el","firstChild","removeChild","createAndAddChild","className","document","createElement","appendChild","GuiEffectProviderList","textEngine","collection","definition","_collection","_titleContainer","innerHTML","localizeAndRender","title","getLocalizationDictionary","addRequiredKey","_listContainer","renderList","onclick","HTMLLIElement","onItemClicked","retrieveEffectProviderFromElement","GuiItemList","_raritySpecificStyles","minRarity","maxRarity","styleClass","styleClasses","node","setAttribute","classList","localizedItemName","getAttribute","GuiStatusList","status","GuiFooter","modalBox","localizer","preamble","buttons","buttonDef","separator","textContent","button","href","messageTitle","confirmText","preventDefault","Particle","vx","vy","ax","ay","active","_el","element","addToScene","scene","removeFromScene","updatePosition","stepSize","top","left","GuiFX","confetti","colors","particles","viewPortWidth","offsetWidth","viewPortHeight","body","offsetHeight","nActive","lastTimestamp","backgroundColor","height","animate","timestamp","requestAnimationFrame","GuiGameWindow","gameEngine","_gameEngine","_statsBar","GuiStatsBar","retrieveElement","statsBar","_messageWindow","GuiMessageWindow","messageWindow","_modalBox","GuiModalBox","_itemList","itemList","_statusList","statusList","_footer","footer","onVariableChanged","sender","handleVariableUpdate","playFx","getElementById","CJK_REGEXP","RegExp","join","_messageContainer","_choicesContainer","typewriterSpeed","_typewriterSpeed","_typewriterFrameTime","typewriteMessage","updateMessage","Promise","resolve","btnConfirm","choiceButtons","btn","html","pText","segments","idx","lastIdx","currentChar","test","segmentMessage","localize","curText","lastStep","startingTimestamp","elapsedTime","steps","render","pIcon","img","src","_pending","_shown","_contentBox","_confirmBtn","m","shift","_setContent","_clearContent","GuiStatsBarItem","exprCompiler","_conditionalStyles","_text","conditionalStyles","conditionExpression","classNames","update","ee","conditionMet","_itemsByTriggeringVariable","_expressionEvaluator","leftContainer","rightContainer","itemContainer","side","updateTrigger","variables","SimpleGameTextEngine","_ldict","replace","match","p1","p2","specialVarName","_evalSpecialVariable","isVariableName","toFixed","parseInt","stack","TextStyleMarkupMap","curChar","markupConsumed","renderWithStyle","translate","window","location","protocol","host","pathname","encodeURIComponent","LocalizationDictionary","_dict","_requiredTranslationKeys","addTranslation","translationKey","translation","dumpMissingTranslationKeys","missingKeys","requiredKey","sort","dumpRequiredTranslationKeys","requiredKeys","dumpUnnecessaryTranslationKeys","unnecessaryKeys","keys","loadFrom","nTranslations","_set","_built","inputs","elements","TokenType","regexGroups","tokenType","Whitespace","regex","Boolean","Name","Number","Operator","Delimiter","fp","tokens","matched","exec","tokenize","funcBody","curToken","Function","parser","reject","request","XMLHttpRequest","open","onreadystatechange","readyState","DONE","responseText","statusText","send","comparator","_data","_comparator","_heapUp","_swap","_heapDown","temp","parent","right","maxChild","cw","sum","_seed","existingItem","forEach","isEncodedNumber","encodeNumber","decodeNumber","NaN","VariableChangedEvent","oldValue","newValue","_variables","_varLimits","checkExistence","setTimeout","lines","limitsStr","varValue","token","singleMatcher","multiMatcher","decodeComponents","components","split","decodeURIComponent","prototype","concat","call","decode","input","decodeUriComponent","encodedURI","TypeError","replaceMap","entries","customDecodeURIComponent","includeKeys","object","predicate","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","excludeKeys","isNothing","subject","common","isObject","toArray","sequence","repeat","string","cycle","isNegativeZero","number","NEGATIVE_INFINITY","extend","sourceKeys","formatError","exception","compact","where","reason","mark","line","column","snippet","YAMLException$1","captureStackTrace","create","getLine","buffer","lineStart","lineEnd","position","maxLineLength","head","tail","maxHalfLength","str","pos","padStart","maxLength","indent","linesBefore","linesAfter","re","lineStarts","lineEnds","foundLineNo","lineNoLength","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","tag","kind","construct","instanceOf","represent","representName","defaultStyle","multi","styleAliases","alias","compileStyleAliases","compileList","schema","currentType","newIndex","previousType","previousIndex","Schema$1","implicit","explicit","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","scalar","mapping","fallback","collectType","arguments","compileMap","seq","failsafe","_null","canonical","lowercase","uppercase","camelcase","bool","isOctCode","isDecCode","int","ch","hasDigits","sign","binary","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","SCIENTIFIC_WITHOUT_DOT","float","toLowerCase","POSITIVE_INFINITY","parseFloat","res","core","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","year","month","day","hour","minute","second","date","fraction","delta","UTC","setTime","getTime","toISOString","merge","BASE64_MAP","code","bitlen","charAt","tailbits","bits","_hasOwnProperty$3","hasOwnProperty","_toString$2","omap","pair","pairKey","pairHasKey","objectKeys","_toString$1","pairs","_hasOwnProperty$2","_default","_hasOwnProperty$1","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","simpleEscapeSequence","charFromCodepoint","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","throwError","throwWarning","directiveHandlers","YAML","args","major","minor","version","checkLineBreaks","TAG","handle","prefix","tagMap","err","captureSegment","end","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","configurable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readBlockSequence","nodeIndent","_line","_tag","_anchor","anchor","detected","anchorMap","composeNode","readTagProperty","tagHandle","tagName","isVerbatim","isNamed","readAnchorProperty","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","typeList","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","following","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readBlockMapping","_lineStart","_pos","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","captureStart","folding","tmp","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","captureEnd","readSingleQuotedScalar","hexLength","hexResult","readDoubleQuotedScalar","readAlias","withinFlowCollection","hasPendingContent","_lineIndent","_kind","readPlainScalar","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","loader","loadAll","iterator","_toString","_hasOwnProperty","CHAR_BOM","CHAR_TAB","CHAR_LINE_FEED","CHAR_CARRIAGE_RETURN","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_EQUALS","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","encodeHex","character","QUOTING_TYPE_SINGLE","QUOTING_TYPE_DOUBLE","State","noArrayIndent","skipInvalid","flowLevel","styleMap","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","generateNextLine","level","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","codePointAt","first","needIndentIndicator","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","isPlainSafeLast","writeScalar","iskey","dump","testImplicitResolving","blockHeader","dropEndingNewline","moreIndented","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","foldString","escapeSeq","escapeString","indentIndicator","breakRe","curr","writeBlockSequence","writeNode","detectType","block","isblockseq","tagStr","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","objectKeyList","writeBlockMapping","writeFlowMapping","writeFlowSequence","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","renamed","from","to","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","YAMLException","types","null","safeLoad","safeLoadAll","safeDump","isNullOrUndefined","strictUriEncode","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","strict","keysSorter","removeHash","hashStart","parseValue","parseNumbers","trim","parseBooleans","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","includes","isEncodedArray","arrayValue","flat","parserForArrayFormat","returnValue","parameter","parameter_","key2","value2","reduce","stringify","shouldFilter","skipNull","skipEmptyString","keyValueSep","encoderForArrayFormat","objectCopy","filter","parseUrl","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","splitOnFirst","separatorIndex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","amdD","amdO","getter","__esModule","toStringTag","nmd","paths","children","appConfig","appConfigJson","JSON","_started","_localizer","languageFileUrl","guiDefinitionUrl","guiDef","dispatchEvent","CustomEvent","detail","debugConfig","_dumpDebugInfo","gameLoop","dumpTranslationKeys","allEvents"],"sourceRoot":""}